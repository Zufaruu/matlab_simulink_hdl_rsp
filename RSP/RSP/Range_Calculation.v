// -------------------------------------------------------------
// 
// File Name: C:\Users\acer\OneDrive\Documents\ITS CAK V2\Magang\BRIN\Progress\Matlab Simulink\HDL Coder\proyek\RSP\RSP\RSP\Range_Calculation.v
// Created: 2023-09-27 04:09:54
// 
// Generated by MATLAB 9.14 and HDL Coder 4.1
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Range_Calculation
// Source Path: RSP/RSP/Range Processor/Range Calculator/Range Calculation
// Hierarchy Level: 3
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Range_Calculation
          (max_corr_lag,
           range);


  input   [15:0] max_corr_lag;  // uint16
  output  signed [79:0] range;  // sfix80_En31


  wire signed [31:0] T_sampling_out1;  // sfix32_En31
  wire signed [16:0] Product_cast;  // sfix17
  wire signed [48:0] Product_mul_temp;  // sfix49_En31
  wire signed [47:0] Product_out1;  // sfix48_En31
  wire [31:0] LightSpeed_km_out1;  // uint32
  wire signed [32:0] Product1_cast;  // sfix33
  wire signed [80:0] Product1_mul_temp;  // sfix81_En31
  wire signed [79:0] Product1_out1;  // sfix80_En31
  wire [7:0] RTT_Constant_out1;  // uint8
  reg signed [79:0] Divide_out1;  // sfix80_En31
  reg signed [80:0] Divide_div_temp;  // sfix81_En31
  reg signed [80:0] Divide_cast;  // sfix81_En31
  reg signed [8:0] Divide_cast_0;  // sfix9


  assign T_sampling_out1 = 32'sb00000000000000000000000000011010;



  assign Product_cast = {1'b0, max_corr_lag};
  assign Product_mul_temp = Product_cast * T_sampling_out1;
  assign Product_out1 = Product_mul_temp[47:0];



  assign LightSpeed_km_out1 = 32'b00000000000001001001001111100000;



  assign Product1_cast = {1'b0, LightSpeed_km_out1};
  assign Product1_mul_temp = Product_out1 * Product1_cast;
  assign Product1_out1 = Product1_mul_temp[79:0];



  assign RTT_Constant_out1 = 8'b00000010;



  always @(Product1_out1, RTT_Constant_out1) begin
    Divide_div_temp = 81'sh000000000000000000000;
    Divide_cast = 81'sh000000000000000000000;
    Divide_cast_0 = 9'sb000000000;
    if (RTT_Constant_out1 == 8'b00000000) begin
      if (Product1_out1 < 80'sh00000000000000000000) begin
        Divide_out1 = 80'sh80000000000000000000;
      end
      else begin
        Divide_out1 = 80'sh7FFFFFFFFFFFFFFFFFFF;
      end
    end
    else begin
      Divide_cast = {Product1_out1[79], Product1_out1};
      Divide_cast_0 = {1'b0, RTT_Constant_out1};
      Divide_div_temp = Divide_cast / Divide_cast_0;
      if ((Divide_div_temp[80] == 1'b0) && (Divide_div_temp[79] != 1'b0)) begin
        Divide_out1 = 80'sh7FFFFFFFFFFFFFFFFFFF;
      end
      else if ((Divide_div_temp[80] == 1'b1) && (Divide_div_temp[79] != 1'b1)) begin
        Divide_out1 = 80'sh80000000000000000000;
      end
      else begin
        Divide_out1 = Divide_div_temp[79:0];
      end
    end
  end



  assign range = Divide_out1;

endmodule  // Range_Calculation

