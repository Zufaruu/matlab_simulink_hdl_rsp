// -------------------------------------------------------------
// 
// File Name: C:\Users\acer\OneDrive\Documents\ITS CAK V2\Magang\BRIN\Progress\Matlab Simulink\HDL Coder\proyek\RSP\RSP\RSP.v
// Created: 2023-08-06 21:50:35
// 
// Generated by MATLAB 9.14 and HDL Coder 4.1
// 
// 
// -- -------------------------------------------------------------
// -- Rate and Clocking Details
// -- -------------------------------------------------------------
// Model base rate: 1
// Target subsystem base rate: 1
// 
// 
// Clock Enable  Sample Time
// -- -------------------------------------------------------------
// ce_out        1
// -- -------------------------------------------------------------
// 
// 
// Output Signal                 Clock Enable  Sample Time
// -- -------------------------------------------------------------
// max_corr                      ce_out        1
// max_corr_lag                  ce_out        1
// -- -------------------------------------------------------------
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: RSP
// Source Path: RSP
// Hierarchy Level: 0
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module RSP
          (clk,
           reset,
           clk_enable,
           ce_out,
           max_corr,
           max_corr_lag);


  input   clk;
  input   reset;
  input   clk_enable;
  output  ce_out;
  output  signed [31:0] max_corr;  // sfix32_En31
  output  signed [31:0] max_corr_lag;  // int32


  wire enb;
  wire [7:0] count_step;  // uint8
  wire [7:0] count_from;  // uint8
  reg [7:0] Rx_Signal_Counter_out1;  // uint8
  wire [7:0] count;  // uint8
  wire need_to_wrap;
  wire [7:0] count_value;  // uint8
  wire signed [15:0] Rx_Signal_1 [0:255];  // sfix16_En17 [256]
  wire signed [15:0] Rx_Signal_out1;  // sfix16_En17


  // Count limited, Unsigned Counter
  //  initial value   = 0
  //  step value      = 1
  //  count to value  = 255
  assign count_step = 8'b00000001;



  assign count_from = 8'b00000000;



  assign enb = clk_enable;

  assign count = Rx_Signal_Counter_out1 + count_step;



  assign need_to_wrap = Rx_Signal_Counter_out1 == 8'b11111111;



  assign count_value = (need_to_wrap == 1'b0 ? count :
              count_from);



  always @(posedge clk or posedge reset)
    begin : Rx_Signal_Counter_process
      if (reset == 1'b1) begin
        Rx_Signal_Counter_out1 <= 8'b00000000;
      end
      else begin
        if (enb) begin
          Rx_Signal_Counter_out1 <= count_value;
        end
      end
    end



  assign Rx_Signal_1[0] = 16'sb0010100010110101;
  assign Rx_Signal_1[1] = 16'sb0011110111000011;
  assign Rx_Signal_1[2] = 16'sb1101010010111000;
  assign Rx_Signal_1[3] = 16'sb1111010101000100;
  assign Rx_Signal_1[4] = 16'sb0010001000101110;
  assign Rx_Signal_1[5] = 16'sb1110100000010001;
  assign Rx_Signal_1[6] = 16'sb0001110011101110;
  assign Rx_Signal_1[7] = 16'sb0010101101101000;
  assign Rx_Signal_1[8] = 16'sb0011010111011110;
  assign Rx_Signal_1[9] = 16'sb0000110010101111;
  assign Rx_Signal_1[10] = 16'sb1100100100100011;
  assign Rx_Signal_1[11] = 16'sb0001101011011000;
  assign Rx_Signal_1[12] = 16'sb1110101010010111;
  assign Rx_Signal_1[13] = 16'sb0010011010010001;
  assign Rx_Signal_1[14] = 16'sb0001010100100101;
  assign Rx_Signal_1[15] = 16'sb1101011110100000;
  assign Rx_Signal_1[16] = 16'sb0000110111111101;
  assign Rx_Signal_1[17] = 16'sb0001000011100001;
  assign Rx_Signal_1[18] = 16'sb0101001011101011;
  assign Rx_Signal_1[19] = 16'sb1110111011100111;
  assign Rx_Signal_1[20] = 16'sb0000101011000101;
  assign Rx_Signal_1[21] = 16'sb1101101100000000;
  assign Rx_Signal_1[22] = 16'sb0001100101110000;
  assign Rx_Signal_1[23] = 16'sb0100011011111101;
  assign Rx_Signal_1[24] = 16'sb0011100110001101;
  assign Rx_Signal_1[25] = 16'sb0011001011010100;
  assign Rx_Signal_1[26] = 16'sb1110110110100001;
  assign Rx_Signal_1[27] = 16'sb0000010010011011;
  assign Rx_Signal_1[28] = 16'sb0001100011110001;
  assign Rx_Signal_1[29] = 16'sb1110100101000111;
  assign Rx_Signal_1[30] = 16'sb0011110111101011;
  assign Rx_Signal_1[31] = 16'sb1111111010001000;
  assign Rx_Signal_1[32] = 16'sb1111100000010001;
  assign Rx_Signal_1[33] = 16'sb1100011000100011;
  assign Rx_Signal_1[34] = 16'sb1100100110001011;
  assign Rx_Signal_1[35] = 16'sb0001011110110100;
  assign Rx_Signal_1[36] = 16'sb1101001101001111;
  assign Rx_Signal_1[37] = 16'sb1100111010100000;
  assign Rx_Signal_1[38] = 16'sb0100010101011100;
  assign Rx_Signal_1[39] = 16'sb1100000010000000;
  assign Rx_Signal_1[40] = 16'sb1111000101000001;
  assign Rx_Signal_1[41] = 16'sb1101101111000011;
  assign Rx_Signal_1[42] = 16'sb1111010110001111;
  assign Rx_Signal_1[43] = 16'sb0011110010011001;
  assign Rx_Signal_1[44] = 16'sb1111001010001100;
  assign Rx_Signal_1[45] = 16'sb1111110111101001;
  assign Rx_Signal_1[46] = 16'sb1101001110010101;
  assign Rx_Signal_1[47] = 16'sb0000011011001011;
  assign Rx_Signal_1[48] = 16'sb1101100111000001;
  assign Rx_Signal_1[49] = 16'sb0001001101100001;
  assign Rx_Signal_1[50] = 16'sb1101010000101001;
  assign Rx_Signal_1[51] = 16'sb1110001001000011;
  assign Rx_Signal_1[52] = 16'sb1111000110010110;
  assign Rx_Signal_1[53] = 16'sb0010001100011101;
  assign Rx_Signal_1[54] = 16'sb0000111001000000;
  assign Rx_Signal_1[55] = 16'sb0000100110111111;
  assign Rx_Signal_1[56] = 16'sb1111000001111110;
  assign Rx_Signal_1[57] = 16'sb1100111010010001;
  assign Rx_Signal_1[58] = 16'sb0001000000100011;
  assign Rx_Signal_1[59] = 16'sb0000001000111100;
  assign Rx_Signal_1[60] = 16'sb1011000110101001;
  assign Rx_Signal_1[61] = 16'sb0000010111011001;
  assign Rx_Signal_1[62] = 16'sb0000000000100011;
  assign Rx_Signal_1[63] = 16'sb1101010110110011;
  assign Rx_Signal_1[64] = 16'sb1111100100000001;
  assign Rx_Signal_1[65] = 16'sb1111010010001110;
  assign Rx_Signal_1[66] = 16'sb0000101000100000;
  assign Rx_Signal_1[67] = 16'sb1101000111101001;
  assign Rx_Signal_1[68] = 16'sb1110011110101110;
  assign Rx_Signal_1[69] = 16'sb0101010001011000;
  assign Rx_Signal_1[70] = 16'sb1101111011111010;
  assign Rx_Signal_1[71] = 16'sb1111110110010101;
  assign Rx_Signal_1[72] = 16'sb0001111001110001;
  assign Rx_Signal_1[73] = 16'sb0001000011011100;
  assign Rx_Signal_1[74] = 16'sb0011000001010001;
  assign Rx_Signal_1[75] = 16'sb1100110001110001;
  assign Rx_Signal_1[76] = 16'sb1100101110101111;
  assign Rx_Signal_1[77] = 16'sb1110010100001011;
  assign Rx_Signal_1[78] = 16'sb0000001010100011;
  assign Rx_Signal_1[79] = 16'sb1110111111010101;
  assign Rx_Signal_1[80] = 16'sb0010011011111011;
  assign Rx_Signal_1[81] = 16'sb0010100000000011;
  assign Rx_Signal_1[82] = 16'sb1111111111000100;
  assign Rx_Signal_1[83] = 16'sb0100001100011000;
  assign Rx_Signal_1[84] = 16'sb0010010011010110;
  assign Rx_Signal_1[85] = 16'sb0001001001001011;
  assign Rx_Signal_1[86] = 16'sb1101110011111001;
  assign Rx_Signal_1[87] = 16'sb0001110000100000;
  assign Rx_Signal_1[88] = 16'sb1110000011011011;
  assign Rx_Signal_1[89] = 16'sb1111111111010010;
  assign Rx_Signal_1[90] = 16'sb1101011001000001;
  assign Rx_Signal_1[91] = 16'sb1101101010000010;
  assign Rx_Signal_1[92] = 16'sb0001110011101111;
  assign Rx_Signal_1[93] = 16'sb0110011101100010;
  assign Rx_Signal_1[94] = 16'sb1110000101001010;
  assign Rx_Signal_1[95] = 16'sb0000111100100111;
  assign Rx_Signal_1[96] = 16'sb0001010101001011;
  assign Rx_Signal_1[97] = 16'sb1111001100010001;
  assign Rx_Signal_1[98] = 16'sb0000111001100000;
  assign Rx_Signal_1[99] = 16'sb1010110011101101;
  assign Rx_Signal_1[100] = 16'sb0001001101111111;
  assign Rx_Signal_1[101] = 16'sb1111110000001110;
  assign Rx_Signal_1[102] = 16'sb0011000010001011;
  assign Rx_Signal_1[103] = 16'sb0000011100001010;
  assign Rx_Signal_1[104] = 16'sb0010010000110101;
  assign Rx_Signal_1[105] = 16'sb1100101011000100;
  assign Rx_Signal_1[106] = 16'sb0000101110110101;
  assign Rx_Signal_1[107] = 16'sb0000111010000101;
  assign Rx_Signal_1[108] = 16'sb1101111110111101;
  assign Rx_Signal_1[109] = 16'sb1110110111000010;
  assign Rx_Signal_1[110] = 16'sb1110001100011001;
  assign Rx_Signal_1[111] = 16'sb1011010010010111;
  assign Rx_Signal_1[112] = 16'sb1111001011000000;
  assign Rx_Signal_1[113] = 16'sb1110010000011110;
  assign Rx_Signal_1[114] = 16'sb0010101000010010;
  assign Rx_Signal_1[115] = 16'sb1111000010000000;
  assign Rx_Signal_1[116] = 16'sb0010010110000001;
  assign Rx_Signal_1[117] = 16'sb0001001101011000;
  assign Rx_Signal_1[118] = 16'sb1101001101010011;
  assign Rx_Signal_1[119] = 16'sb1111011011111010;
  assign Rx_Signal_1[120] = 16'sb0011111111101110;
  assign Rx_Signal_1[121] = 16'sb0001001101010010;
  assign Rx_Signal_1[122] = 16'sb0011100100111110;
  assign Rx_Signal_1[123] = 16'sb1011001001000101;
  assign Rx_Signal_1[124] = 16'sb1101010111011111;
  assign Rx_Signal_1[125] = 16'sb0000100111011111;
  assign Rx_Signal_1[126] = 16'sb0010000100000110;
  assign Rx_Signal_1[127] = 16'sb1101100100110100;
  assign Rx_Signal_1[128] = 16'sb0010101101011100;
  assign Rx_Signal_1[129] = 16'sb1110100111110110;
  assign Rx_Signal_1[130] = 16'sb0011010111001011;
  assign Rx_Signal_1[131] = 16'sb1101011110001101;
  assign Rx_Signal_1[132] = 16'sb1111001010010111;
  assign Rx_Signal_1[133] = 16'sb0000110100001000;
  assign Rx_Signal_1[134] = 16'sb1111110010011110;
  assign Rx_Signal_1[135] = 16'sb0010001011011010;
  assign Rx_Signal_1[136] = 16'sb0010010100011011;
  assign Rx_Signal_1[137] = 16'sb0010101100100100;
  assign Rx_Signal_1[138] = 16'sb0001101101100010;
  assign Rx_Signal_1[139] = 16'sb1110010110110011;
  assign Rx_Signal_1[140] = 16'sb1110011010010111;
  assign Rx_Signal_1[141] = 16'sb1101000111101100;
  assign Rx_Signal_1[142] = 16'sb0001011101000101;
  assign Rx_Signal_1[143] = 16'sb1101111100111110;
  assign Rx_Signal_1[144] = 16'sb0000001010001010;
  assign Rx_Signal_1[145] = 16'sb1110001010011101;
  assign Rx_Signal_1[146] = 16'sb0000001001001111;
  assign Rx_Signal_1[147] = 16'sb0010000010001110;
  assign Rx_Signal_1[148] = 16'sb1110011011011001;
  assign Rx_Signal_1[149] = 16'sb0000011011000101;
  assign Rx_Signal_1[150] = 16'sb1100111011110110;
  assign Rx_Signal_1[151] = 16'sb0000101001101111;
  assign Rx_Signal_1[152] = 16'sb1111001001001101;
  assign Rx_Signal_1[153] = 16'sb0010010110100011;
  assign Rx_Signal_1[154] = 16'sb0001010100111010;
  assign Rx_Signal_1[155] = 16'sb1101011110110011;
  assign Rx_Signal_1[156] = 16'sb0001100110000011;
  assign Rx_Signal_1[157] = 16'sb0011011010010110;
  assign Rx_Signal_1[158] = 16'sb1111011000101111;
  assign Rx_Signal_1[159] = 16'sb0001101110000101;
  assign Rx_Signal_1[160] = 16'sb0011000111011111;
  assign Rx_Signal_1[161] = 16'sb0001100011110011;
  assign Rx_Signal_1[162] = 16'sb1111101110010111;
  assign Rx_Signal_1[163] = 16'sb0001100100110010;
  assign Rx_Signal_1[164] = 16'sb0011011100100010;
  assign Rx_Signal_1[165] = 16'sb1110111000010100;
  assign Rx_Signal_1[166] = 16'sb0000111111011110;
  assign Rx_Signal_1[167] = 16'sb0010001100000100;
  assign Rx_Signal_1[168] = 16'sb0001001110011011;
  assign Rx_Signal_1[169] = 16'sb1111111010101001;
  assign Rx_Signal_1[170] = 16'sb1100001111010001;
  assign Rx_Signal_1[171] = 16'sb1101111000101110;
  assign Rx_Signal_1[172] = 16'sb1100100100110000;
  assign Rx_Signal_1[173] = 16'sb0000100011000001;
  assign Rx_Signal_1[174] = 16'sb0010011100100111;
  assign Rx_Signal_1[175] = 16'sb1101010101011100;
  assign Rx_Signal_1[176] = 16'sb1110100010010101;
  assign Rx_Signal_1[177] = 16'sb1101001100100100;
  assign Rx_Signal_1[178] = 16'sb0010010101111011;
  assign Rx_Signal_1[179] = 16'sb1110111000100111;
  assign Rx_Signal_1[180] = 16'sb1100100001010011;
  assign Rx_Signal_1[181] = 16'sb0001100111010111;
  assign Rx_Signal_1[182] = 16'sb1110010010100110;
  assign Rx_Signal_1[183] = 16'sb1111000101001111;
  assign Rx_Signal_1[184] = 16'sb0011101100011110;
  assign Rx_Signal_1[185] = 16'sb0010100000000011;
  assign Rx_Signal_1[186] = 16'sb0001110011001011;
  assign Rx_Signal_1[187] = 16'sb1111110010111101;
  assign Rx_Signal_1[188] = 16'sb1111011111010100;
  assign Rx_Signal_1[189] = 16'sb1101010101010001;
  assign Rx_Signal_1[190] = 16'sb0010100010110111;
  assign Rx_Signal_1[191] = 16'sb1110101111001001;
  assign Rx_Signal_1[192] = 16'sb0001101100011000;
  assign Rx_Signal_1[193] = 16'sb1111101000110011;
  assign Rx_Signal_1[194] = 16'sb0001111100100100;
  assign Rx_Signal_1[195] = 16'sb0010111110110001;
  assign Rx_Signal_1[196] = 16'sb0001011010110111;
  assign Rx_Signal_1[197] = 16'sb1110010111000110;
  assign Rx_Signal_1[198] = 16'sb1101110101100100;
  assign Rx_Signal_1[199] = 16'sb0001101010100101;
  assign Rx_Signal_1[200] = 16'sb0001100000001010;
  assign Rx_Signal_1[201] = 16'sb0010110011001001;
  assign Rx_Signal_1[202] = 16'sb0000101011100100;
  assign Rx_Signal_1[203] = 16'sb0000111011100000;
  assign Rx_Signal_1[204] = 16'sb0010111111001011;
  assign Rx_Signal_1[205] = 16'sb1110101000110010;
  assign Rx_Signal_1[206] = 16'sb0010010111100001;
  assign Rx_Signal_1[207] = 16'sb0001100100111000;
  assign Rx_Signal_1[208] = 16'sb0000110101011111;
  assign Rx_Signal_1[209] = 16'sb1110101100011010;
  assign Rx_Signal_1[210] = 16'sb1101001111010011;
  assign Rx_Signal_1[211] = 16'sb0100101111101001;
  assign Rx_Signal_1[212] = 16'sb1101100011001010;
  assign Rx_Signal_1[213] = 16'sb1101100101100001;
  assign Rx_Signal_1[214] = 16'sb1111001001101010;
  assign Rx_Signal_1[215] = 16'sb1100001001001110;
  assign Rx_Signal_1[216] = 16'sb1100110111000100;
  assign Rx_Signal_1[217] = 16'sb1111001110110101;
  assign Rx_Signal_1[218] = 16'sb0001110110000000;
  assign Rx_Signal_1[219] = 16'sb0001010110010010;
  assign Rx_Signal_1[220] = 16'sb0000010100100011;
  assign Rx_Signal_1[221] = 16'sb0010000111111111;
  assign Rx_Signal_1[222] = 16'sb1101100100100000;
  assign Rx_Signal_1[223] = 16'sb0001000101111110;
  assign Rx_Signal_1[224] = 16'sb1101000011111101;
  assign Rx_Signal_1[225] = 16'sb0010011010001101;
  assign Rx_Signal_1[226] = 16'sb1101100011101001;
  assign Rx_Signal_1[227] = 16'sb0000011101110101;
  assign Rx_Signal_1[228] = 16'sb0010101110000010;
  assign Rx_Signal_1[229] = 16'sb0011100010011000;
  assign Rx_Signal_1[230] = 16'sb1110011101001101;
  assign Rx_Signal_1[231] = 16'sb1111011100000110;
  assign Rx_Signal_1[232] = 16'sb1101101010111011;
  assign Rx_Signal_1[233] = 16'sb1110101000010101;
  assign Rx_Signal_1[234] = 16'sb0001000000001100;
  assign Rx_Signal_1[235] = 16'sb1011110111101101;
  assign Rx_Signal_1[236] = 16'sb1110101100011000;
  assign Rx_Signal_1[237] = 16'sb1110011011001001;
  assign Rx_Signal_1[238] = 16'sb1111010110111001;
  assign Rx_Signal_1[239] = 16'sb0000110111011000;
  assign Rx_Signal_1[240] = 16'sb0001111100101011;
  assign Rx_Signal_1[241] = 16'sb0011100111001001;
  assign Rx_Signal_1[242] = 16'sb0001111011110000;
  assign Rx_Signal_1[243] = 16'sb0001010101000010;
  assign Rx_Signal_1[244] = 16'sb0011000100011001;
  assign Rx_Signal_1[245] = 16'sb1100111110101101;
  assign Rx_Signal_1[246] = 16'sb1110001000010110;
  assign Rx_Signal_1[247] = 16'sb0100101001000010;
  assign Rx_Signal_1[248] = 16'sb1110111011100010;
  assign Rx_Signal_1[249] = 16'sb0010011011000000;
  assign Rx_Signal_1[250] = 16'sb1100110100011011;
  assign Rx_Signal_1[251] = 16'sb1110101110101011;
  assign Rx_Signal_1[252] = 16'sb0010111110000010;
  assign Rx_Signal_1[253] = 16'sb0011100101011111;
  assign Rx_Signal_1[254] = 16'sb1110100101011001;
  assign Rx_Signal_1[255] = 16'sb0010011000110010;
  assign Rx_Signal_out1 = Rx_Signal_1[Rx_Signal_Counter_out1];



  RSP_block u_RSP (.clk(clk),
                   .reset(reset),
                   .enb(clk_enable),
                   .sample(Rx_Signal_out1),  // sfix16_En17
                   .max_corr(max_corr),  // sfix32_En31
                   .max_corr_lag(max_corr_lag)  // int32
                   );

  assign ce_out = clk_enable;

endmodule  // RSP

