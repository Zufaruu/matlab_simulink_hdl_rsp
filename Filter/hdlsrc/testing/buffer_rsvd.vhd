-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\testing\buffer_rsvd.vhd
-- Created: 2023-04-09 11:40:40
-- 
-- Generated by MATLAB 9.14 and HDL Coder 4.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: buffer_rsvd
-- Source Path: testing/custom buffer/buffer
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.custom_buffer_pkg.ALL;

ENTITY buffer_rsvd IS
  PORT( value_re                          :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        value_im                          :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        vector_zero_re                    :   IN    vector_of_std_logic_vector16(0 TO 3);  -- sfix16_En14 [4]
        vector_zero_im                    :   IN    vector_of_std_logic_vector16(0 TO 3);  -- sfix16_En14 [4]
        vector_before_re                  :   IN    vector_of_std_logic_vector16(0 TO 3);  -- sfix16_En14 [4]
        vector_before_im                  :   IN    vector_of_std_logic_vector16(0 TO 3);  -- sfix16_En14 [4]
        counter                           :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
        buffer_re                         :   OUT   vector_of_std_logic_vector16(0 TO 3);  -- sfix16_En14 [4]
        buffer_im                         :   OUT   vector_of_std_logic_vector16(0 TO 3)  -- sfix16_En14 [4]
        );
END buffer_rsvd;


ARCHITECTURE rtl OF buffer_rsvd IS

  -- Signals
  SIGNAL value_re_signed                  : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL value_im_signed                  : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL vector_zero_re_signed            : vector_of_signed16(0 TO 3);  -- sfix16_En14 [4]
  SIGNAL vector_zero_im_signed            : vector_of_signed16(0 TO 3);  -- sfix16_En14 [4]
  SIGNAL vector_before_re_signed          : vector_of_signed16(0 TO 3);  -- sfix16_En14 [4]
  SIGNAL vector_before_im_signed          : vector_of_signed16(0 TO 3);  -- sfix16_En14 [4]
  SIGNAL counter_unsigned                 : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL buffer_re_tmp                    : vector_of_signed16(0 TO 3);  -- sfix16_En14 [4]
  SIGNAL buffer_im_tmp                    : vector_of_signed16(0 TO 3);  -- sfix16_En14 [4]

BEGIN
  value_re_signed <= signed(value_re);

  value_im_signed <= signed(value_im);

  outputgen5: FOR k IN 0 TO 3 GENERATE
    vector_zero_re_signed(k) <= signed(vector_zero_re(k));
  END GENERATE;

  outputgen4: FOR k IN 0 TO 3 GENERATE
    vector_zero_im_signed(k) <= signed(vector_zero_im(k));
  END GENERATE;

  outputgen3: FOR k IN 0 TO 3 GENERATE
    vector_before_re_signed(k) <= signed(vector_before_re(k));
  END GENERATE;

  outputgen2: FOR k IN 0 TO 3 GENERATE
    vector_before_im_signed(k) <= signed(vector_before_im(k));
  END GENERATE;

  counter_unsigned <= unsigned(counter);

  buffer_rsvd_1_output : PROCESS (counter_unsigned, value_im_signed, value_re_signed, vector_before_im_signed,
       vector_before_re_signed, vector_zero_im_signed, vector_zero_re_signed)
    VARIABLE sub_cast : signed(31 DOWNTO 0);
    VARIABLE sub_cast_0 : signed(31 DOWNTO 0);
  BEGIN
    IF counter_unsigned = to_unsigned(16#00000000#, 8) THEN 
      buffer_re_tmp <= vector_zero_re_signed;
      buffer_im_tmp <= vector_zero_im_signed;
    ELSE 
      buffer_re_tmp <= vector_before_re_signed;
      buffer_im_tmp <= vector_before_im_signed;
    END IF;
    sub_cast := signed(resize(counter_unsigned, 32));
    buffer_re_tmp(to_integer(sub_cast - 1)) <= (resize(value_re_signed(15 DOWNTO 1), 16)) + ('0' & value_re_signed(0));
    sub_cast_0 := signed(resize(counter_unsigned, 32));
    buffer_im_tmp(to_integer(sub_cast_0 - 1)) <= (resize(value_im_signed(15 DOWNTO 1), 16)) + ('0' & value_im_signed(0));
  END PROCESS buffer_rsvd_1_output;


  outputgen1: FOR k IN 0 TO 3 GENERATE
    buffer_re(k) <= std_logic_vector(buffer_re_tmp(k));
  END GENERATE;

  outputgen: FOR k IN 0 TO 3 GENERATE
    buffer_im(k) <= std_logic_vector(buffer_im_tmp(k));
  END GENERATE;

END rtl;

