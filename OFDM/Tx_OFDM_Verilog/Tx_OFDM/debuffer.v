// -------------------------------------------------------------
// 
// File Name: C:\Users\acer\OneDrive\Documents\ITS CAK V2\Magang\BRIN\Progress\Matlab Simulink\HDL Coder\proyek\OFDM\Tx_OFDM_Verilog\Tx_OFDM\debuffer.v
// Created: 2023-06-11 16:01:33
// 
// Generated by MATLAB 9.14 and HDL Coder 4.1
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: debuffer
// Source Path: Tx_OFDM/Transmitter/IQ Modulator/Cosine Debuffer/debuffer
// Hierarchy Level: 3
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module debuffer
          (vector_in_0,
           vector_in_1,
           vector_in_2,
           vector_in_3,
           vector_in_4,
           vector_in_5,
           vector_in_6,
           vector_in_7,
           vector_in_8,
           vector_in_9,
           vector_in_10,
           vector_in_11,
           vector_in_12,
           vector_in_13,
           vector_in_14,
           vector_in_15,
           vector_in_16,
           vector_in_17,
           vector_in_18,
           vector_in_19,
           vector_in_20,
           vector_in_21,
           vector_in_22,
           vector_in_23,
           vector_in_24,
           vector_in_25,
           vector_in_26,
           vector_in_27,
           vector_in_28,
           vector_in_29,
           vector_in_30,
           vector_in_31,
           vector_in_32,
           vector_in_33,
           vector_in_34,
           vector_in_35,
           vector_in_36,
           vector_in_37,
           vector_in_38,
           vector_in_39,
           vector_in_40,
           vector_in_41,
           vector_in_42,
           vector_in_43,
           vector_in_44,
           vector_in_45,
           vector_in_46,
           vector_in_47,
           vector_in_48,
           vector_in_49,
           vector_in_50,
           vector_in_51,
           vector_in_52,
           vector_in_53,
           vector_in_54,
           vector_in_55,
           vector_in_56,
           vector_in_57,
           vector_in_58,
           vector_in_59,
           vector_in_60,
           vector_in_61,
           vector_in_62,
           vector_in_63,
           counter,
           vector_before_0,
           vector_before_1,
           vector_before_2,
           vector_before_3,
           vector_before_4,
           vector_before_5,
           vector_before_6,
           vector_before_7,
           vector_before_8,
           vector_before_9,
           vector_before_10,
           vector_before_11,
           vector_before_12,
           vector_before_13,
           vector_before_14,
           vector_before_15,
           vector_before_16,
           vector_before_17,
           vector_before_18,
           vector_before_19,
           vector_before_20,
           vector_before_21,
           vector_before_22,
           vector_before_23,
           vector_before_24,
           vector_before_25,
           vector_before_26,
           vector_before_27,
           vector_before_28,
           vector_before_29,
           vector_before_30,
           vector_before_31,
           vector_before_32,
           vector_before_33,
           vector_before_34,
           vector_before_35,
           vector_before_36,
           vector_before_37,
           vector_before_38,
           vector_before_39,
           vector_before_40,
           vector_before_41,
           vector_before_42,
           vector_before_43,
           vector_before_44,
           vector_before_45,
           vector_before_46,
           vector_before_47,
           vector_before_48,
           vector_before_49,
           vector_before_50,
           vector_before_51,
           vector_before_52,
           vector_before_53,
           vector_before_54,
           vector_before_55,
           vector_before_56,
           vector_before_57,
           vector_before_58,
           vector_before_59,
           vector_before_60,
           vector_before_61,
           vector_before_62,
           vector_before_63,
           buffer,
           vector_current_0,
           vector_current_1,
           vector_current_2,
           vector_current_3,
           vector_current_4,
           vector_current_5,
           vector_current_6,
           vector_current_7,
           vector_current_8,
           vector_current_9,
           vector_current_10,
           vector_current_11,
           vector_current_12,
           vector_current_13,
           vector_current_14,
           vector_current_15,
           vector_current_16,
           vector_current_17,
           vector_current_18,
           vector_current_19,
           vector_current_20,
           vector_current_21,
           vector_current_22,
           vector_current_23,
           vector_current_24,
           vector_current_25,
           vector_current_26,
           vector_current_27,
           vector_current_28,
           vector_current_29,
           vector_current_30,
           vector_current_31,
           vector_current_32,
           vector_current_33,
           vector_current_34,
           vector_current_35,
           vector_current_36,
           vector_current_37,
           vector_current_38,
           vector_current_39,
           vector_current_40,
           vector_current_41,
           vector_current_42,
           vector_current_43,
           vector_current_44,
           vector_current_45,
           vector_current_46,
           vector_current_47,
           vector_current_48,
           vector_current_49,
           vector_current_50,
           vector_current_51,
           vector_current_52,
           vector_current_53,
           vector_current_54,
           vector_current_55,
           vector_current_56,
           vector_current_57,
           vector_current_58,
           vector_current_59,
           vector_current_60,
           vector_current_61,
           vector_current_62,
           vector_current_63);


  input   signed [15:0] vector_in_0;  // sfix16_En14
  input   signed [15:0] vector_in_1;  // sfix16_En14
  input   signed [15:0] vector_in_2;  // sfix16_En14
  input   signed [15:0] vector_in_3;  // sfix16_En14
  input   signed [15:0] vector_in_4;  // sfix16_En14
  input   signed [15:0] vector_in_5;  // sfix16_En14
  input   signed [15:0] vector_in_6;  // sfix16_En14
  input   signed [15:0] vector_in_7;  // sfix16_En14
  input   signed [15:0] vector_in_8;  // sfix16_En14
  input   signed [15:0] vector_in_9;  // sfix16_En14
  input   signed [15:0] vector_in_10;  // sfix16_En14
  input   signed [15:0] vector_in_11;  // sfix16_En14
  input   signed [15:0] vector_in_12;  // sfix16_En14
  input   signed [15:0] vector_in_13;  // sfix16_En14
  input   signed [15:0] vector_in_14;  // sfix16_En14
  input   signed [15:0] vector_in_15;  // sfix16_En14
  input   signed [15:0] vector_in_16;  // sfix16_En14
  input   signed [15:0] vector_in_17;  // sfix16_En14
  input   signed [15:0] vector_in_18;  // sfix16_En14
  input   signed [15:0] vector_in_19;  // sfix16_En14
  input   signed [15:0] vector_in_20;  // sfix16_En14
  input   signed [15:0] vector_in_21;  // sfix16_En14
  input   signed [15:0] vector_in_22;  // sfix16_En14
  input   signed [15:0] vector_in_23;  // sfix16_En14
  input   signed [15:0] vector_in_24;  // sfix16_En14
  input   signed [15:0] vector_in_25;  // sfix16_En14
  input   signed [15:0] vector_in_26;  // sfix16_En14
  input   signed [15:0] vector_in_27;  // sfix16_En14
  input   signed [15:0] vector_in_28;  // sfix16_En14
  input   signed [15:0] vector_in_29;  // sfix16_En14
  input   signed [15:0] vector_in_30;  // sfix16_En14
  input   signed [15:0] vector_in_31;  // sfix16_En14
  input   signed [15:0] vector_in_32;  // sfix16_En14
  input   signed [15:0] vector_in_33;  // sfix16_En14
  input   signed [15:0] vector_in_34;  // sfix16_En14
  input   signed [15:0] vector_in_35;  // sfix16_En14
  input   signed [15:0] vector_in_36;  // sfix16_En14
  input   signed [15:0] vector_in_37;  // sfix16_En14
  input   signed [15:0] vector_in_38;  // sfix16_En14
  input   signed [15:0] vector_in_39;  // sfix16_En14
  input   signed [15:0] vector_in_40;  // sfix16_En14
  input   signed [15:0] vector_in_41;  // sfix16_En14
  input   signed [15:0] vector_in_42;  // sfix16_En14
  input   signed [15:0] vector_in_43;  // sfix16_En14
  input   signed [15:0] vector_in_44;  // sfix16_En14
  input   signed [15:0] vector_in_45;  // sfix16_En14
  input   signed [15:0] vector_in_46;  // sfix16_En14
  input   signed [15:0] vector_in_47;  // sfix16_En14
  input   signed [15:0] vector_in_48;  // sfix16_En14
  input   signed [15:0] vector_in_49;  // sfix16_En14
  input   signed [15:0] vector_in_50;  // sfix16_En14
  input   signed [15:0] vector_in_51;  // sfix16_En14
  input   signed [15:0] vector_in_52;  // sfix16_En14
  input   signed [15:0] vector_in_53;  // sfix16_En14
  input   signed [15:0] vector_in_54;  // sfix16_En14
  input   signed [15:0] vector_in_55;  // sfix16_En14
  input   signed [15:0] vector_in_56;  // sfix16_En14
  input   signed [15:0] vector_in_57;  // sfix16_En14
  input   signed [15:0] vector_in_58;  // sfix16_En14
  input   signed [15:0] vector_in_59;  // sfix16_En14
  input   signed [15:0] vector_in_60;  // sfix16_En14
  input   signed [15:0] vector_in_61;  // sfix16_En14
  input   signed [15:0] vector_in_62;  // sfix16_En14
  input   signed [15:0] vector_in_63;  // sfix16_En14
  input   signed [15:0] counter;  // int16
  input   signed [15:0] vector_before_0;  // sfix16_En14
  input   signed [15:0] vector_before_1;  // sfix16_En14
  input   signed [15:0] vector_before_2;  // sfix16_En14
  input   signed [15:0] vector_before_3;  // sfix16_En14
  input   signed [15:0] vector_before_4;  // sfix16_En14
  input   signed [15:0] vector_before_5;  // sfix16_En14
  input   signed [15:0] vector_before_6;  // sfix16_En14
  input   signed [15:0] vector_before_7;  // sfix16_En14
  input   signed [15:0] vector_before_8;  // sfix16_En14
  input   signed [15:0] vector_before_9;  // sfix16_En14
  input   signed [15:0] vector_before_10;  // sfix16_En14
  input   signed [15:0] vector_before_11;  // sfix16_En14
  input   signed [15:0] vector_before_12;  // sfix16_En14
  input   signed [15:0] vector_before_13;  // sfix16_En14
  input   signed [15:0] vector_before_14;  // sfix16_En14
  input   signed [15:0] vector_before_15;  // sfix16_En14
  input   signed [15:0] vector_before_16;  // sfix16_En14
  input   signed [15:0] vector_before_17;  // sfix16_En14
  input   signed [15:0] vector_before_18;  // sfix16_En14
  input   signed [15:0] vector_before_19;  // sfix16_En14
  input   signed [15:0] vector_before_20;  // sfix16_En14
  input   signed [15:0] vector_before_21;  // sfix16_En14
  input   signed [15:0] vector_before_22;  // sfix16_En14
  input   signed [15:0] vector_before_23;  // sfix16_En14
  input   signed [15:0] vector_before_24;  // sfix16_En14
  input   signed [15:0] vector_before_25;  // sfix16_En14
  input   signed [15:0] vector_before_26;  // sfix16_En14
  input   signed [15:0] vector_before_27;  // sfix16_En14
  input   signed [15:0] vector_before_28;  // sfix16_En14
  input   signed [15:0] vector_before_29;  // sfix16_En14
  input   signed [15:0] vector_before_30;  // sfix16_En14
  input   signed [15:0] vector_before_31;  // sfix16_En14
  input   signed [15:0] vector_before_32;  // sfix16_En14
  input   signed [15:0] vector_before_33;  // sfix16_En14
  input   signed [15:0] vector_before_34;  // sfix16_En14
  input   signed [15:0] vector_before_35;  // sfix16_En14
  input   signed [15:0] vector_before_36;  // sfix16_En14
  input   signed [15:0] vector_before_37;  // sfix16_En14
  input   signed [15:0] vector_before_38;  // sfix16_En14
  input   signed [15:0] vector_before_39;  // sfix16_En14
  input   signed [15:0] vector_before_40;  // sfix16_En14
  input   signed [15:0] vector_before_41;  // sfix16_En14
  input   signed [15:0] vector_before_42;  // sfix16_En14
  input   signed [15:0] vector_before_43;  // sfix16_En14
  input   signed [15:0] vector_before_44;  // sfix16_En14
  input   signed [15:0] vector_before_45;  // sfix16_En14
  input   signed [15:0] vector_before_46;  // sfix16_En14
  input   signed [15:0] vector_before_47;  // sfix16_En14
  input   signed [15:0] vector_before_48;  // sfix16_En14
  input   signed [15:0] vector_before_49;  // sfix16_En14
  input   signed [15:0] vector_before_50;  // sfix16_En14
  input   signed [15:0] vector_before_51;  // sfix16_En14
  input   signed [15:0] vector_before_52;  // sfix16_En14
  input   signed [15:0] vector_before_53;  // sfix16_En14
  input   signed [15:0] vector_before_54;  // sfix16_En14
  input   signed [15:0] vector_before_55;  // sfix16_En14
  input   signed [15:0] vector_before_56;  // sfix16_En14
  input   signed [15:0] vector_before_57;  // sfix16_En14
  input   signed [15:0] vector_before_58;  // sfix16_En14
  input   signed [15:0] vector_before_59;  // sfix16_En14
  input   signed [15:0] vector_before_60;  // sfix16_En14
  input   signed [15:0] vector_before_61;  // sfix16_En14
  input   signed [15:0] vector_before_62;  // sfix16_En14
  input   signed [15:0] vector_before_63;  // sfix16_En14
  output  signed [15:0] buffer;  // sfix16_En14
  output  signed [15:0] vector_current_0;  // sfix16_En14
  output  signed [15:0] vector_current_1;  // sfix16_En14
  output  signed [15:0] vector_current_2;  // sfix16_En14
  output  signed [15:0] vector_current_3;  // sfix16_En14
  output  signed [15:0] vector_current_4;  // sfix16_En14
  output  signed [15:0] vector_current_5;  // sfix16_En14
  output  signed [15:0] vector_current_6;  // sfix16_En14
  output  signed [15:0] vector_current_7;  // sfix16_En14
  output  signed [15:0] vector_current_8;  // sfix16_En14
  output  signed [15:0] vector_current_9;  // sfix16_En14
  output  signed [15:0] vector_current_10;  // sfix16_En14
  output  signed [15:0] vector_current_11;  // sfix16_En14
  output  signed [15:0] vector_current_12;  // sfix16_En14
  output  signed [15:0] vector_current_13;  // sfix16_En14
  output  signed [15:0] vector_current_14;  // sfix16_En14
  output  signed [15:0] vector_current_15;  // sfix16_En14
  output  signed [15:0] vector_current_16;  // sfix16_En14
  output  signed [15:0] vector_current_17;  // sfix16_En14
  output  signed [15:0] vector_current_18;  // sfix16_En14
  output  signed [15:0] vector_current_19;  // sfix16_En14
  output  signed [15:0] vector_current_20;  // sfix16_En14
  output  signed [15:0] vector_current_21;  // sfix16_En14
  output  signed [15:0] vector_current_22;  // sfix16_En14
  output  signed [15:0] vector_current_23;  // sfix16_En14
  output  signed [15:0] vector_current_24;  // sfix16_En14
  output  signed [15:0] vector_current_25;  // sfix16_En14
  output  signed [15:0] vector_current_26;  // sfix16_En14
  output  signed [15:0] vector_current_27;  // sfix16_En14
  output  signed [15:0] vector_current_28;  // sfix16_En14
  output  signed [15:0] vector_current_29;  // sfix16_En14
  output  signed [15:0] vector_current_30;  // sfix16_En14
  output  signed [15:0] vector_current_31;  // sfix16_En14
  output  signed [15:0] vector_current_32;  // sfix16_En14
  output  signed [15:0] vector_current_33;  // sfix16_En14
  output  signed [15:0] vector_current_34;  // sfix16_En14
  output  signed [15:0] vector_current_35;  // sfix16_En14
  output  signed [15:0] vector_current_36;  // sfix16_En14
  output  signed [15:0] vector_current_37;  // sfix16_En14
  output  signed [15:0] vector_current_38;  // sfix16_En14
  output  signed [15:0] vector_current_39;  // sfix16_En14
  output  signed [15:0] vector_current_40;  // sfix16_En14
  output  signed [15:0] vector_current_41;  // sfix16_En14
  output  signed [15:0] vector_current_42;  // sfix16_En14
  output  signed [15:0] vector_current_43;  // sfix16_En14
  output  signed [15:0] vector_current_44;  // sfix16_En14
  output  signed [15:0] vector_current_45;  // sfix16_En14
  output  signed [15:0] vector_current_46;  // sfix16_En14
  output  signed [15:0] vector_current_47;  // sfix16_En14
  output  signed [15:0] vector_current_48;  // sfix16_En14
  output  signed [15:0] vector_current_49;  // sfix16_En14
  output  signed [15:0] vector_current_50;  // sfix16_En14
  output  signed [15:0] vector_current_51;  // sfix16_En14
  output  signed [15:0] vector_current_52;  // sfix16_En14
  output  signed [15:0] vector_current_53;  // sfix16_En14
  output  signed [15:0] vector_current_54;  // sfix16_En14
  output  signed [15:0] vector_current_55;  // sfix16_En14
  output  signed [15:0] vector_current_56;  // sfix16_En14
  output  signed [15:0] vector_current_57;  // sfix16_En14
  output  signed [15:0] vector_current_58;  // sfix16_En14
  output  signed [15:0] vector_current_59;  // sfix16_En14
  output  signed [15:0] vector_current_60;  // sfix16_En14
  output  signed [15:0] vector_current_61;  // sfix16_En14
  output  signed [15:0] vector_current_62;  // sfix16_En14
  output  signed [15:0] vector_current_63;  // sfix16_En14


  wire signed [15:0] vector_in [0:63];  // sfix16_En14 [64]
  wire signed [15:0] vector_before [0:63];  // sfix16_En14 [64]
  reg signed [15:0] buffer_1;  // sfix16_En14
  reg signed [15:0] vector_current_64 [0:63];  // sfix16_En14 [64]
  reg signed [15:0] vector_current [0:63];  // sfix16_En14 [64]
  reg signed [31:0] t_0;  // int32
  reg signed [31:0] t_1;  // int32
  reg signed [31:0] t_2;  // int32
  reg signed [31:0] idx2;  // int32
  reg signed [31:0] t_3;  // int32
  reg signed [31:0] t_4;  // int32


  assign vector_in[0] = vector_in_0;
  assign vector_in[1] = vector_in_1;
  assign vector_in[2] = vector_in_2;
  assign vector_in[3] = vector_in_3;
  assign vector_in[4] = vector_in_4;
  assign vector_in[5] = vector_in_5;
  assign vector_in[6] = vector_in_6;
  assign vector_in[7] = vector_in_7;
  assign vector_in[8] = vector_in_8;
  assign vector_in[9] = vector_in_9;
  assign vector_in[10] = vector_in_10;
  assign vector_in[11] = vector_in_11;
  assign vector_in[12] = vector_in_12;
  assign vector_in[13] = vector_in_13;
  assign vector_in[14] = vector_in_14;
  assign vector_in[15] = vector_in_15;
  assign vector_in[16] = vector_in_16;
  assign vector_in[17] = vector_in_17;
  assign vector_in[18] = vector_in_18;
  assign vector_in[19] = vector_in_19;
  assign vector_in[20] = vector_in_20;
  assign vector_in[21] = vector_in_21;
  assign vector_in[22] = vector_in_22;
  assign vector_in[23] = vector_in_23;
  assign vector_in[24] = vector_in_24;
  assign vector_in[25] = vector_in_25;
  assign vector_in[26] = vector_in_26;
  assign vector_in[27] = vector_in_27;
  assign vector_in[28] = vector_in_28;
  assign vector_in[29] = vector_in_29;
  assign vector_in[30] = vector_in_30;
  assign vector_in[31] = vector_in_31;
  assign vector_in[32] = vector_in_32;
  assign vector_in[33] = vector_in_33;
  assign vector_in[34] = vector_in_34;
  assign vector_in[35] = vector_in_35;
  assign vector_in[36] = vector_in_36;
  assign vector_in[37] = vector_in_37;
  assign vector_in[38] = vector_in_38;
  assign vector_in[39] = vector_in_39;
  assign vector_in[40] = vector_in_40;
  assign vector_in[41] = vector_in_41;
  assign vector_in[42] = vector_in_42;
  assign vector_in[43] = vector_in_43;
  assign vector_in[44] = vector_in_44;
  assign vector_in[45] = vector_in_45;
  assign vector_in[46] = vector_in_46;
  assign vector_in[47] = vector_in_47;
  assign vector_in[48] = vector_in_48;
  assign vector_in[49] = vector_in_49;
  assign vector_in[50] = vector_in_50;
  assign vector_in[51] = vector_in_51;
  assign vector_in[52] = vector_in_52;
  assign vector_in[53] = vector_in_53;
  assign vector_in[54] = vector_in_54;
  assign vector_in[55] = vector_in_55;
  assign vector_in[56] = vector_in_56;
  assign vector_in[57] = vector_in_57;
  assign vector_in[58] = vector_in_58;
  assign vector_in[59] = vector_in_59;
  assign vector_in[60] = vector_in_60;
  assign vector_in[61] = vector_in_61;
  assign vector_in[62] = vector_in_62;
  assign vector_in[63] = vector_in_63;

  assign vector_before[0] = vector_before_0;
  assign vector_before[1] = vector_before_1;
  assign vector_before[2] = vector_before_2;
  assign vector_before[3] = vector_before_3;
  assign vector_before[4] = vector_before_4;
  assign vector_before[5] = vector_before_5;
  assign vector_before[6] = vector_before_6;
  assign vector_before[7] = vector_before_7;
  assign vector_before[8] = vector_before_8;
  assign vector_before[9] = vector_before_9;
  assign vector_before[10] = vector_before_10;
  assign vector_before[11] = vector_before_11;
  assign vector_before[12] = vector_before_12;
  assign vector_before[13] = vector_before_13;
  assign vector_before[14] = vector_before_14;
  assign vector_before[15] = vector_before_15;
  assign vector_before[16] = vector_before_16;
  assign vector_before[17] = vector_before_17;
  assign vector_before[18] = vector_before_18;
  assign vector_before[19] = vector_before_19;
  assign vector_before[20] = vector_before_20;
  assign vector_before[21] = vector_before_21;
  assign vector_before[22] = vector_before_22;
  assign vector_before[23] = vector_before_23;
  assign vector_before[24] = vector_before_24;
  assign vector_before[25] = vector_before_25;
  assign vector_before[26] = vector_before_26;
  assign vector_before[27] = vector_before_27;
  assign vector_before[28] = vector_before_28;
  assign vector_before[29] = vector_before_29;
  assign vector_before[30] = vector_before_30;
  assign vector_before[31] = vector_before_31;
  assign vector_before[32] = vector_before_32;
  assign vector_before[33] = vector_before_33;
  assign vector_before[34] = vector_before_34;
  assign vector_before[35] = vector_before_35;
  assign vector_before[36] = vector_before_36;
  assign vector_before[37] = vector_before_37;
  assign vector_before[38] = vector_before_38;
  assign vector_before[39] = vector_before_39;
  assign vector_before[40] = vector_before_40;
  assign vector_before[41] = vector_before_41;
  assign vector_before[42] = vector_before_42;
  assign vector_before[43] = vector_before_43;
  assign vector_before[44] = vector_before_44;
  assign vector_before[45] = vector_before_45;
  assign vector_before[46] = vector_before_46;
  assign vector_before[47] = vector_before_47;
  assign vector_before[48] = vector_before_48;
  assign vector_before[49] = vector_before_49;
  assign vector_before[50] = vector_before_50;
  assign vector_before[51] = vector_before_51;
  assign vector_before[52] = vector_before_52;
  assign vector_before[53] = vector_before_53;
  assign vector_before[54] = vector_before_54;
  assign vector_before[55] = vector_before_55;
  assign vector_before[56] = vector_before_56;
  assign vector_before[57] = vector_before_57;
  assign vector_before[58] = vector_before_58;
  assign vector_before[59] = vector_before_59;
  assign vector_before[60] = vector_before_60;
  assign vector_before[61] = vector_before_61;
  assign vector_before[62] = vector_before_62;
  assign vector_before[63] = vector_before_63;

  always @* begin
    t_4 = 32'sd0;
    if (counter == 16'sb0000000000000001) begin

      for(t_1 = 32'sd0; t_1 <= 32'sd63; t_1 = t_1 + 32'sd1) begin
        vector_current[t_1] = vector_in[t_1];
      end

    end
    else begin

      for(t_0 = 32'sd0; t_0 <= 32'sd63; t_0 = t_0 + 32'sd1) begin
        vector_current[t_0] = vector_before[t_0];
      end

    end
    t_3 = {{16{counter[15]}}, counter};
    if ((t_3 - 32'sd1) < 32'sd0) begin
      idx2 = 32'sd0;
    end
    else begin
      t_4 = {{16{counter[15]}}, counter};
      idx2 = t_4 - 32'sd1;
    end
    buffer_1 = vector_current[idx2];

    for(t_2 = 32'sd0; t_2 <= 32'sd63; t_2 = t_2 + 32'sd1) begin
      vector_current_64[t_2] = vector_current[t_2];
    end

  end



  assign vector_current_0 = vector_current_64[0];

  assign vector_current_1 = vector_current_64[1];

  assign vector_current_2 = vector_current_64[2];

  assign vector_current_3 = vector_current_64[3];

  assign vector_current_4 = vector_current_64[4];

  assign vector_current_5 = vector_current_64[5];

  assign vector_current_6 = vector_current_64[6];

  assign vector_current_7 = vector_current_64[7];

  assign vector_current_8 = vector_current_64[8];

  assign vector_current_9 = vector_current_64[9];

  assign vector_current_10 = vector_current_64[10];

  assign vector_current_11 = vector_current_64[11];

  assign vector_current_12 = vector_current_64[12];

  assign vector_current_13 = vector_current_64[13];

  assign vector_current_14 = vector_current_64[14];

  assign vector_current_15 = vector_current_64[15];

  assign vector_current_16 = vector_current_64[16];

  assign vector_current_17 = vector_current_64[17];

  assign vector_current_18 = vector_current_64[18];

  assign vector_current_19 = vector_current_64[19];

  assign vector_current_20 = vector_current_64[20];

  assign vector_current_21 = vector_current_64[21];

  assign vector_current_22 = vector_current_64[22];

  assign vector_current_23 = vector_current_64[23];

  assign vector_current_24 = vector_current_64[24];

  assign vector_current_25 = vector_current_64[25];

  assign vector_current_26 = vector_current_64[26];

  assign vector_current_27 = vector_current_64[27];

  assign vector_current_28 = vector_current_64[28];

  assign vector_current_29 = vector_current_64[29];

  assign vector_current_30 = vector_current_64[30];

  assign vector_current_31 = vector_current_64[31];

  assign vector_current_32 = vector_current_64[32];

  assign vector_current_33 = vector_current_64[33];

  assign vector_current_34 = vector_current_64[34];

  assign vector_current_35 = vector_current_64[35];

  assign vector_current_36 = vector_current_64[36];

  assign vector_current_37 = vector_current_64[37];

  assign vector_current_38 = vector_current_64[38];

  assign vector_current_39 = vector_current_64[39];

  assign vector_current_40 = vector_current_64[40];

  assign vector_current_41 = vector_current_64[41];

  assign vector_current_42 = vector_current_64[42];

  assign vector_current_43 = vector_current_64[43];

  assign vector_current_44 = vector_current_64[44];

  assign vector_current_45 = vector_current_64[45];

  assign vector_current_46 = vector_current_64[46];

  assign vector_current_47 = vector_current_64[47];

  assign vector_current_48 = vector_current_64[48];

  assign vector_current_49 = vector_current_64[49];

  assign vector_current_50 = vector_current_64[50];

  assign vector_current_51 = vector_current_64[51];

  assign vector_current_52 = vector_current_64[52];

  assign vector_current_53 = vector_current_64[53];

  assign vector_current_54 = vector_current_64[54];

  assign vector_current_55 = vector_current_64[55];

  assign vector_current_56 = vector_current_64[56];

  assign vector_current_57 = vector_current_64[57];

  assign vector_current_58 = vector_current_64[58];

  assign vector_current_59 = vector_current_64[59];

  assign vector_current_60 = vector_current_64[60];

  assign vector_current_61 = vector_current_64[61];

  assign vector_current_62 = vector_current_64[62];

  assign vector_current_63 = vector_current_64[63];

  assign buffer = buffer_1;

endmodule  // debuffer

