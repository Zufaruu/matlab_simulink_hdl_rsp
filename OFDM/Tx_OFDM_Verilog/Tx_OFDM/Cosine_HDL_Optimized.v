// -------------------------------------------------------------
// 
// File Name: C:\Users\acer\OneDrive\Documents\ITS CAK V2\Magang\BRIN\Progress\Matlab Simulink\HDL Coder\proyek\OFDM\Tx_OFDM_Verilog\Tx_OFDM\Cosine_HDL_Optimized.v
// Created: 2023-06-11 16:01:35
// 
// Generated by MATLAB 9.14 and HDL Coder 4.1
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Cosine_HDL_Optimized
// Source Path: Tx_OFDM/Transmitter/IQ Modulator/Cosine HDL Optimized
// Hierarchy Level: 2
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Cosine_HDL_Optimized
          (clk,
           reset,
           enb,
           u,
           x);


  input   clk;
  input   reset;
  input   enb;
  input   signed [63:0] u;  // sfix64_En36
  output  signed [16:0] x;  // sfix17_En15


  wire [7:0] insig_out1;  // ufix8_En8
  wire [16:0] Point25_out1;  // ufix17_En17
  wire [16:0] LTEp25_1_cast;  // ufix17_En17
  wire LTEp25_relop1;
  wire [16:0] Point75_out1;  // ufix17_En17
  wire [16:0] GTEp75_1_cast;  // ufix17_En17
  wire GTEp75_relop1;
  wire alpha1st_or_4th_Quad_bool;
  wire [7:0] alpha1st_or_4th_Quad_out1;  // uint8
  reg [7:0] RAMDelayBalance_out1;  // uint8
  wire pow2switch_out1;
  wire [16:0] Point50_out1;  // ufix17_En17
  wire signed [31:0] p75mA_sub_cast;  // sfix32_En17
  wire signed [31:0] p75mA_sub_cast_1;  // sfix32_En17
  wire signed [31:0] p75mA_sub_temp;  // sfix32_En17
  wire [31:0] p75mA_out1;  // ufix32_En17
  wire signed [31:0] Amp75_sub_cast;  // sfix32_En17
  wire signed [31:0] Amp75_sub_cast_1;  // sfix32_En17
  wire signed [31:0] Amp75_sub_temp;  // sfix32_En17
  wire [31:0] Amp75_out1;  // ufix32_En17
  wire signed [31:0] Amp25_sub_cast;  // sfix32_En17
  wire signed [31:0] Amp25_sub_cast_1;  // sfix32_En17
  wire signed [31:0] Amp25_sub_temp;  // sfix32_En17
  wire [31:0] Amp25_out1;  // ufix32_En17
  wire signed [31:0] p25mA_sub_cast;  // sfix32_En17
  wire signed [31:0] p25mA_sub_cast_1;  // sfix32_En17
  wire signed [31:0] p25mA_sub_temp;  // sfix32_En17
  wire [31:0] p25mA_out1;  // ufix32_En17
  wire [16:0] LTEp50_1_cast;  // ufix17_En17
  wire LTEp50_relop1;
  wire [31:0] QuadHandle1b_out1;  // ufix32_En17
  wire [7:0] QuadHandle1b_out1_dtc;  // ufix8_En8
  wire [31:0] QuadHandle1a_out1;  // ufix32_En17
  wire [7:0] QuadHandle1a_out1_dtc;  // ufix8_En8
  wire [7:0] QuadHandle2_out1;  // ufix8_En8
  wire [7:0] CastU16En1_out1;  // uint8
  wire [8:0] CastU16En3_out1;  // ufix9
  wire [7:0] CastU16En2_out1;  // uint8
  wire [7:0] Saturation_out1;  // uint8
  wire [7:0] Switch_out1;  // uint8
  wire [5:0] Look_Up_Table_k;  // ufix6
  wire signed [16:0] Look_Up_Table_1 [0:63];  // sfix17_En15 [64]
  wire signed [16:0] Look_Up_Table_out1;  // sfix17_En15
  reg signed [16:0] Look_Up_Table_out1_1;  // sfix17_En15
  wire signed [17:0] Negate_cast;  // sfix18_En15
  wire signed [17:0] Negate_cast_1;  // sfix18_En15
  wire signed [16:0] Negate_out1;  // sfix17_En15
  wire signed [16:0] Cosine;  // sfix17_En15
  wire signed [16:0] Cosine_1;  // sfix17_En15

  initial begin
    Look_Up_Table_out1_1 = 17'sb00000000000000000;
  end
  // (C) 2016 Mathworks, Inc


  assign insig_out1 = u[35:28];



  assign Point25_out1 = 17'b01000000000000000;



  assign LTEp25_1_cast = {insig_out1, 9'b000000000};
  assign LTEp25_relop1 = LTEp25_1_cast <= Point25_out1;



  assign Point75_out1 = 17'b11000000000000000;



  assign GTEp75_1_cast = {insig_out1, 9'b000000000};
  assign GTEp75_relop1 = GTEp75_1_cast >= Point75_out1;



  assign alpha1st_or_4th_Quad_bool = LTEp25_relop1 | GTEp75_relop1;



  assign alpha1st_or_4th_Quad_out1 = {7'b0, alpha1st_or_4th_Quad_bool};



  always @(posedge clk or posedge reset)
    begin : delayMatch_process
      if (reset == 1'b1) begin
        RAMDelayBalance_out1 <= 8'b00000000;
      end
      else begin
        if (enb) begin
          RAMDelayBalance_out1 <= alpha1st_or_4th_Quad_out1;
        end
      end
    end



  assign pow2switch_out1 = 1'b1;



  assign Point50_out1 = 17'b10000000000000000;



  assign p75mA_sub_cast = {15'b0, Point75_out1};
  assign p75mA_sub_cast_1 = {15'b0, {insig_out1, 9'b000000000}};
  assign p75mA_sub_temp = p75mA_sub_cast - p75mA_sub_cast_1;
  assign p75mA_out1 = p75mA_sub_temp;



  assign Amp75_sub_cast = {15'b0, {insig_out1, 9'b000000000}};
  assign Amp75_sub_cast_1 = {15'b0, Point75_out1};
  assign Amp75_sub_temp = Amp75_sub_cast - Amp75_sub_cast_1;
  assign Amp75_out1 = Amp75_sub_temp;



  assign Amp25_sub_cast = {15'b0, {insig_out1, 9'b000000000}};
  assign Amp25_sub_cast_1 = {15'b0, Point25_out1};
  assign Amp25_sub_temp = Amp25_sub_cast - Amp25_sub_cast_1;
  assign Amp25_out1 = Amp25_sub_temp;



  assign p25mA_sub_cast = {15'b0, Point25_out1};
  assign p25mA_sub_cast_1 = {15'b0, {insig_out1, 9'b000000000}};
  assign p25mA_sub_temp = p25mA_sub_cast - p25mA_sub_cast_1;
  assign p25mA_out1 = p25mA_sub_temp;



  assign LTEp50_1_cast = {insig_out1, 9'b000000000};
  assign LTEp50_relop1 = LTEp50_1_cast <= Point50_out1;



  assign QuadHandle1b_out1 = (GTEp75_relop1 == 1'b0 ? p75mA_out1 :
              Amp75_out1);



  assign QuadHandle1b_out1_dtc = (QuadHandle1b_out1[31:17] != 15'b000000000000000 ? 8'b11111111 :
              QuadHandle1b_out1[16:9]);



  assign QuadHandle1a_out1 = (LTEp25_relop1 == 1'b0 ? Amp25_out1 :
              p25mA_out1);



  assign QuadHandle1a_out1_dtc = (QuadHandle1a_out1[31:17] != 15'b000000000000000 ? 8'b11111111 :
              QuadHandle1a_out1[16:9]);



  assign QuadHandle2_out1 = (LTEp50_relop1 == 1'b0 ? QuadHandle1b_out1_dtc :
              QuadHandle1a_out1_dtc);



  assign CastU16En1_out1 = QuadHandle2_out1;



  assign CastU16En3_out1 = {1'b0, CastU16En1_out1};



  assign CastU16En2_out1 = (CastU16En3_out1[8] != 1'b0 ? 8'b11111111 :
              CastU16En3_out1[7:0]);



  // saturation block maybe optimized away
  // if the NumDataPoints is a power of 2
  assign Saturation_out1 = (CastU16En2_out1 > 8'b00111111 ? 8'b00111111 :
              CastU16En2_out1);



  assign Switch_out1 = (pow2switch_out1 == 1'b0 ? CastU16En2_out1 :
              Saturation_out1);



  assign Look_Up_Table_1[0] = 17'sb00000000000000000;
  assign Look_Up_Table_1[1] = 17'sb00000001100100100;
  assign Look_Up_Table_1[2] = 17'sb00000011001001000;
  assign Look_Up_Table_1[3] = 17'sb00000100101101011;
  assign Look_Up_Table_1[4] = 17'sb00000110010001100;
  assign Look_Up_Table_1[5] = 17'sb00000111110101011;
  assign Look_Up_Table_1[6] = 17'sb00001001011001000;
  assign Look_Up_Table_1[7] = 17'sb00001010111100010;
  assign Look_Up_Table_1[8] = 17'sb00001100011111001;
  assign Look_Up_Table_1[9] = 17'sb00001110000001100;
  assign Look_Up_Table_1[10] = 17'sb00001111100011010;
  assign Look_Up_Table_1[11] = 17'sb00010001000100100;
  assign Look_Up_Table_1[12] = 17'sb00010010100101000;
  assign Look_Up_Table_1[13] = 17'sb00010100000100111;
  assign Look_Up_Table_1[14] = 17'sb00010101100011111;
  assign Look_Up_Table_1[15] = 17'sb00010111000010001;
  assign Look_Up_Table_1[16] = 17'sb00011000011111100;
  assign Look_Up_Table_1[17] = 17'sb00011001111011111;
  assign Look_Up_Table_1[18] = 17'sb00011011010111010;
  assign Look_Up_Table_1[19] = 17'sb00011100110001101;
  assign Look_Up_Table_1[20] = 17'sb00011110001010111;
  assign Look_Up_Table_1[21] = 17'sb00011111100010111;
  assign Look_Up_Table_1[22] = 17'sb00100000111001110;
  assign Look_Up_Table_1[23] = 17'sb00100010001111011;
  assign Look_Up_Table_1[24] = 17'sb00100011100011101;
  assign Look_Up_Table_1[25] = 17'sb00100100110110100;
  assign Look_Up_Table_1[26] = 17'sb00100110001000000;
  assign Look_Up_Table_1[27] = 17'sb00100111011000000;
  assign Look_Up_Table_1[28] = 17'sb00101000100110100;
  assign Look_Up_Table_1[29] = 17'sb00101001110011011;
  assign Look_Up_Table_1[30] = 17'sb00101010111110110;
  assign Look_Up_Table_1[31] = 17'sb00101100001000011;
  assign Look_Up_Table_1[32] = 17'sb00101101010000010;
  assign Look_Up_Table_1[33] = 17'sb00101110010110100;
  assign Look_Up_Table_1[34] = 17'sb00101111011010111;
  assign Look_Up_Table_1[35] = 17'sb00110000011101100;
  assign Look_Up_Table_1[36] = 17'sb00110001011110010;
  assign Look_Up_Table_1[37] = 17'sb00110010011101001;
  assign Look_Up_Table_1[38] = 17'sb00110011011010000;
  assign Look_Up_Table_1[39] = 17'sb00110100010100111;
  assign Look_Up_Table_1[40] = 17'sb00110101001101110;
  assign Look_Up_Table_1[41] = 17'sb00110110000100100;
  assign Look_Up_Table_1[42] = 17'sb00110110111001010;
  assign Look_Up_Table_1[43] = 17'sb00110111101011111;
  assign Look_Up_Table_1[44] = 17'sb00111000011100011;
  assign Look_Up_Table_1[45] = 17'sb00111001001010101;
  assign Look_Up_Table_1[46] = 17'sb00111001110110110;
  assign Look_Up_Table_1[47] = 17'sb00111010100000101;
  assign Look_Up_Table_1[48] = 17'sb00111011001000010;
  assign Look_Up_Table_1[49] = 17'sb00111011101101100;
  assign Look_Up_Table_1[50] = 17'sb00111100010000101;
  assign Look_Up_Table_1[51] = 17'sb00111100110001010;
  assign Look_Up_Table_1[52] = 17'sb00111101001111101;
  assign Look_Up_Table_1[53] = 17'sb00111101101011101;
  assign Look_Up_Table_1[54] = 17'sb00111110000101010;
  assign Look_Up_Table_1[55] = 17'sb00111110011100100;
  assign Look_Up_Table_1[56] = 17'sb00111110110001010;
  assign Look_Up_Table_1[57] = 17'sb00111111000011110;
  assign Look_Up_Table_1[58] = 17'sb00111111010011101;
  assign Look_Up_Table_1[59] = 17'sb00111111100001010;
  assign Look_Up_Table_1[60] = 17'sb00111111101100010;
  assign Look_Up_Table_1[61] = 17'sb00111111110100111;
  assign Look_Up_Table_1[62] = 17'sb00111111111011001;
  assign Look_Up_Table_1[63] = 17'sb00111111111110110;
  assign Look_Up_Table_k = (Switch_out1 == 8'b00000000 ? 6'b000000 :
              (Switch_out1 >= 8'b00111111 ? 6'b111111 :
              Switch_out1[5:0]));
  assign Look_Up_Table_out1 = Look_Up_Table_1[Look_Up_Table_k];



  always @(posedge clk)
    begin : PipelineRegister_process
      if (enb) begin
        Look_Up_Table_out1_1 <= Look_Up_Table_out1;
      end
    end



  assign Negate_cast = {Look_Up_Table_out1_1[16], Look_Up_Table_out1_1};
  assign Negate_cast_1 =  - (Negate_cast);
  assign Negate_out1 = Negate_cast_1[16:0];



  assign Cosine = (RAMDelayBalance_out1 == 8'b00000000 ? Negate_out1 :
              Look_Up_Table_out1_1);



  assign Cosine_1 = Cosine;

  assign x = Cosine_1;

endmodule  // Cosine_HDL_Optimized

