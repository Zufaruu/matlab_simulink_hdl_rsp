// -------------------------------------------------------------
// 
// File Name: C:\Users\acer\OneDrive\Documents\ITS CAK V2\Magang\BRIN\Progress\Matlab Simulink\HDL Coder\proyek\OFDM\Tx_OFDM_Verilog\Tx_OFDM\Transmitter.v
// Created: 2023-06-11 16:01:44
// 
// Generated by MATLAB 9.14 and HDL Coder 4.1
// 
// 
// -- -------------------------------------------------------------
// -- Rate and Clocking Details
// -- -------------------------------------------------------------
// Model base rate: 1.5625e-06
// Target subsystem base rate: 1.5625e-06
// 
// 
// Clock Enable  Sample Time
// -- -------------------------------------------------------------
// ce_out        1.5625e-06
// -- -------------------------------------------------------------
// 
// 
// Output Signal                 Clock Enable  Sample Time
// -- -------------------------------------------------------------
// OFDM_Signal                   ce_out        1.5625e-06
// -- -------------------------------------------------------------
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Transmitter
// Source Path: Tx_OFDM/Transmitter
// Hierarchy Level: 0
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Transmitter
          (clk,
           reset,
           clk_enable,
           Serial_Bits,
           ce_out,
           OFDM_Signal);


  input   clk;
  input   reset;
  input   clk_enable;
  input   [7:0] Serial_Bits;  // uint8
  output  ce_out;
  output  signed [63:0] OFDM_Signal;  // sfix64_En29


  wire enb_1_4096_0;
  wire enb;
  wire enb_1_4096_1;
  wire enb_1_64_0;
  wire enb_1_64_1;
  wire enb_1_1_1;
  reg [15:0] ctr_4095_sig;  // ufix16
  wire crp_temp_enb_phase_6_0;
  wire signed [15:0] buffer_re_0;  // sfix16_En14
  wire signed [15:0] buffer_re_1;  // sfix16_En14
  wire signed [15:0] buffer_re_2;  // sfix16_En14
  wire signed [15:0] buffer_re_3;  // sfix16_En14
  wire signed [15:0] buffer_re_4;  // sfix16_En14
  wire signed [15:0] buffer_re_5;  // sfix16_En14
  wire signed [15:0] buffer_re_6;  // sfix16_En14
  wire signed [15:0] buffer_re_7;  // sfix16_En14
  wire signed [15:0] buffer_re_8;  // sfix16_En14
  wire signed [15:0] buffer_re_9;  // sfix16_En14
  wire signed [15:0] buffer_re_10;  // sfix16_En14
  wire signed [15:0] buffer_re_11;  // sfix16_En14
  wire signed [15:0] buffer_re_12;  // sfix16_En14
  wire signed [15:0] buffer_re_13;  // sfix16_En14
  wire signed [15:0] buffer_re_14;  // sfix16_En14
  wire signed [15:0] buffer_re_15;  // sfix16_En14
  wire signed [15:0] buffer_re_16;  // sfix16_En14
  wire signed [15:0] buffer_re_17;  // sfix16_En14
  wire signed [15:0] buffer_re_18;  // sfix16_En14
  wire signed [15:0] buffer_re_19;  // sfix16_En14
  wire signed [15:0] buffer_re_20;  // sfix16_En14
  wire signed [15:0] buffer_re_21;  // sfix16_En14
  wire signed [15:0] buffer_re_22;  // sfix16_En14
  wire signed [15:0] buffer_re_23;  // sfix16_En14
  wire signed [15:0] buffer_re_24;  // sfix16_En14
  wire signed [15:0] buffer_re_25;  // sfix16_En14
  wire signed [15:0] buffer_re_26;  // sfix16_En14
  wire signed [15:0] buffer_re_27;  // sfix16_En14
  wire signed [15:0] buffer_re_28;  // sfix16_En14
  wire signed [15:0] buffer_re_29;  // sfix16_En14
  wire signed [15:0] buffer_re_30;  // sfix16_En14
  wire signed [15:0] buffer_re_31;  // sfix16_En14
  wire signed [15:0] buffer_re_32;  // sfix16_En14
  wire signed [15:0] buffer_re_33;  // sfix16_En14
  wire signed [15:0] buffer_re_34;  // sfix16_En14
  wire signed [15:0] buffer_re_35;  // sfix16_En14
  wire signed [15:0] buffer_re_36;  // sfix16_En14
  wire signed [15:0] buffer_re_37;  // sfix16_En14
  wire signed [15:0] buffer_re_38;  // sfix16_En14
  wire signed [15:0] buffer_re_39;  // sfix16_En14
  wire signed [15:0] buffer_re_40;  // sfix16_En14
  wire signed [15:0] buffer_re_41;  // sfix16_En14
  wire signed [15:0] buffer_re_42;  // sfix16_En14
  wire signed [15:0] buffer_re_43;  // sfix16_En14
  wire signed [15:0] buffer_re_44;  // sfix16_En14
  wire signed [15:0] buffer_re_45;  // sfix16_En14
  wire signed [15:0] buffer_re_46;  // sfix16_En14
  wire signed [15:0] buffer_re_47;  // sfix16_En14
  wire signed [15:0] buffer_re_48;  // sfix16_En14
  wire signed [15:0] buffer_re_49;  // sfix16_En14
  wire signed [15:0] buffer_re_50;  // sfix16_En14
  wire signed [15:0] buffer_re_51;  // sfix16_En14
  wire signed [15:0] buffer_re_52;  // sfix16_En14
  wire signed [15:0] buffer_re_53;  // sfix16_En14
  wire signed [15:0] buffer_re_54;  // sfix16_En14
  wire signed [15:0] buffer_re_55;  // sfix16_En14
  wire signed [15:0] buffer_re_56;  // sfix16_En14
  wire signed [15:0] buffer_re_57;  // sfix16_En14
  wire signed [15:0] buffer_re_58;  // sfix16_En14
  wire signed [15:0] buffer_re_59;  // sfix16_En14
  wire signed [15:0] buffer_re_60;  // sfix16_En14
  wire signed [15:0] buffer_re_61;  // sfix16_En14
  wire signed [15:0] buffer_re_62;  // sfix16_En14
  wire signed [15:0] buffer_re_63;  // sfix16_En14
  wire signed [15:0] buffer_im_0;  // sfix16_En14
  wire signed [15:0] buffer_im_1;  // sfix16_En14
  wire signed [15:0] buffer_im_2;  // sfix16_En14
  wire signed [15:0] buffer_im_3;  // sfix16_En14
  wire signed [15:0] buffer_im_4;  // sfix16_En14
  wire signed [15:0] buffer_im_5;  // sfix16_En14
  wire signed [15:0] buffer_im_6;  // sfix16_En14
  wire signed [15:0] buffer_im_7;  // sfix16_En14
  wire signed [15:0] buffer_im_8;  // sfix16_En14
  wire signed [15:0] buffer_im_9;  // sfix16_En14
  wire signed [15:0] buffer_im_10;  // sfix16_En14
  wire signed [15:0] buffer_im_11;  // sfix16_En14
  wire signed [15:0] buffer_im_12;  // sfix16_En14
  wire signed [15:0] buffer_im_13;  // sfix16_En14
  wire signed [15:0] buffer_im_14;  // sfix16_En14
  wire signed [15:0] buffer_im_15;  // sfix16_En14
  wire signed [15:0] buffer_im_16;  // sfix16_En14
  wire signed [15:0] buffer_im_17;  // sfix16_En14
  wire signed [15:0] buffer_im_18;  // sfix16_En14
  wire signed [15:0] buffer_im_19;  // sfix16_En14
  wire signed [15:0] buffer_im_20;  // sfix16_En14
  wire signed [15:0] buffer_im_21;  // sfix16_En14
  wire signed [15:0] buffer_im_22;  // sfix16_En14
  wire signed [15:0] buffer_im_23;  // sfix16_En14
  wire signed [15:0] buffer_im_24;  // sfix16_En14
  wire signed [15:0] buffer_im_25;  // sfix16_En14
  wire signed [15:0] buffer_im_26;  // sfix16_En14
  wire signed [15:0] buffer_im_27;  // sfix16_En14
  wire signed [15:0] buffer_im_28;  // sfix16_En14
  wire signed [15:0] buffer_im_29;  // sfix16_En14
  wire signed [15:0] buffer_im_30;  // sfix16_En14
  wire signed [15:0] buffer_im_31;  // sfix16_En14
  wire signed [15:0] buffer_im_32;  // sfix16_En14
  wire signed [15:0] buffer_im_33;  // sfix16_En14
  wire signed [15:0] buffer_im_34;  // sfix16_En14
  wire signed [15:0] buffer_im_35;  // sfix16_En14
  wire signed [15:0] buffer_im_36;  // sfix16_En14
  wire signed [15:0] buffer_im_37;  // sfix16_En14
  wire signed [15:0] buffer_im_38;  // sfix16_En14
  wire signed [15:0] buffer_im_39;  // sfix16_En14
  wire signed [15:0] buffer_im_40;  // sfix16_En14
  wire signed [15:0] buffer_im_41;  // sfix16_En14
  wire signed [15:0] buffer_im_42;  // sfix16_En14
  wire signed [15:0] buffer_im_43;  // sfix16_En14
  wire signed [15:0] buffer_im_44;  // sfix16_En14
  wire signed [15:0] buffer_im_45;  // sfix16_En14
  wire signed [15:0] buffer_im_46;  // sfix16_En14
  wire signed [15:0] buffer_im_47;  // sfix16_En14
  wire signed [15:0] buffer_im_48;  // sfix16_En14
  wire signed [15:0] buffer_im_49;  // sfix16_En14
  wire signed [15:0] buffer_im_50;  // sfix16_En14
  wire signed [15:0] buffer_im_51;  // sfix16_En14
  wire signed [15:0] buffer_im_52;  // sfix16_En14
  wire signed [15:0] buffer_im_53;  // sfix16_En14
  wire signed [15:0] buffer_im_54;  // sfix16_En14
  wire signed [15:0] buffer_im_55;  // sfix16_En14
  wire signed [15:0] buffer_im_56;  // sfix16_En14
  wire signed [15:0] buffer_im_57;  // sfix16_En14
  wire signed [15:0] buffer_im_58;  // sfix16_En14
  wire signed [15:0] buffer_im_59;  // sfix16_En14
  wire signed [15:0] buffer_im_60;  // sfix16_En14
  wire signed [15:0] buffer_im_61;  // sfix16_En14
  wire signed [15:0] buffer_im_62;  // sfix16_En14
  wire signed [15:0] buffer_im_63;  // sfix16_En14
  wire signed [15:0] buffer_re [0:63];  // sfix16_En14 [64]
  wire signed [15:0] buffer_im [0:63];  // sfix16_En14 [64]
  wire signed [15:0] RT2_out1_re [0:63];  // sfix16_En14 [64]
  wire signed [15:0] RT2_out1_im [0:63];  // sfix16_En14 [64]
  reg signed [15:0] RT2_out1_held_re [0:63];  // sfix16_En14 [64]
  reg signed [15:0] RT2_out1_held_im [0:63];  // sfix16_En14 [64]
  reg signed [15:0] OFDM_Modulator1_bypass_reg_re [0:63];  // sfix16_En14 [64]
  reg signed [15:0] OFDM_Modulator1_bypass_reg_im [0:63];  // sfix16_En14 [64]
  wire signed [15:0] OFDM_Modulator1_bypass_reg_next_re [0:63];  // sfix16_En14 [64]
  wire signed [15:0] OFDM_Modulator1_bypass_reg_next_im [0:63];  // sfix16_En14 [64]
  wire signed [15:0] RT2_out1_re_1 [0:63];  // sfix16_En14 [64]
  wire signed [15:0] RT2_out1_im_1 [0:63];  // sfix16_En14 [64]
  wire signed [15:0] OFDM_Modulator_out1_re_0;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_1;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_2;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_3;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_4;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_5;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_6;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_7;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_8;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_9;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_10;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_11;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_12;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_13;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_14;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_15;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_16;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_17;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_18;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_19;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_20;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_21;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_22;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_23;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_24;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_25;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_26;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_27;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_28;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_29;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_30;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_31;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_32;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_33;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_34;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_35;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_36;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_37;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_38;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_39;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_40;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_41;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_42;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_43;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_44;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_45;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_46;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_47;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_48;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_49;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_50;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_51;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_52;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_53;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_54;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_55;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_56;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_57;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_58;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_59;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_60;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_61;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_62;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_re_63;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_0;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_1;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_2;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_3;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_4;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_5;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_6;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_7;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_8;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_9;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_10;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_11;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_12;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_13;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_14;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_15;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_16;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_17;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_18;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_19;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_20;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_21;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_22;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_23;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_24;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_25;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_26;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_27;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_28;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_29;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_30;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_31;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_32;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_33;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_34;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_35;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_36;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_37;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_38;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_39;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_40;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_41;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_42;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_43;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_44;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_45;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_46;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_47;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_48;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_49;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_50;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_51;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_52;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_53;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_54;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_55;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_56;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_57;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_58;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_59;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_60;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_61;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_62;  // sfix16_En14
  wire signed [15:0] OFDM_Modulator_out1_im_63;  // sfix16_En14
  wire signed [63:0] IQ_Modulator_out1;  // sfix64_En29

  // symbol_time (stime) = 0.1 ms
  // bit_time = 0.1 / M_ary
  // N = FFT length (total subcarrier)


  Transmitter_tc u_Transmitter_tc (.clk(clk),
                                   .reset(reset),
                                   .clk_enable(clk_enable),
                                   .enb(enb),
                                   .enb_1_1_1(enb_1_1_1),
                                   .enb_1_64_0(enb_1_64_0),
                                   .enb_1_64_1(enb_1_64_1),
                                   .enb_1_4096_0(enb_1_4096_0),
                                   .enb_1_4096_1(enb_1_4096_1)
                                   );

  // Count limited, Unsigned Counter
  //  initial value   = 0
  //  step value      = 1
  //  count to value  = 4095
  always @(posedge clk or posedge reset)
    begin : ctr_4095_process
      if (reset == 1'b1) begin
        ctr_4095_sig <= 16'b0000000000000000;
      end
      else begin
        if (enb) begin
          if (ctr_4095_sig >= 16'b0000111111111111) begin
            ctr_4095_sig <= 16'b0000000000000000;
          end
          else begin
            ctr_4095_sig <= ctr_4095_sig + 16'b0000000000000001;
          end
        end
      end
    end



  assign crp_temp_enb_phase_6_0 = ctr_4095_sig == 16'b0000000000000110;



  QAM_Modulator u_QAM_Modulator (.clk(clk),
                                 .reset(reset),
                                 .enb(enb),
                                 .enb_1_64_0(enb_1_64_0),
                                 .enb_1_64_1(enb_1_64_1),
                                 .serial(Serial_Bits),  // uint8
                                 .vector_re_0(buffer_re_0),  // sfix16_En14
                                 .vector_re_1(buffer_re_1),  // sfix16_En14
                                 .vector_re_2(buffer_re_2),  // sfix16_En14
                                 .vector_re_3(buffer_re_3),  // sfix16_En14
                                 .vector_re_4(buffer_re_4),  // sfix16_En14
                                 .vector_re_5(buffer_re_5),  // sfix16_En14
                                 .vector_re_6(buffer_re_6),  // sfix16_En14
                                 .vector_re_7(buffer_re_7),  // sfix16_En14
                                 .vector_re_8(buffer_re_8),  // sfix16_En14
                                 .vector_re_9(buffer_re_9),  // sfix16_En14
                                 .vector_re_10(buffer_re_10),  // sfix16_En14
                                 .vector_re_11(buffer_re_11),  // sfix16_En14
                                 .vector_re_12(buffer_re_12),  // sfix16_En14
                                 .vector_re_13(buffer_re_13),  // sfix16_En14
                                 .vector_re_14(buffer_re_14),  // sfix16_En14
                                 .vector_re_15(buffer_re_15),  // sfix16_En14
                                 .vector_re_16(buffer_re_16),  // sfix16_En14
                                 .vector_re_17(buffer_re_17),  // sfix16_En14
                                 .vector_re_18(buffer_re_18),  // sfix16_En14
                                 .vector_re_19(buffer_re_19),  // sfix16_En14
                                 .vector_re_20(buffer_re_20),  // sfix16_En14
                                 .vector_re_21(buffer_re_21),  // sfix16_En14
                                 .vector_re_22(buffer_re_22),  // sfix16_En14
                                 .vector_re_23(buffer_re_23),  // sfix16_En14
                                 .vector_re_24(buffer_re_24),  // sfix16_En14
                                 .vector_re_25(buffer_re_25),  // sfix16_En14
                                 .vector_re_26(buffer_re_26),  // sfix16_En14
                                 .vector_re_27(buffer_re_27),  // sfix16_En14
                                 .vector_re_28(buffer_re_28),  // sfix16_En14
                                 .vector_re_29(buffer_re_29),  // sfix16_En14
                                 .vector_re_30(buffer_re_30),  // sfix16_En14
                                 .vector_re_31(buffer_re_31),  // sfix16_En14
                                 .vector_re_32(buffer_re_32),  // sfix16_En14
                                 .vector_re_33(buffer_re_33),  // sfix16_En14
                                 .vector_re_34(buffer_re_34),  // sfix16_En14
                                 .vector_re_35(buffer_re_35),  // sfix16_En14
                                 .vector_re_36(buffer_re_36),  // sfix16_En14
                                 .vector_re_37(buffer_re_37),  // sfix16_En14
                                 .vector_re_38(buffer_re_38),  // sfix16_En14
                                 .vector_re_39(buffer_re_39),  // sfix16_En14
                                 .vector_re_40(buffer_re_40),  // sfix16_En14
                                 .vector_re_41(buffer_re_41),  // sfix16_En14
                                 .vector_re_42(buffer_re_42),  // sfix16_En14
                                 .vector_re_43(buffer_re_43),  // sfix16_En14
                                 .vector_re_44(buffer_re_44),  // sfix16_En14
                                 .vector_re_45(buffer_re_45),  // sfix16_En14
                                 .vector_re_46(buffer_re_46),  // sfix16_En14
                                 .vector_re_47(buffer_re_47),  // sfix16_En14
                                 .vector_re_48(buffer_re_48),  // sfix16_En14
                                 .vector_re_49(buffer_re_49),  // sfix16_En14
                                 .vector_re_50(buffer_re_50),  // sfix16_En14
                                 .vector_re_51(buffer_re_51),  // sfix16_En14
                                 .vector_re_52(buffer_re_52),  // sfix16_En14
                                 .vector_re_53(buffer_re_53),  // sfix16_En14
                                 .vector_re_54(buffer_re_54),  // sfix16_En14
                                 .vector_re_55(buffer_re_55),  // sfix16_En14
                                 .vector_re_56(buffer_re_56),  // sfix16_En14
                                 .vector_re_57(buffer_re_57),  // sfix16_En14
                                 .vector_re_58(buffer_re_58),  // sfix16_En14
                                 .vector_re_59(buffer_re_59),  // sfix16_En14
                                 .vector_re_60(buffer_re_60),  // sfix16_En14
                                 .vector_re_61(buffer_re_61),  // sfix16_En14
                                 .vector_re_62(buffer_re_62),  // sfix16_En14
                                 .vector_re_63(buffer_re_63),  // sfix16_En14
                                 .vector_im_0(buffer_im_0),  // sfix16_En14
                                 .vector_im_1(buffer_im_1),  // sfix16_En14
                                 .vector_im_2(buffer_im_2),  // sfix16_En14
                                 .vector_im_3(buffer_im_3),  // sfix16_En14
                                 .vector_im_4(buffer_im_4),  // sfix16_En14
                                 .vector_im_5(buffer_im_5),  // sfix16_En14
                                 .vector_im_6(buffer_im_6),  // sfix16_En14
                                 .vector_im_7(buffer_im_7),  // sfix16_En14
                                 .vector_im_8(buffer_im_8),  // sfix16_En14
                                 .vector_im_9(buffer_im_9),  // sfix16_En14
                                 .vector_im_10(buffer_im_10),  // sfix16_En14
                                 .vector_im_11(buffer_im_11),  // sfix16_En14
                                 .vector_im_12(buffer_im_12),  // sfix16_En14
                                 .vector_im_13(buffer_im_13),  // sfix16_En14
                                 .vector_im_14(buffer_im_14),  // sfix16_En14
                                 .vector_im_15(buffer_im_15),  // sfix16_En14
                                 .vector_im_16(buffer_im_16),  // sfix16_En14
                                 .vector_im_17(buffer_im_17),  // sfix16_En14
                                 .vector_im_18(buffer_im_18),  // sfix16_En14
                                 .vector_im_19(buffer_im_19),  // sfix16_En14
                                 .vector_im_20(buffer_im_20),  // sfix16_En14
                                 .vector_im_21(buffer_im_21),  // sfix16_En14
                                 .vector_im_22(buffer_im_22),  // sfix16_En14
                                 .vector_im_23(buffer_im_23),  // sfix16_En14
                                 .vector_im_24(buffer_im_24),  // sfix16_En14
                                 .vector_im_25(buffer_im_25),  // sfix16_En14
                                 .vector_im_26(buffer_im_26),  // sfix16_En14
                                 .vector_im_27(buffer_im_27),  // sfix16_En14
                                 .vector_im_28(buffer_im_28),  // sfix16_En14
                                 .vector_im_29(buffer_im_29),  // sfix16_En14
                                 .vector_im_30(buffer_im_30),  // sfix16_En14
                                 .vector_im_31(buffer_im_31),  // sfix16_En14
                                 .vector_im_32(buffer_im_32),  // sfix16_En14
                                 .vector_im_33(buffer_im_33),  // sfix16_En14
                                 .vector_im_34(buffer_im_34),  // sfix16_En14
                                 .vector_im_35(buffer_im_35),  // sfix16_En14
                                 .vector_im_36(buffer_im_36),  // sfix16_En14
                                 .vector_im_37(buffer_im_37),  // sfix16_En14
                                 .vector_im_38(buffer_im_38),  // sfix16_En14
                                 .vector_im_39(buffer_im_39),  // sfix16_En14
                                 .vector_im_40(buffer_im_40),  // sfix16_En14
                                 .vector_im_41(buffer_im_41),  // sfix16_En14
                                 .vector_im_42(buffer_im_42),  // sfix16_En14
                                 .vector_im_43(buffer_im_43),  // sfix16_En14
                                 .vector_im_44(buffer_im_44),  // sfix16_En14
                                 .vector_im_45(buffer_im_45),  // sfix16_En14
                                 .vector_im_46(buffer_im_46),  // sfix16_En14
                                 .vector_im_47(buffer_im_47),  // sfix16_En14
                                 .vector_im_48(buffer_im_48),  // sfix16_En14
                                 .vector_im_49(buffer_im_49),  // sfix16_En14
                                 .vector_im_50(buffer_im_50),  // sfix16_En14
                                 .vector_im_51(buffer_im_51),  // sfix16_En14
                                 .vector_im_52(buffer_im_52),  // sfix16_En14
                                 .vector_im_53(buffer_im_53),  // sfix16_En14
                                 .vector_im_54(buffer_im_54),  // sfix16_En14
                                 .vector_im_55(buffer_im_55),  // sfix16_En14
                                 .vector_im_56(buffer_im_56),  // sfix16_En14
                                 .vector_im_57(buffer_im_57),  // sfix16_En14
                                 .vector_im_58(buffer_im_58),  // sfix16_En14
                                 .vector_im_59(buffer_im_59),  // sfix16_En14
                                 .vector_im_60(buffer_im_60),  // sfix16_En14
                                 .vector_im_61(buffer_im_61),  // sfix16_En14
                                 .vector_im_62(buffer_im_62),  // sfix16_En14
                                 .vector_im_63(buffer_im_63)  // sfix16_En14
                                 );

  assign buffer_re[0] = buffer_re_0;
  assign buffer_re[1] = buffer_re_1;
  assign buffer_re[2] = buffer_re_2;
  assign buffer_re[3] = buffer_re_3;
  assign buffer_re[4] = buffer_re_4;
  assign buffer_re[5] = buffer_re_5;
  assign buffer_re[6] = buffer_re_6;
  assign buffer_re[7] = buffer_re_7;
  assign buffer_re[8] = buffer_re_8;
  assign buffer_re[9] = buffer_re_9;
  assign buffer_re[10] = buffer_re_10;
  assign buffer_re[11] = buffer_re_11;
  assign buffer_re[12] = buffer_re_12;
  assign buffer_re[13] = buffer_re_13;
  assign buffer_re[14] = buffer_re_14;
  assign buffer_re[15] = buffer_re_15;
  assign buffer_re[16] = buffer_re_16;
  assign buffer_re[17] = buffer_re_17;
  assign buffer_re[18] = buffer_re_18;
  assign buffer_re[19] = buffer_re_19;
  assign buffer_re[20] = buffer_re_20;
  assign buffer_re[21] = buffer_re_21;
  assign buffer_re[22] = buffer_re_22;
  assign buffer_re[23] = buffer_re_23;
  assign buffer_re[24] = buffer_re_24;
  assign buffer_re[25] = buffer_re_25;
  assign buffer_re[26] = buffer_re_26;
  assign buffer_re[27] = buffer_re_27;
  assign buffer_re[28] = buffer_re_28;
  assign buffer_re[29] = buffer_re_29;
  assign buffer_re[30] = buffer_re_30;
  assign buffer_re[31] = buffer_re_31;
  assign buffer_re[32] = buffer_re_32;
  assign buffer_re[33] = buffer_re_33;
  assign buffer_re[34] = buffer_re_34;
  assign buffer_re[35] = buffer_re_35;
  assign buffer_re[36] = buffer_re_36;
  assign buffer_re[37] = buffer_re_37;
  assign buffer_re[38] = buffer_re_38;
  assign buffer_re[39] = buffer_re_39;
  assign buffer_re[40] = buffer_re_40;
  assign buffer_re[41] = buffer_re_41;
  assign buffer_re[42] = buffer_re_42;
  assign buffer_re[43] = buffer_re_43;
  assign buffer_re[44] = buffer_re_44;
  assign buffer_re[45] = buffer_re_45;
  assign buffer_re[46] = buffer_re_46;
  assign buffer_re[47] = buffer_re_47;
  assign buffer_re[48] = buffer_re_48;
  assign buffer_re[49] = buffer_re_49;
  assign buffer_re[50] = buffer_re_50;
  assign buffer_re[51] = buffer_re_51;
  assign buffer_re[52] = buffer_re_52;
  assign buffer_re[53] = buffer_re_53;
  assign buffer_re[54] = buffer_re_54;
  assign buffer_re[55] = buffer_re_55;
  assign buffer_re[56] = buffer_re_56;
  assign buffer_re[57] = buffer_re_57;
  assign buffer_re[58] = buffer_re_58;
  assign buffer_re[59] = buffer_re_59;
  assign buffer_re[60] = buffer_re_60;
  assign buffer_re[61] = buffer_re_61;
  assign buffer_re[62] = buffer_re_62;
  assign buffer_re[63] = buffer_re_63;

  assign buffer_im[0] = buffer_im_0;
  assign buffer_im[1] = buffer_im_1;
  assign buffer_im[2] = buffer_im_2;
  assign buffer_im[3] = buffer_im_3;
  assign buffer_im[4] = buffer_im_4;
  assign buffer_im[5] = buffer_im_5;
  assign buffer_im[6] = buffer_im_6;
  assign buffer_im[7] = buffer_im_7;
  assign buffer_im[8] = buffer_im_8;
  assign buffer_im[9] = buffer_im_9;
  assign buffer_im[10] = buffer_im_10;
  assign buffer_im[11] = buffer_im_11;
  assign buffer_im[12] = buffer_im_12;
  assign buffer_im[13] = buffer_im_13;
  assign buffer_im[14] = buffer_im_14;
  assign buffer_im[15] = buffer_im_15;
  assign buffer_im[16] = buffer_im_16;
  assign buffer_im[17] = buffer_im_17;
  assign buffer_im[18] = buffer_im_18;
  assign buffer_im[19] = buffer_im_19;
  assign buffer_im[20] = buffer_im_20;
  assign buffer_im[21] = buffer_im_21;
  assign buffer_im[22] = buffer_im_22;
  assign buffer_im[23] = buffer_im_23;
  assign buffer_im[24] = buffer_im_24;
  assign buffer_im[25] = buffer_im_25;
  assign buffer_im[26] = buffer_im_26;
  assign buffer_im[27] = buffer_im_27;
  assign buffer_im[28] = buffer_im_28;
  assign buffer_im[29] = buffer_im_29;
  assign buffer_im[30] = buffer_im_30;
  assign buffer_im[31] = buffer_im_31;
  assign buffer_im[32] = buffer_im_32;
  assign buffer_im[33] = buffer_im_33;
  assign buffer_im[34] = buffer_im_34;
  assign buffer_im[35] = buffer_im_35;
  assign buffer_im[36] = buffer_im_36;
  assign buffer_im[37] = buffer_im_37;
  assign buffer_im[38] = buffer_im_38;
  assign buffer_im[39] = buffer_im_39;
  assign buffer_im[40] = buffer_im_40;
  assign buffer_im[41] = buffer_im_41;
  assign buffer_im[42] = buffer_im_42;
  assign buffer_im[43] = buffer_im_43;
  assign buffer_im[44] = buffer_im_44;
  assign buffer_im[45] = buffer_im_45;
  assign buffer_im[46] = buffer_im_46;
  assign buffer_im[47] = buffer_im_47;
  assign buffer_im[48] = buffer_im_48;
  assign buffer_im[49] = buffer_im_49;
  assign buffer_im[50] = buffer_im_50;
  assign buffer_im[51] = buffer_im_51;
  assign buffer_im[52] = buffer_im_52;
  assign buffer_im[53] = buffer_im_53;
  assign buffer_im[54] = buffer_im_54;
  assign buffer_im[55] = buffer_im_55;
  assign buffer_im[56] = buffer_im_56;
  assign buffer_im[57] = buffer_im_57;
  assign buffer_im[58] = buffer_im_58;
  assign buffer_im[59] = buffer_im_59;
  assign buffer_im[60] = buffer_im_60;
  assign buffer_im[61] = buffer_im_61;
  assign buffer_im[62] = buffer_im_62;
  assign buffer_im[63] = buffer_im_63;

  always @(posedge clk or posedge reset)
    begin : RT2_out1_state_process
      if (reset == 1'b1) begin
        RT2_out1_held_re[0] <= 16'sb0000000000000000;
        RT2_out1_held_im[0] <= 16'sb0000000000000000;
        RT2_out1_held_re[1] <= 16'sb0000000000000000;
        RT2_out1_held_im[1] <= 16'sb0000000000000000;
        RT2_out1_held_re[2] <= 16'sb0000000000000000;
        RT2_out1_held_im[2] <= 16'sb0000000000000000;
        RT2_out1_held_re[3] <= 16'sb0000000000000000;
        RT2_out1_held_im[3] <= 16'sb0000000000000000;
        RT2_out1_held_re[4] <= 16'sb0000000000000000;
        RT2_out1_held_im[4] <= 16'sb0000000000000000;
        RT2_out1_held_re[5] <= 16'sb0000000000000000;
        RT2_out1_held_im[5] <= 16'sb0000000000000000;
        RT2_out1_held_re[6] <= 16'sb0000000000000000;
        RT2_out1_held_im[6] <= 16'sb0000000000000000;
        RT2_out1_held_re[7] <= 16'sb0000000000000000;
        RT2_out1_held_im[7] <= 16'sb0000000000000000;
        RT2_out1_held_re[8] <= 16'sb0000000000000000;
        RT2_out1_held_im[8] <= 16'sb0000000000000000;
        RT2_out1_held_re[9] <= 16'sb0000000000000000;
        RT2_out1_held_im[9] <= 16'sb0000000000000000;
        RT2_out1_held_re[10] <= 16'sb0000000000000000;
        RT2_out1_held_im[10] <= 16'sb0000000000000000;
        RT2_out1_held_re[11] <= 16'sb0000000000000000;
        RT2_out1_held_im[11] <= 16'sb0000000000000000;
        RT2_out1_held_re[12] <= 16'sb0000000000000000;
        RT2_out1_held_im[12] <= 16'sb0000000000000000;
        RT2_out1_held_re[13] <= 16'sb0000000000000000;
        RT2_out1_held_im[13] <= 16'sb0000000000000000;
        RT2_out1_held_re[14] <= 16'sb0000000000000000;
        RT2_out1_held_im[14] <= 16'sb0000000000000000;
        RT2_out1_held_re[15] <= 16'sb0000000000000000;
        RT2_out1_held_im[15] <= 16'sb0000000000000000;
        RT2_out1_held_re[16] <= 16'sb0000000000000000;
        RT2_out1_held_im[16] <= 16'sb0000000000000000;
        RT2_out1_held_re[17] <= 16'sb0000000000000000;
        RT2_out1_held_im[17] <= 16'sb0000000000000000;
        RT2_out1_held_re[18] <= 16'sb0000000000000000;
        RT2_out1_held_im[18] <= 16'sb0000000000000000;
        RT2_out1_held_re[19] <= 16'sb0000000000000000;
        RT2_out1_held_im[19] <= 16'sb0000000000000000;
        RT2_out1_held_re[20] <= 16'sb0000000000000000;
        RT2_out1_held_im[20] <= 16'sb0000000000000000;
        RT2_out1_held_re[21] <= 16'sb0000000000000000;
        RT2_out1_held_im[21] <= 16'sb0000000000000000;
        RT2_out1_held_re[22] <= 16'sb0000000000000000;
        RT2_out1_held_im[22] <= 16'sb0000000000000000;
        RT2_out1_held_re[23] <= 16'sb0000000000000000;
        RT2_out1_held_im[23] <= 16'sb0000000000000000;
        RT2_out1_held_re[24] <= 16'sb0000000000000000;
        RT2_out1_held_im[24] <= 16'sb0000000000000000;
        RT2_out1_held_re[25] <= 16'sb0000000000000000;
        RT2_out1_held_im[25] <= 16'sb0000000000000000;
        RT2_out1_held_re[26] <= 16'sb0000000000000000;
        RT2_out1_held_im[26] <= 16'sb0000000000000000;
        RT2_out1_held_re[27] <= 16'sb0000000000000000;
        RT2_out1_held_im[27] <= 16'sb0000000000000000;
        RT2_out1_held_re[28] <= 16'sb0000000000000000;
        RT2_out1_held_im[28] <= 16'sb0000000000000000;
        RT2_out1_held_re[29] <= 16'sb0000000000000000;
        RT2_out1_held_im[29] <= 16'sb0000000000000000;
        RT2_out1_held_re[30] <= 16'sb0000000000000000;
        RT2_out1_held_im[30] <= 16'sb0000000000000000;
        RT2_out1_held_re[31] <= 16'sb0000000000000000;
        RT2_out1_held_im[31] <= 16'sb0000000000000000;
        RT2_out1_held_re[32] <= 16'sb0000000000000000;
        RT2_out1_held_im[32] <= 16'sb0000000000000000;
        RT2_out1_held_re[33] <= 16'sb0000000000000000;
        RT2_out1_held_im[33] <= 16'sb0000000000000000;
        RT2_out1_held_re[34] <= 16'sb0000000000000000;
        RT2_out1_held_im[34] <= 16'sb0000000000000000;
        RT2_out1_held_re[35] <= 16'sb0000000000000000;
        RT2_out1_held_im[35] <= 16'sb0000000000000000;
        RT2_out1_held_re[36] <= 16'sb0000000000000000;
        RT2_out1_held_im[36] <= 16'sb0000000000000000;
        RT2_out1_held_re[37] <= 16'sb0000000000000000;
        RT2_out1_held_im[37] <= 16'sb0000000000000000;
        RT2_out1_held_re[38] <= 16'sb0000000000000000;
        RT2_out1_held_im[38] <= 16'sb0000000000000000;
        RT2_out1_held_re[39] <= 16'sb0000000000000000;
        RT2_out1_held_im[39] <= 16'sb0000000000000000;
        RT2_out1_held_re[40] <= 16'sb0000000000000000;
        RT2_out1_held_im[40] <= 16'sb0000000000000000;
        RT2_out1_held_re[41] <= 16'sb0000000000000000;
        RT2_out1_held_im[41] <= 16'sb0000000000000000;
        RT2_out1_held_re[42] <= 16'sb0000000000000000;
        RT2_out1_held_im[42] <= 16'sb0000000000000000;
        RT2_out1_held_re[43] <= 16'sb0000000000000000;
        RT2_out1_held_im[43] <= 16'sb0000000000000000;
        RT2_out1_held_re[44] <= 16'sb0000000000000000;
        RT2_out1_held_im[44] <= 16'sb0000000000000000;
        RT2_out1_held_re[45] <= 16'sb0000000000000000;
        RT2_out1_held_im[45] <= 16'sb0000000000000000;
        RT2_out1_held_re[46] <= 16'sb0000000000000000;
        RT2_out1_held_im[46] <= 16'sb0000000000000000;
        RT2_out1_held_re[47] <= 16'sb0000000000000000;
        RT2_out1_held_im[47] <= 16'sb0000000000000000;
        RT2_out1_held_re[48] <= 16'sb0000000000000000;
        RT2_out1_held_im[48] <= 16'sb0000000000000000;
        RT2_out1_held_re[49] <= 16'sb0000000000000000;
        RT2_out1_held_im[49] <= 16'sb0000000000000000;
        RT2_out1_held_re[50] <= 16'sb0000000000000000;
        RT2_out1_held_im[50] <= 16'sb0000000000000000;
        RT2_out1_held_re[51] <= 16'sb0000000000000000;
        RT2_out1_held_im[51] <= 16'sb0000000000000000;
        RT2_out1_held_re[52] <= 16'sb0000000000000000;
        RT2_out1_held_im[52] <= 16'sb0000000000000000;
        RT2_out1_held_re[53] <= 16'sb0000000000000000;
        RT2_out1_held_im[53] <= 16'sb0000000000000000;
        RT2_out1_held_re[54] <= 16'sb0000000000000000;
        RT2_out1_held_im[54] <= 16'sb0000000000000000;
        RT2_out1_held_re[55] <= 16'sb0000000000000000;
        RT2_out1_held_im[55] <= 16'sb0000000000000000;
        RT2_out1_held_re[56] <= 16'sb0000000000000000;
        RT2_out1_held_im[56] <= 16'sb0000000000000000;
        RT2_out1_held_re[57] <= 16'sb0000000000000000;
        RT2_out1_held_im[57] <= 16'sb0000000000000000;
        RT2_out1_held_re[58] <= 16'sb0000000000000000;
        RT2_out1_held_im[58] <= 16'sb0000000000000000;
        RT2_out1_held_re[59] <= 16'sb0000000000000000;
        RT2_out1_held_im[59] <= 16'sb0000000000000000;
        RT2_out1_held_re[60] <= 16'sb0000000000000000;
        RT2_out1_held_im[60] <= 16'sb0000000000000000;
        RT2_out1_held_re[61] <= 16'sb0000000000000000;
        RT2_out1_held_im[61] <= 16'sb0000000000000000;
        RT2_out1_held_re[62] <= 16'sb0000000000000000;
        RT2_out1_held_im[62] <= 16'sb0000000000000000;
        RT2_out1_held_re[63] <= 16'sb0000000000000000;
        RT2_out1_held_im[63] <= 16'sb0000000000000000;
      end
      else begin
        if (enb) begin
          RT2_out1_held_re[0] <= RT2_out1_re[0];
          RT2_out1_held_im[0] <= RT2_out1_im[0];
          RT2_out1_held_re[1] <= RT2_out1_re[1];
          RT2_out1_held_im[1] <= RT2_out1_im[1];
          RT2_out1_held_re[2] <= RT2_out1_re[2];
          RT2_out1_held_im[2] <= RT2_out1_im[2];
          RT2_out1_held_re[3] <= RT2_out1_re[3];
          RT2_out1_held_im[3] <= RT2_out1_im[3];
          RT2_out1_held_re[4] <= RT2_out1_re[4];
          RT2_out1_held_im[4] <= RT2_out1_im[4];
          RT2_out1_held_re[5] <= RT2_out1_re[5];
          RT2_out1_held_im[5] <= RT2_out1_im[5];
          RT2_out1_held_re[6] <= RT2_out1_re[6];
          RT2_out1_held_im[6] <= RT2_out1_im[6];
          RT2_out1_held_re[7] <= RT2_out1_re[7];
          RT2_out1_held_im[7] <= RT2_out1_im[7];
          RT2_out1_held_re[8] <= RT2_out1_re[8];
          RT2_out1_held_im[8] <= RT2_out1_im[8];
          RT2_out1_held_re[9] <= RT2_out1_re[9];
          RT2_out1_held_im[9] <= RT2_out1_im[9];
          RT2_out1_held_re[10] <= RT2_out1_re[10];
          RT2_out1_held_im[10] <= RT2_out1_im[10];
          RT2_out1_held_re[11] <= RT2_out1_re[11];
          RT2_out1_held_im[11] <= RT2_out1_im[11];
          RT2_out1_held_re[12] <= RT2_out1_re[12];
          RT2_out1_held_im[12] <= RT2_out1_im[12];
          RT2_out1_held_re[13] <= RT2_out1_re[13];
          RT2_out1_held_im[13] <= RT2_out1_im[13];
          RT2_out1_held_re[14] <= RT2_out1_re[14];
          RT2_out1_held_im[14] <= RT2_out1_im[14];
          RT2_out1_held_re[15] <= RT2_out1_re[15];
          RT2_out1_held_im[15] <= RT2_out1_im[15];
          RT2_out1_held_re[16] <= RT2_out1_re[16];
          RT2_out1_held_im[16] <= RT2_out1_im[16];
          RT2_out1_held_re[17] <= RT2_out1_re[17];
          RT2_out1_held_im[17] <= RT2_out1_im[17];
          RT2_out1_held_re[18] <= RT2_out1_re[18];
          RT2_out1_held_im[18] <= RT2_out1_im[18];
          RT2_out1_held_re[19] <= RT2_out1_re[19];
          RT2_out1_held_im[19] <= RT2_out1_im[19];
          RT2_out1_held_re[20] <= RT2_out1_re[20];
          RT2_out1_held_im[20] <= RT2_out1_im[20];
          RT2_out1_held_re[21] <= RT2_out1_re[21];
          RT2_out1_held_im[21] <= RT2_out1_im[21];
          RT2_out1_held_re[22] <= RT2_out1_re[22];
          RT2_out1_held_im[22] <= RT2_out1_im[22];
          RT2_out1_held_re[23] <= RT2_out1_re[23];
          RT2_out1_held_im[23] <= RT2_out1_im[23];
          RT2_out1_held_re[24] <= RT2_out1_re[24];
          RT2_out1_held_im[24] <= RT2_out1_im[24];
          RT2_out1_held_re[25] <= RT2_out1_re[25];
          RT2_out1_held_im[25] <= RT2_out1_im[25];
          RT2_out1_held_re[26] <= RT2_out1_re[26];
          RT2_out1_held_im[26] <= RT2_out1_im[26];
          RT2_out1_held_re[27] <= RT2_out1_re[27];
          RT2_out1_held_im[27] <= RT2_out1_im[27];
          RT2_out1_held_re[28] <= RT2_out1_re[28];
          RT2_out1_held_im[28] <= RT2_out1_im[28];
          RT2_out1_held_re[29] <= RT2_out1_re[29];
          RT2_out1_held_im[29] <= RT2_out1_im[29];
          RT2_out1_held_re[30] <= RT2_out1_re[30];
          RT2_out1_held_im[30] <= RT2_out1_im[30];
          RT2_out1_held_re[31] <= RT2_out1_re[31];
          RT2_out1_held_im[31] <= RT2_out1_im[31];
          RT2_out1_held_re[32] <= RT2_out1_re[32];
          RT2_out1_held_im[32] <= RT2_out1_im[32];
          RT2_out1_held_re[33] <= RT2_out1_re[33];
          RT2_out1_held_im[33] <= RT2_out1_im[33];
          RT2_out1_held_re[34] <= RT2_out1_re[34];
          RT2_out1_held_im[34] <= RT2_out1_im[34];
          RT2_out1_held_re[35] <= RT2_out1_re[35];
          RT2_out1_held_im[35] <= RT2_out1_im[35];
          RT2_out1_held_re[36] <= RT2_out1_re[36];
          RT2_out1_held_im[36] <= RT2_out1_im[36];
          RT2_out1_held_re[37] <= RT2_out1_re[37];
          RT2_out1_held_im[37] <= RT2_out1_im[37];
          RT2_out1_held_re[38] <= RT2_out1_re[38];
          RT2_out1_held_im[38] <= RT2_out1_im[38];
          RT2_out1_held_re[39] <= RT2_out1_re[39];
          RT2_out1_held_im[39] <= RT2_out1_im[39];
          RT2_out1_held_re[40] <= RT2_out1_re[40];
          RT2_out1_held_im[40] <= RT2_out1_im[40];
          RT2_out1_held_re[41] <= RT2_out1_re[41];
          RT2_out1_held_im[41] <= RT2_out1_im[41];
          RT2_out1_held_re[42] <= RT2_out1_re[42];
          RT2_out1_held_im[42] <= RT2_out1_im[42];
          RT2_out1_held_re[43] <= RT2_out1_re[43];
          RT2_out1_held_im[43] <= RT2_out1_im[43];
          RT2_out1_held_re[44] <= RT2_out1_re[44];
          RT2_out1_held_im[44] <= RT2_out1_im[44];
          RT2_out1_held_re[45] <= RT2_out1_re[45];
          RT2_out1_held_im[45] <= RT2_out1_im[45];
          RT2_out1_held_re[46] <= RT2_out1_re[46];
          RT2_out1_held_im[46] <= RT2_out1_im[46];
          RT2_out1_held_re[47] <= RT2_out1_re[47];
          RT2_out1_held_im[47] <= RT2_out1_im[47];
          RT2_out1_held_re[48] <= RT2_out1_re[48];
          RT2_out1_held_im[48] <= RT2_out1_im[48];
          RT2_out1_held_re[49] <= RT2_out1_re[49];
          RT2_out1_held_im[49] <= RT2_out1_im[49];
          RT2_out1_held_re[50] <= RT2_out1_re[50];
          RT2_out1_held_im[50] <= RT2_out1_im[50];
          RT2_out1_held_re[51] <= RT2_out1_re[51];
          RT2_out1_held_im[51] <= RT2_out1_im[51];
          RT2_out1_held_re[52] <= RT2_out1_re[52];
          RT2_out1_held_im[52] <= RT2_out1_im[52];
          RT2_out1_held_re[53] <= RT2_out1_re[53];
          RT2_out1_held_im[53] <= RT2_out1_im[53];
          RT2_out1_held_re[54] <= RT2_out1_re[54];
          RT2_out1_held_im[54] <= RT2_out1_im[54];
          RT2_out1_held_re[55] <= RT2_out1_re[55];
          RT2_out1_held_im[55] <= RT2_out1_im[55];
          RT2_out1_held_re[56] <= RT2_out1_re[56];
          RT2_out1_held_im[56] <= RT2_out1_im[56];
          RT2_out1_held_re[57] <= RT2_out1_re[57];
          RT2_out1_held_im[57] <= RT2_out1_im[57];
          RT2_out1_held_re[58] <= RT2_out1_re[58];
          RT2_out1_held_im[58] <= RT2_out1_im[58];
          RT2_out1_held_re[59] <= RT2_out1_re[59];
          RT2_out1_held_im[59] <= RT2_out1_im[59];
          RT2_out1_held_re[60] <= RT2_out1_re[60];
          RT2_out1_held_im[60] <= RT2_out1_im[60];
          RT2_out1_held_re[61] <= RT2_out1_re[61];
          RT2_out1_held_im[61] <= RT2_out1_im[61];
          RT2_out1_held_re[62] <= RT2_out1_re[62];
          RT2_out1_held_im[62] <= RT2_out1_im[62];
          RT2_out1_held_re[63] <= RT2_out1_re[63];
          RT2_out1_held_im[63] <= RT2_out1_im[63];
        end
      end
    end



  assign RT2_out1_re[0] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[0] :
              buffer_re[0]);
  assign RT2_out1_re[1] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[1] :
              buffer_re[1]);
  assign RT2_out1_re[2] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[2] :
              buffer_re[2]);
  assign RT2_out1_re[3] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[3] :
              buffer_re[3]);
  assign RT2_out1_re[4] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[4] :
              buffer_re[4]);
  assign RT2_out1_re[5] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[5] :
              buffer_re[5]);
  assign RT2_out1_re[6] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[6] :
              buffer_re[6]);
  assign RT2_out1_re[7] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[7] :
              buffer_re[7]);
  assign RT2_out1_re[8] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[8] :
              buffer_re[8]);
  assign RT2_out1_re[9] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[9] :
              buffer_re[9]);
  assign RT2_out1_re[10] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[10] :
              buffer_re[10]);
  assign RT2_out1_re[11] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[11] :
              buffer_re[11]);
  assign RT2_out1_re[12] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[12] :
              buffer_re[12]);
  assign RT2_out1_re[13] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[13] :
              buffer_re[13]);
  assign RT2_out1_re[14] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[14] :
              buffer_re[14]);
  assign RT2_out1_re[15] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[15] :
              buffer_re[15]);
  assign RT2_out1_re[16] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[16] :
              buffer_re[16]);
  assign RT2_out1_re[17] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[17] :
              buffer_re[17]);
  assign RT2_out1_re[18] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[18] :
              buffer_re[18]);
  assign RT2_out1_re[19] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[19] :
              buffer_re[19]);
  assign RT2_out1_re[20] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[20] :
              buffer_re[20]);
  assign RT2_out1_re[21] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[21] :
              buffer_re[21]);
  assign RT2_out1_re[22] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[22] :
              buffer_re[22]);
  assign RT2_out1_re[23] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[23] :
              buffer_re[23]);
  assign RT2_out1_re[24] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[24] :
              buffer_re[24]);
  assign RT2_out1_re[25] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[25] :
              buffer_re[25]);
  assign RT2_out1_re[26] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[26] :
              buffer_re[26]);
  assign RT2_out1_re[27] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[27] :
              buffer_re[27]);
  assign RT2_out1_re[28] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[28] :
              buffer_re[28]);
  assign RT2_out1_re[29] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[29] :
              buffer_re[29]);
  assign RT2_out1_re[30] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[30] :
              buffer_re[30]);
  assign RT2_out1_re[31] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[31] :
              buffer_re[31]);
  assign RT2_out1_re[32] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[32] :
              buffer_re[32]);
  assign RT2_out1_re[33] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[33] :
              buffer_re[33]);
  assign RT2_out1_re[34] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[34] :
              buffer_re[34]);
  assign RT2_out1_re[35] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[35] :
              buffer_re[35]);
  assign RT2_out1_re[36] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[36] :
              buffer_re[36]);
  assign RT2_out1_re[37] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[37] :
              buffer_re[37]);
  assign RT2_out1_re[38] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[38] :
              buffer_re[38]);
  assign RT2_out1_re[39] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[39] :
              buffer_re[39]);
  assign RT2_out1_re[40] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[40] :
              buffer_re[40]);
  assign RT2_out1_re[41] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[41] :
              buffer_re[41]);
  assign RT2_out1_re[42] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[42] :
              buffer_re[42]);
  assign RT2_out1_re[43] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[43] :
              buffer_re[43]);
  assign RT2_out1_re[44] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[44] :
              buffer_re[44]);
  assign RT2_out1_re[45] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[45] :
              buffer_re[45]);
  assign RT2_out1_re[46] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[46] :
              buffer_re[46]);
  assign RT2_out1_re[47] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[47] :
              buffer_re[47]);
  assign RT2_out1_re[48] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[48] :
              buffer_re[48]);
  assign RT2_out1_re[49] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[49] :
              buffer_re[49]);
  assign RT2_out1_re[50] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[50] :
              buffer_re[50]);
  assign RT2_out1_re[51] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[51] :
              buffer_re[51]);
  assign RT2_out1_re[52] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[52] :
              buffer_re[52]);
  assign RT2_out1_re[53] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[53] :
              buffer_re[53]);
  assign RT2_out1_re[54] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[54] :
              buffer_re[54]);
  assign RT2_out1_re[55] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[55] :
              buffer_re[55]);
  assign RT2_out1_re[56] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[56] :
              buffer_re[56]);
  assign RT2_out1_re[57] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[57] :
              buffer_re[57]);
  assign RT2_out1_re[58] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[58] :
              buffer_re[58]);
  assign RT2_out1_re[59] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[59] :
              buffer_re[59]);
  assign RT2_out1_re[60] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[60] :
              buffer_re[60]);
  assign RT2_out1_re[61] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[61] :
              buffer_re[61]);
  assign RT2_out1_re[62] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[62] :
              buffer_re[62]);
  assign RT2_out1_re[63] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_re[63] :
              buffer_re[63]);
  assign RT2_out1_im[0] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[0] :
              buffer_im[0]);
  assign RT2_out1_im[1] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[1] :
              buffer_im[1]);
  assign RT2_out1_im[2] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[2] :
              buffer_im[2]);
  assign RT2_out1_im[3] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[3] :
              buffer_im[3]);
  assign RT2_out1_im[4] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[4] :
              buffer_im[4]);
  assign RT2_out1_im[5] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[5] :
              buffer_im[5]);
  assign RT2_out1_im[6] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[6] :
              buffer_im[6]);
  assign RT2_out1_im[7] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[7] :
              buffer_im[7]);
  assign RT2_out1_im[8] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[8] :
              buffer_im[8]);
  assign RT2_out1_im[9] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[9] :
              buffer_im[9]);
  assign RT2_out1_im[10] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[10] :
              buffer_im[10]);
  assign RT2_out1_im[11] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[11] :
              buffer_im[11]);
  assign RT2_out1_im[12] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[12] :
              buffer_im[12]);
  assign RT2_out1_im[13] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[13] :
              buffer_im[13]);
  assign RT2_out1_im[14] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[14] :
              buffer_im[14]);
  assign RT2_out1_im[15] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[15] :
              buffer_im[15]);
  assign RT2_out1_im[16] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[16] :
              buffer_im[16]);
  assign RT2_out1_im[17] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[17] :
              buffer_im[17]);
  assign RT2_out1_im[18] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[18] :
              buffer_im[18]);
  assign RT2_out1_im[19] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[19] :
              buffer_im[19]);
  assign RT2_out1_im[20] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[20] :
              buffer_im[20]);
  assign RT2_out1_im[21] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[21] :
              buffer_im[21]);
  assign RT2_out1_im[22] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[22] :
              buffer_im[22]);
  assign RT2_out1_im[23] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[23] :
              buffer_im[23]);
  assign RT2_out1_im[24] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[24] :
              buffer_im[24]);
  assign RT2_out1_im[25] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[25] :
              buffer_im[25]);
  assign RT2_out1_im[26] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[26] :
              buffer_im[26]);
  assign RT2_out1_im[27] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[27] :
              buffer_im[27]);
  assign RT2_out1_im[28] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[28] :
              buffer_im[28]);
  assign RT2_out1_im[29] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[29] :
              buffer_im[29]);
  assign RT2_out1_im[30] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[30] :
              buffer_im[30]);
  assign RT2_out1_im[31] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[31] :
              buffer_im[31]);
  assign RT2_out1_im[32] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[32] :
              buffer_im[32]);
  assign RT2_out1_im[33] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[33] :
              buffer_im[33]);
  assign RT2_out1_im[34] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[34] :
              buffer_im[34]);
  assign RT2_out1_im[35] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[35] :
              buffer_im[35]);
  assign RT2_out1_im[36] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[36] :
              buffer_im[36]);
  assign RT2_out1_im[37] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[37] :
              buffer_im[37]);
  assign RT2_out1_im[38] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[38] :
              buffer_im[38]);
  assign RT2_out1_im[39] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[39] :
              buffer_im[39]);
  assign RT2_out1_im[40] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[40] :
              buffer_im[40]);
  assign RT2_out1_im[41] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[41] :
              buffer_im[41]);
  assign RT2_out1_im[42] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[42] :
              buffer_im[42]);
  assign RT2_out1_im[43] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[43] :
              buffer_im[43]);
  assign RT2_out1_im[44] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[44] :
              buffer_im[44]);
  assign RT2_out1_im[45] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[45] :
              buffer_im[45]);
  assign RT2_out1_im[46] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[46] :
              buffer_im[46]);
  assign RT2_out1_im[47] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[47] :
              buffer_im[47]);
  assign RT2_out1_im[48] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[48] :
              buffer_im[48]);
  assign RT2_out1_im[49] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[49] :
              buffer_im[49]);
  assign RT2_out1_im[50] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[50] :
              buffer_im[50]);
  assign RT2_out1_im[51] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[51] :
              buffer_im[51]);
  assign RT2_out1_im[52] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[52] :
              buffer_im[52]);
  assign RT2_out1_im[53] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[53] :
              buffer_im[53]);
  assign RT2_out1_im[54] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[54] :
              buffer_im[54]);
  assign RT2_out1_im[55] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[55] :
              buffer_im[55]);
  assign RT2_out1_im[56] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[56] :
              buffer_im[56]);
  assign RT2_out1_im[57] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[57] :
              buffer_im[57]);
  assign RT2_out1_im[58] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[58] :
              buffer_im[58]);
  assign RT2_out1_im[59] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[59] :
              buffer_im[59]);
  assign RT2_out1_im[60] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[60] :
              buffer_im[60]);
  assign RT2_out1_im[61] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[61] :
              buffer_im[61]);
  assign RT2_out1_im[62] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[62] :
              buffer_im[62]);
  assign RT2_out1_im[63] = (crp_temp_enb_phase_6_0 == 1'b0 ? RT2_out1_held_im[63] :
              buffer_im[63]);



  always @(posedge clk or posedge reset)
    begin : OFDM_Modulator1_bypass_process
      if (reset == 1'b1) begin
        OFDM_Modulator1_bypass_reg_re[0] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[0] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[1] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[1] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[2] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[2] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[3] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[3] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[4] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[4] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[5] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[5] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[6] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[6] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[7] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[7] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[8] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[8] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[9] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[9] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[10] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[10] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[11] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[11] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[12] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[12] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[13] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[13] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[14] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[14] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[15] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[15] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[16] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[16] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[17] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[17] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[18] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[18] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[19] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[19] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[20] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[20] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[21] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[21] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[22] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[22] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[23] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[23] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[24] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[24] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[25] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[25] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[26] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[26] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[27] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[27] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[28] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[28] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[29] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[29] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[30] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[30] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[31] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[31] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[32] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[32] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[33] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[33] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[34] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[34] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[35] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[35] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[36] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[36] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[37] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[37] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[38] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[38] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[39] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[39] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[40] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[40] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[41] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[41] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[42] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[42] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[43] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[43] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[44] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[44] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[45] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[45] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[46] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[46] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[47] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[47] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[48] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[48] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[49] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[49] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[50] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[50] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[51] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[51] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[52] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[52] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[53] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[53] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[54] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[54] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[55] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[55] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[56] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[56] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[57] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[57] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[58] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[58] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[59] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[59] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[60] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[60] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[61] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[61] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[62] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[62] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_re[63] <= 16'sb0000000000000000;
        OFDM_Modulator1_bypass_reg_im[63] <= 16'sb0000000000000000;
      end
      else begin
        if (enb_1_4096_1) begin
          OFDM_Modulator1_bypass_reg_re[0] <= OFDM_Modulator1_bypass_reg_next_re[0];
          OFDM_Modulator1_bypass_reg_im[0] <= OFDM_Modulator1_bypass_reg_next_im[0];
          OFDM_Modulator1_bypass_reg_re[1] <= OFDM_Modulator1_bypass_reg_next_re[1];
          OFDM_Modulator1_bypass_reg_im[1] <= OFDM_Modulator1_bypass_reg_next_im[1];
          OFDM_Modulator1_bypass_reg_re[2] <= OFDM_Modulator1_bypass_reg_next_re[2];
          OFDM_Modulator1_bypass_reg_im[2] <= OFDM_Modulator1_bypass_reg_next_im[2];
          OFDM_Modulator1_bypass_reg_re[3] <= OFDM_Modulator1_bypass_reg_next_re[3];
          OFDM_Modulator1_bypass_reg_im[3] <= OFDM_Modulator1_bypass_reg_next_im[3];
          OFDM_Modulator1_bypass_reg_re[4] <= OFDM_Modulator1_bypass_reg_next_re[4];
          OFDM_Modulator1_bypass_reg_im[4] <= OFDM_Modulator1_bypass_reg_next_im[4];
          OFDM_Modulator1_bypass_reg_re[5] <= OFDM_Modulator1_bypass_reg_next_re[5];
          OFDM_Modulator1_bypass_reg_im[5] <= OFDM_Modulator1_bypass_reg_next_im[5];
          OFDM_Modulator1_bypass_reg_re[6] <= OFDM_Modulator1_bypass_reg_next_re[6];
          OFDM_Modulator1_bypass_reg_im[6] <= OFDM_Modulator1_bypass_reg_next_im[6];
          OFDM_Modulator1_bypass_reg_re[7] <= OFDM_Modulator1_bypass_reg_next_re[7];
          OFDM_Modulator1_bypass_reg_im[7] <= OFDM_Modulator1_bypass_reg_next_im[7];
          OFDM_Modulator1_bypass_reg_re[8] <= OFDM_Modulator1_bypass_reg_next_re[8];
          OFDM_Modulator1_bypass_reg_im[8] <= OFDM_Modulator1_bypass_reg_next_im[8];
          OFDM_Modulator1_bypass_reg_re[9] <= OFDM_Modulator1_bypass_reg_next_re[9];
          OFDM_Modulator1_bypass_reg_im[9] <= OFDM_Modulator1_bypass_reg_next_im[9];
          OFDM_Modulator1_bypass_reg_re[10] <= OFDM_Modulator1_bypass_reg_next_re[10];
          OFDM_Modulator1_bypass_reg_im[10] <= OFDM_Modulator1_bypass_reg_next_im[10];
          OFDM_Modulator1_bypass_reg_re[11] <= OFDM_Modulator1_bypass_reg_next_re[11];
          OFDM_Modulator1_bypass_reg_im[11] <= OFDM_Modulator1_bypass_reg_next_im[11];
          OFDM_Modulator1_bypass_reg_re[12] <= OFDM_Modulator1_bypass_reg_next_re[12];
          OFDM_Modulator1_bypass_reg_im[12] <= OFDM_Modulator1_bypass_reg_next_im[12];
          OFDM_Modulator1_bypass_reg_re[13] <= OFDM_Modulator1_bypass_reg_next_re[13];
          OFDM_Modulator1_bypass_reg_im[13] <= OFDM_Modulator1_bypass_reg_next_im[13];
          OFDM_Modulator1_bypass_reg_re[14] <= OFDM_Modulator1_bypass_reg_next_re[14];
          OFDM_Modulator1_bypass_reg_im[14] <= OFDM_Modulator1_bypass_reg_next_im[14];
          OFDM_Modulator1_bypass_reg_re[15] <= OFDM_Modulator1_bypass_reg_next_re[15];
          OFDM_Modulator1_bypass_reg_im[15] <= OFDM_Modulator1_bypass_reg_next_im[15];
          OFDM_Modulator1_bypass_reg_re[16] <= OFDM_Modulator1_bypass_reg_next_re[16];
          OFDM_Modulator1_bypass_reg_im[16] <= OFDM_Modulator1_bypass_reg_next_im[16];
          OFDM_Modulator1_bypass_reg_re[17] <= OFDM_Modulator1_bypass_reg_next_re[17];
          OFDM_Modulator1_bypass_reg_im[17] <= OFDM_Modulator1_bypass_reg_next_im[17];
          OFDM_Modulator1_bypass_reg_re[18] <= OFDM_Modulator1_bypass_reg_next_re[18];
          OFDM_Modulator1_bypass_reg_im[18] <= OFDM_Modulator1_bypass_reg_next_im[18];
          OFDM_Modulator1_bypass_reg_re[19] <= OFDM_Modulator1_bypass_reg_next_re[19];
          OFDM_Modulator1_bypass_reg_im[19] <= OFDM_Modulator1_bypass_reg_next_im[19];
          OFDM_Modulator1_bypass_reg_re[20] <= OFDM_Modulator1_bypass_reg_next_re[20];
          OFDM_Modulator1_bypass_reg_im[20] <= OFDM_Modulator1_bypass_reg_next_im[20];
          OFDM_Modulator1_bypass_reg_re[21] <= OFDM_Modulator1_bypass_reg_next_re[21];
          OFDM_Modulator1_bypass_reg_im[21] <= OFDM_Modulator1_bypass_reg_next_im[21];
          OFDM_Modulator1_bypass_reg_re[22] <= OFDM_Modulator1_bypass_reg_next_re[22];
          OFDM_Modulator1_bypass_reg_im[22] <= OFDM_Modulator1_bypass_reg_next_im[22];
          OFDM_Modulator1_bypass_reg_re[23] <= OFDM_Modulator1_bypass_reg_next_re[23];
          OFDM_Modulator1_bypass_reg_im[23] <= OFDM_Modulator1_bypass_reg_next_im[23];
          OFDM_Modulator1_bypass_reg_re[24] <= OFDM_Modulator1_bypass_reg_next_re[24];
          OFDM_Modulator1_bypass_reg_im[24] <= OFDM_Modulator1_bypass_reg_next_im[24];
          OFDM_Modulator1_bypass_reg_re[25] <= OFDM_Modulator1_bypass_reg_next_re[25];
          OFDM_Modulator1_bypass_reg_im[25] <= OFDM_Modulator1_bypass_reg_next_im[25];
          OFDM_Modulator1_bypass_reg_re[26] <= OFDM_Modulator1_bypass_reg_next_re[26];
          OFDM_Modulator1_bypass_reg_im[26] <= OFDM_Modulator1_bypass_reg_next_im[26];
          OFDM_Modulator1_bypass_reg_re[27] <= OFDM_Modulator1_bypass_reg_next_re[27];
          OFDM_Modulator1_bypass_reg_im[27] <= OFDM_Modulator1_bypass_reg_next_im[27];
          OFDM_Modulator1_bypass_reg_re[28] <= OFDM_Modulator1_bypass_reg_next_re[28];
          OFDM_Modulator1_bypass_reg_im[28] <= OFDM_Modulator1_bypass_reg_next_im[28];
          OFDM_Modulator1_bypass_reg_re[29] <= OFDM_Modulator1_bypass_reg_next_re[29];
          OFDM_Modulator1_bypass_reg_im[29] <= OFDM_Modulator1_bypass_reg_next_im[29];
          OFDM_Modulator1_bypass_reg_re[30] <= OFDM_Modulator1_bypass_reg_next_re[30];
          OFDM_Modulator1_bypass_reg_im[30] <= OFDM_Modulator1_bypass_reg_next_im[30];
          OFDM_Modulator1_bypass_reg_re[31] <= OFDM_Modulator1_bypass_reg_next_re[31];
          OFDM_Modulator1_bypass_reg_im[31] <= OFDM_Modulator1_bypass_reg_next_im[31];
          OFDM_Modulator1_bypass_reg_re[32] <= OFDM_Modulator1_bypass_reg_next_re[32];
          OFDM_Modulator1_bypass_reg_im[32] <= OFDM_Modulator1_bypass_reg_next_im[32];
          OFDM_Modulator1_bypass_reg_re[33] <= OFDM_Modulator1_bypass_reg_next_re[33];
          OFDM_Modulator1_bypass_reg_im[33] <= OFDM_Modulator1_bypass_reg_next_im[33];
          OFDM_Modulator1_bypass_reg_re[34] <= OFDM_Modulator1_bypass_reg_next_re[34];
          OFDM_Modulator1_bypass_reg_im[34] <= OFDM_Modulator1_bypass_reg_next_im[34];
          OFDM_Modulator1_bypass_reg_re[35] <= OFDM_Modulator1_bypass_reg_next_re[35];
          OFDM_Modulator1_bypass_reg_im[35] <= OFDM_Modulator1_bypass_reg_next_im[35];
          OFDM_Modulator1_bypass_reg_re[36] <= OFDM_Modulator1_bypass_reg_next_re[36];
          OFDM_Modulator1_bypass_reg_im[36] <= OFDM_Modulator1_bypass_reg_next_im[36];
          OFDM_Modulator1_bypass_reg_re[37] <= OFDM_Modulator1_bypass_reg_next_re[37];
          OFDM_Modulator1_bypass_reg_im[37] <= OFDM_Modulator1_bypass_reg_next_im[37];
          OFDM_Modulator1_bypass_reg_re[38] <= OFDM_Modulator1_bypass_reg_next_re[38];
          OFDM_Modulator1_bypass_reg_im[38] <= OFDM_Modulator1_bypass_reg_next_im[38];
          OFDM_Modulator1_bypass_reg_re[39] <= OFDM_Modulator1_bypass_reg_next_re[39];
          OFDM_Modulator1_bypass_reg_im[39] <= OFDM_Modulator1_bypass_reg_next_im[39];
          OFDM_Modulator1_bypass_reg_re[40] <= OFDM_Modulator1_bypass_reg_next_re[40];
          OFDM_Modulator1_bypass_reg_im[40] <= OFDM_Modulator1_bypass_reg_next_im[40];
          OFDM_Modulator1_bypass_reg_re[41] <= OFDM_Modulator1_bypass_reg_next_re[41];
          OFDM_Modulator1_bypass_reg_im[41] <= OFDM_Modulator1_bypass_reg_next_im[41];
          OFDM_Modulator1_bypass_reg_re[42] <= OFDM_Modulator1_bypass_reg_next_re[42];
          OFDM_Modulator1_bypass_reg_im[42] <= OFDM_Modulator1_bypass_reg_next_im[42];
          OFDM_Modulator1_bypass_reg_re[43] <= OFDM_Modulator1_bypass_reg_next_re[43];
          OFDM_Modulator1_bypass_reg_im[43] <= OFDM_Modulator1_bypass_reg_next_im[43];
          OFDM_Modulator1_bypass_reg_re[44] <= OFDM_Modulator1_bypass_reg_next_re[44];
          OFDM_Modulator1_bypass_reg_im[44] <= OFDM_Modulator1_bypass_reg_next_im[44];
          OFDM_Modulator1_bypass_reg_re[45] <= OFDM_Modulator1_bypass_reg_next_re[45];
          OFDM_Modulator1_bypass_reg_im[45] <= OFDM_Modulator1_bypass_reg_next_im[45];
          OFDM_Modulator1_bypass_reg_re[46] <= OFDM_Modulator1_bypass_reg_next_re[46];
          OFDM_Modulator1_bypass_reg_im[46] <= OFDM_Modulator1_bypass_reg_next_im[46];
          OFDM_Modulator1_bypass_reg_re[47] <= OFDM_Modulator1_bypass_reg_next_re[47];
          OFDM_Modulator1_bypass_reg_im[47] <= OFDM_Modulator1_bypass_reg_next_im[47];
          OFDM_Modulator1_bypass_reg_re[48] <= OFDM_Modulator1_bypass_reg_next_re[48];
          OFDM_Modulator1_bypass_reg_im[48] <= OFDM_Modulator1_bypass_reg_next_im[48];
          OFDM_Modulator1_bypass_reg_re[49] <= OFDM_Modulator1_bypass_reg_next_re[49];
          OFDM_Modulator1_bypass_reg_im[49] <= OFDM_Modulator1_bypass_reg_next_im[49];
          OFDM_Modulator1_bypass_reg_re[50] <= OFDM_Modulator1_bypass_reg_next_re[50];
          OFDM_Modulator1_bypass_reg_im[50] <= OFDM_Modulator1_bypass_reg_next_im[50];
          OFDM_Modulator1_bypass_reg_re[51] <= OFDM_Modulator1_bypass_reg_next_re[51];
          OFDM_Modulator1_bypass_reg_im[51] <= OFDM_Modulator1_bypass_reg_next_im[51];
          OFDM_Modulator1_bypass_reg_re[52] <= OFDM_Modulator1_bypass_reg_next_re[52];
          OFDM_Modulator1_bypass_reg_im[52] <= OFDM_Modulator1_bypass_reg_next_im[52];
          OFDM_Modulator1_bypass_reg_re[53] <= OFDM_Modulator1_bypass_reg_next_re[53];
          OFDM_Modulator1_bypass_reg_im[53] <= OFDM_Modulator1_bypass_reg_next_im[53];
          OFDM_Modulator1_bypass_reg_re[54] <= OFDM_Modulator1_bypass_reg_next_re[54];
          OFDM_Modulator1_bypass_reg_im[54] <= OFDM_Modulator1_bypass_reg_next_im[54];
          OFDM_Modulator1_bypass_reg_re[55] <= OFDM_Modulator1_bypass_reg_next_re[55];
          OFDM_Modulator1_bypass_reg_im[55] <= OFDM_Modulator1_bypass_reg_next_im[55];
          OFDM_Modulator1_bypass_reg_re[56] <= OFDM_Modulator1_bypass_reg_next_re[56];
          OFDM_Modulator1_bypass_reg_im[56] <= OFDM_Modulator1_bypass_reg_next_im[56];
          OFDM_Modulator1_bypass_reg_re[57] <= OFDM_Modulator1_bypass_reg_next_re[57];
          OFDM_Modulator1_bypass_reg_im[57] <= OFDM_Modulator1_bypass_reg_next_im[57];
          OFDM_Modulator1_bypass_reg_re[58] <= OFDM_Modulator1_bypass_reg_next_re[58];
          OFDM_Modulator1_bypass_reg_im[58] <= OFDM_Modulator1_bypass_reg_next_im[58];
          OFDM_Modulator1_bypass_reg_re[59] <= OFDM_Modulator1_bypass_reg_next_re[59];
          OFDM_Modulator1_bypass_reg_im[59] <= OFDM_Modulator1_bypass_reg_next_im[59];
          OFDM_Modulator1_bypass_reg_re[60] <= OFDM_Modulator1_bypass_reg_next_re[60];
          OFDM_Modulator1_bypass_reg_im[60] <= OFDM_Modulator1_bypass_reg_next_im[60];
          OFDM_Modulator1_bypass_reg_re[61] <= OFDM_Modulator1_bypass_reg_next_re[61];
          OFDM_Modulator1_bypass_reg_im[61] <= OFDM_Modulator1_bypass_reg_next_im[61];
          OFDM_Modulator1_bypass_reg_re[62] <= OFDM_Modulator1_bypass_reg_next_re[62];
          OFDM_Modulator1_bypass_reg_im[62] <= OFDM_Modulator1_bypass_reg_next_im[62];
          OFDM_Modulator1_bypass_reg_re[63] <= OFDM_Modulator1_bypass_reg_next_re[63];
          OFDM_Modulator1_bypass_reg_im[63] <= OFDM_Modulator1_bypass_reg_next_im[63];
        end
      end
    end

  assign RT2_out1_re_1[0] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[0] :
              OFDM_Modulator1_bypass_reg_re[0]);
  assign RT2_out1_re_1[1] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[1] :
              OFDM_Modulator1_bypass_reg_re[1]);
  assign RT2_out1_re_1[2] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[2] :
              OFDM_Modulator1_bypass_reg_re[2]);
  assign RT2_out1_re_1[3] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[3] :
              OFDM_Modulator1_bypass_reg_re[3]);
  assign RT2_out1_re_1[4] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[4] :
              OFDM_Modulator1_bypass_reg_re[4]);
  assign RT2_out1_re_1[5] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[5] :
              OFDM_Modulator1_bypass_reg_re[5]);
  assign RT2_out1_re_1[6] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[6] :
              OFDM_Modulator1_bypass_reg_re[6]);
  assign RT2_out1_re_1[7] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[7] :
              OFDM_Modulator1_bypass_reg_re[7]);
  assign RT2_out1_re_1[8] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[8] :
              OFDM_Modulator1_bypass_reg_re[8]);
  assign RT2_out1_re_1[9] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[9] :
              OFDM_Modulator1_bypass_reg_re[9]);
  assign RT2_out1_re_1[10] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[10] :
              OFDM_Modulator1_bypass_reg_re[10]);
  assign RT2_out1_re_1[11] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[11] :
              OFDM_Modulator1_bypass_reg_re[11]);
  assign RT2_out1_re_1[12] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[12] :
              OFDM_Modulator1_bypass_reg_re[12]);
  assign RT2_out1_re_1[13] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[13] :
              OFDM_Modulator1_bypass_reg_re[13]);
  assign RT2_out1_re_1[14] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[14] :
              OFDM_Modulator1_bypass_reg_re[14]);
  assign RT2_out1_re_1[15] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[15] :
              OFDM_Modulator1_bypass_reg_re[15]);
  assign RT2_out1_re_1[16] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[16] :
              OFDM_Modulator1_bypass_reg_re[16]);
  assign RT2_out1_re_1[17] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[17] :
              OFDM_Modulator1_bypass_reg_re[17]);
  assign RT2_out1_re_1[18] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[18] :
              OFDM_Modulator1_bypass_reg_re[18]);
  assign RT2_out1_re_1[19] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[19] :
              OFDM_Modulator1_bypass_reg_re[19]);
  assign RT2_out1_re_1[20] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[20] :
              OFDM_Modulator1_bypass_reg_re[20]);
  assign RT2_out1_re_1[21] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[21] :
              OFDM_Modulator1_bypass_reg_re[21]);
  assign RT2_out1_re_1[22] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[22] :
              OFDM_Modulator1_bypass_reg_re[22]);
  assign RT2_out1_re_1[23] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[23] :
              OFDM_Modulator1_bypass_reg_re[23]);
  assign RT2_out1_re_1[24] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[24] :
              OFDM_Modulator1_bypass_reg_re[24]);
  assign RT2_out1_re_1[25] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[25] :
              OFDM_Modulator1_bypass_reg_re[25]);
  assign RT2_out1_re_1[26] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[26] :
              OFDM_Modulator1_bypass_reg_re[26]);
  assign RT2_out1_re_1[27] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[27] :
              OFDM_Modulator1_bypass_reg_re[27]);
  assign RT2_out1_re_1[28] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[28] :
              OFDM_Modulator1_bypass_reg_re[28]);
  assign RT2_out1_re_1[29] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[29] :
              OFDM_Modulator1_bypass_reg_re[29]);
  assign RT2_out1_re_1[30] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[30] :
              OFDM_Modulator1_bypass_reg_re[30]);
  assign RT2_out1_re_1[31] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[31] :
              OFDM_Modulator1_bypass_reg_re[31]);
  assign RT2_out1_re_1[32] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[32] :
              OFDM_Modulator1_bypass_reg_re[32]);
  assign RT2_out1_re_1[33] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[33] :
              OFDM_Modulator1_bypass_reg_re[33]);
  assign RT2_out1_re_1[34] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[34] :
              OFDM_Modulator1_bypass_reg_re[34]);
  assign RT2_out1_re_1[35] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[35] :
              OFDM_Modulator1_bypass_reg_re[35]);
  assign RT2_out1_re_1[36] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[36] :
              OFDM_Modulator1_bypass_reg_re[36]);
  assign RT2_out1_re_1[37] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[37] :
              OFDM_Modulator1_bypass_reg_re[37]);
  assign RT2_out1_re_1[38] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[38] :
              OFDM_Modulator1_bypass_reg_re[38]);
  assign RT2_out1_re_1[39] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[39] :
              OFDM_Modulator1_bypass_reg_re[39]);
  assign RT2_out1_re_1[40] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[40] :
              OFDM_Modulator1_bypass_reg_re[40]);
  assign RT2_out1_re_1[41] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[41] :
              OFDM_Modulator1_bypass_reg_re[41]);
  assign RT2_out1_re_1[42] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[42] :
              OFDM_Modulator1_bypass_reg_re[42]);
  assign RT2_out1_re_1[43] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[43] :
              OFDM_Modulator1_bypass_reg_re[43]);
  assign RT2_out1_re_1[44] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[44] :
              OFDM_Modulator1_bypass_reg_re[44]);
  assign RT2_out1_re_1[45] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[45] :
              OFDM_Modulator1_bypass_reg_re[45]);
  assign RT2_out1_re_1[46] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[46] :
              OFDM_Modulator1_bypass_reg_re[46]);
  assign RT2_out1_re_1[47] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[47] :
              OFDM_Modulator1_bypass_reg_re[47]);
  assign RT2_out1_re_1[48] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[48] :
              OFDM_Modulator1_bypass_reg_re[48]);
  assign RT2_out1_re_1[49] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[49] :
              OFDM_Modulator1_bypass_reg_re[49]);
  assign RT2_out1_re_1[50] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[50] :
              OFDM_Modulator1_bypass_reg_re[50]);
  assign RT2_out1_re_1[51] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[51] :
              OFDM_Modulator1_bypass_reg_re[51]);
  assign RT2_out1_re_1[52] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[52] :
              OFDM_Modulator1_bypass_reg_re[52]);
  assign RT2_out1_re_1[53] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[53] :
              OFDM_Modulator1_bypass_reg_re[53]);
  assign RT2_out1_re_1[54] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[54] :
              OFDM_Modulator1_bypass_reg_re[54]);
  assign RT2_out1_re_1[55] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[55] :
              OFDM_Modulator1_bypass_reg_re[55]);
  assign RT2_out1_re_1[56] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[56] :
              OFDM_Modulator1_bypass_reg_re[56]);
  assign RT2_out1_re_1[57] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[57] :
              OFDM_Modulator1_bypass_reg_re[57]);
  assign RT2_out1_re_1[58] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[58] :
              OFDM_Modulator1_bypass_reg_re[58]);
  assign RT2_out1_re_1[59] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[59] :
              OFDM_Modulator1_bypass_reg_re[59]);
  assign RT2_out1_re_1[60] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[60] :
              OFDM_Modulator1_bypass_reg_re[60]);
  assign RT2_out1_re_1[61] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[61] :
              OFDM_Modulator1_bypass_reg_re[61]);
  assign RT2_out1_re_1[62] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[62] :
              OFDM_Modulator1_bypass_reg_re[62]);
  assign RT2_out1_re_1[63] = (enb_1_4096_1 == 1'b1 ? RT2_out1_re[63] :
              OFDM_Modulator1_bypass_reg_re[63]);
  assign RT2_out1_im_1[0] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[0] :
              OFDM_Modulator1_bypass_reg_im[0]);
  assign RT2_out1_im_1[1] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[1] :
              OFDM_Modulator1_bypass_reg_im[1]);
  assign RT2_out1_im_1[2] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[2] :
              OFDM_Modulator1_bypass_reg_im[2]);
  assign RT2_out1_im_1[3] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[3] :
              OFDM_Modulator1_bypass_reg_im[3]);
  assign RT2_out1_im_1[4] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[4] :
              OFDM_Modulator1_bypass_reg_im[4]);
  assign RT2_out1_im_1[5] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[5] :
              OFDM_Modulator1_bypass_reg_im[5]);
  assign RT2_out1_im_1[6] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[6] :
              OFDM_Modulator1_bypass_reg_im[6]);
  assign RT2_out1_im_1[7] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[7] :
              OFDM_Modulator1_bypass_reg_im[7]);
  assign RT2_out1_im_1[8] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[8] :
              OFDM_Modulator1_bypass_reg_im[8]);
  assign RT2_out1_im_1[9] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[9] :
              OFDM_Modulator1_bypass_reg_im[9]);
  assign RT2_out1_im_1[10] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[10] :
              OFDM_Modulator1_bypass_reg_im[10]);
  assign RT2_out1_im_1[11] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[11] :
              OFDM_Modulator1_bypass_reg_im[11]);
  assign RT2_out1_im_1[12] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[12] :
              OFDM_Modulator1_bypass_reg_im[12]);
  assign RT2_out1_im_1[13] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[13] :
              OFDM_Modulator1_bypass_reg_im[13]);
  assign RT2_out1_im_1[14] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[14] :
              OFDM_Modulator1_bypass_reg_im[14]);
  assign RT2_out1_im_1[15] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[15] :
              OFDM_Modulator1_bypass_reg_im[15]);
  assign RT2_out1_im_1[16] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[16] :
              OFDM_Modulator1_bypass_reg_im[16]);
  assign RT2_out1_im_1[17] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[17] :
              OFDM_Modulator1_bypass_reg_im[17]);
  assign RT2_out1_im_1[18] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[18] :
              OFDM_Modulator1_bypass_reg_im[18]);
  assign RT2_out1_im_1[19] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[19] :
              OFDM_Modulator1_bypass_reg_im[19]);
  assign RT2_out1_im_1[20] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[20] :
              OFDM_Modulator1_bypass_reg_im[20]);
  assign RT2_out1_im_1[21] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[21] :
              OFDM_Modulator1_bypass_reg_im[21]);
  assign RT2_out1_im_1[22] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[22] :
              OFDM_Modulator1_bypass_reg_im[22]);
  assign RT2_out1_im_1[23] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[23] :
              OFDM_Modulator1_bypass_reg_im[23]);
  assign RT2_out1_im_1[24] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[24] :
              OFDM_Modulator1_bypass_reg_im[24]);
  assign RT2_out1_im_1[25] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[25] :
              OFDM_Modulator1_bypass_reg_im[25]);
  assign RT2_out1_im_1[26] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[26] :
              OFDM_Modulator1_bypass_reg_im[26]);
  assign RT2_out1_im_1[27] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[27] :
              OFDM_Modulator1_bypass_reg_im[27]);
  assign RT2_out1_im_1[28] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[28] :
              OFDM_Modulator1_bypass_reg_im[28]);
  assign RT2_out1_im_1[29] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[29] :
              OFDM_Modulator1_bypass_reg_im[29]);
  assign RT2_out1_im_1[30] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[30] :
              OFDM_Modulator1_bypass_reg_im[30]);
  assign RT2_out1_im_1[31] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[31] :
              OFDM_Modulator1_bypass_reg_im[31]);
  assign RT2_out1_im_1[32] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[32] :
              OFDM_Modulator1_bypass_reg_im[32]);
  assign RT2_out1_im_1[33] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[33] :
              OFDM_Modulator1_bypass_reg_im[33]);
  assign RT2_out1_im_1[34] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[34] :
              OFDM_Modulator1_bypass_reg_im[34]);
  assign RT2_out1_im_1[35] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[35] :
              OFDM_Modulator1_bypass_reg_im[35]);
  assign RT2_out1_im_1[36] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[36] :
              OFDM_Modulator1_bypass_reg_im[36]);
  assign RT2_out1_im_1[37] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[37] :
              OFDM_Modulator1_bypass_reg_im[37]);
  assign RT2_out1_im_1[38] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[38] :
              OFDM_Modulator1_bypass_reg_im[38]);
  assign RT2_out1_im_1[39] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[39] :
              OFDM_Modulator1_bypass_reg_im[39]);
  assign RT2_out1_im_1[40] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[40] :
              OFDM_Modulator1_bypass_reg_im[40]);
  assign RT2_out1_im_1[41] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[41] :
              OFDM_Modulator1_bypass_reg_im[41]);
  assign RT2_out1_im_1[42] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[42] :
              OFDM_Modulator1_bypass_reg_im[42]);
  assign RT2_out1_im_1[43] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[43] :
              OFDM_Modulator1_bypass_reg_im[43]);
  assign RT2_out1_im_1[44] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[44] :
              OFDM_Modulator1_bypass_reg_im[44]);
  assign RT2_out1_im_1[45] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[45] :
              OFDM_Modulator1_bypass_reg_im[45]);
  assign RT2_out1_im_1[46] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[46] :
              OFDM_Modulator1_bypass_reg_im[46]);
  assign RT2_out1_im_1[47] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[47] :
              OFDM_Modulator1_bypass_reg_im[47]);
  assign RT2_out1_im_1[48] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[48] :
              OFDM_Modulator1_bypass_reg_im[48]);
  assign RT2_out1_im_1[49] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[49] :
              OFDM_Modulator1_bypass_reg_im[49]);
  assign RT2_out1_im_1[50] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[50] :
              OFDM_Modulator1_bypass_reg_im[50]);
  assign RT2_out1_im_1[51] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[51] :
              OFDM_Modulator1_bypass_reg_im[51]);
  assign RT2_out1_im_1[52] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[52] :
              OFDM_Modulator1_bypass_reg_im[52]);
  assign RT2_out1_im_1[53] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[53] :
              OFDM_Modulator1_bypass_reg_im[53]);
  assign RT2_out1_im_1[54] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[54] :
              OFDM_Modulator1_bypass_reg_im[54]);
  assign RT2_out1_im_1[55] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[55] :
              OFDM_Modulator1_bypass_reg_im[55]);
  assign RT2_out1_im_1[56] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[56] :
              OFDM_Modulator1_bypass_reg_im[56]);
  assign RT2_out1_im_1[57] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[57] :
              OFDM_Modulator1_bypass_reg_im[57]);
  assign RT2_out1_im_1[58] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[58] :
              OFDM_Modulator1_bypass_reg_im[58]);
  assign RT2_out1_im_1[59] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[59] :
              OFDM_Modulator1_bypass_reg_im[59]);
  assign RT2_out1_im_1[60] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[60] :
              OFDM_Modulator1_bypass_reg_im[60]);
  assign RT2_out1_im_1[61] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[61] :
              OFDM_Modulator1_bypass_reg_im[61]);
  assign RT2_out1_im_1[62] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[62] :
              OFDM_Modulator1_bypass_reg_im[62]);
  assign RT2_out1_im_1[63] = (enb_1_4096_1 == 1'b1 ? RT2_out1_im[63] :
              OFDM_Modulator1_bypass_reg_im[63]);
  assign OFDM_Modulator1_bypass_reg_next_re[0] = RT2_out1_re[0];
  assign OFDM_Modulator1_bypass_reg_next_im[0] = RT2_out1_im[0];
  assign OFDM_Modulator1_bypass_reg_next_re[1] = RT2_out1_re[1];
  assign OFDM_Modulator1_bypass_reg_next_im[1] = RT2_out1_im[1];
  assign OFDM_Modulator1_bypass_reg_next_re[2] = RT2_out1_re[2];
  assign OFDM_Modulator1_bypass_reg_next_im[2] = RT2_out1_im[2];
  assign OFDM_Modulator1_bypass_reg_next_re[3] = RT2_out1_re[3];
  assign OFDM_Modulator1_bypass_reg_next_im[3] = RT2_out1_im[3];
  assign OFDM_Modulator1_bypass_reg_next_re[4] = RT2_out1_re[4];
  assign OFDM_Modulator1_bypass_reg_next_im[4] = RT2_out1_im[4];
  assign OFDM_Modulator1_bypass_reg_next_re[5] = RT2_out1_re[5];
  assign OFDM_Modulator1_bypass_reg_next_im[5] = RT2_out1_im[5];
  assign OFDM_Modulator1_bypass_reg_next_re[6] = RT2_out1_re[6];
  assign OFDM_Modulator1_bypass_reg_next_im[6] = RT2_out1_im[6];
  assign OFDM_Modulator1_bypass_reg_next_re[7] = RT2_out1_re[7];
  assign OFDM_Modulator1_bypass_reg_next_im[7] = RT2_out1_im[7];
  assign OFDM_Modulator1_bypass_reg_next_re[8] = RT2_out1_re[8];
  assign OFDM_Modulator1_bypass_reg_next_im[8] = RT2_out1_im[8];
  assign OFDM_Modulator1_bypass_reg_next_re[9] = RT2_out1_re[9];
  assign OFDM_Modulator1_bypass_reg_next_im[9] = RT2_out1_im[9];
  assign OFDM_Modulator1_bypass_reg_next_re[10] = RT2_out1_re[10];
  assign OFDM_Modulator1_bypass_reg_next_im[10] = RT2_out1_im[10];
  assign OFDM_Modulator1_bypass_reg_next_re[11] = RT2_out1_re[11];
  assign OFDM_Modulator1_bypass_reg_next_im[11] = RT2_out1_im[11];
  assign OFDM_Modulator1_bypass_reg_next_re[12] = RT2_out1_re[12];
  assign OFDM_Modulator1_bypass_reg_next_im[12] = RT2_out1_im[12];
  assign OFDM_Modulator1_bypass_reg_next_re[13] = RT2_out1_re[13];
  assign OFDM_Modulator1_bypass_reg_next_im[13] = RT2_out1_im[13];
  assign OFDM_Modulator1_bypass_reg_next_re[14] = RT2_out1_re[14];
  assign OFDM_Modulator1_bypass_reg_next_im[14] = RT2_out1_im[14];
  assign OFDM_Modulator1_bypass_reg_next_re[15] = RT2_out1_re[15];
  assign OFDM_Modulator1_bypass_reg_next_im[15] = RT2_out1_im[15];
  assign OFDM_Modulator1_bypass_reg_next_re[16] = RT2_out1_re[16];
  assign OFDM_Modulator1_bypass_reg_next_im[16] = RT2_out1_im[16];
  assign OFDM_Modulator1_bypass_reg_next_re[17] = RT2_out1_re[17];
  assign OFDM_Modulator1_bypass_reg_next_im[17] = RT2_out1_im[17];
  assign OFDM_Modulator1_bypass_reg_next_re[18] = RT2_out1_re[18];
  assign OFDM_Modulator1_bypass_reg_next_im[18] = RT2_out1_im[18];
  assign OFDM_Modulator1_bypass_reg_next_re[19] = RT2_out1_re[19];
  assign OFDM_Modulator1_bypass_reg_next_im[19] = RT2_out1_im[19];
  assign OFDM_Modulator1_bypass_reg_next_re[20] = RT2_out1_re[20];
  assign OFDM_Modulator1_bypass_reg_next_im[20] = RT2_out1_im[20];
  assign OFDM_Modulator1_bypass_reg_next_re[21] = RT2_out1_re[21];
  assign OFDM_Modulator1_bypass_reg_next_im[21] = RT2_out1_im[21];
  assign OFDM_Modulator1_bypass_reg_next_re[22] = RT2_out1_re[22];
  assign OFDM_Modulator1_bypass_reg_next_im[22] = RT2_out1_im[22];
  assign OFDM_Modulator1_bypass_reg_next_re[23] = RT2_out1_re[23];
  assign OFDM_Modulator1_bypass_reg_next_im[23] = RT2_out1_im[23];
  assign OFDM_Modulator1_bypass_reg_next_re[24] = RT2_out1_re[24];
  assign OFDM_Modulator1_bypass_reg_next_im[24] = RT2_out1_im[24];
  assign OFDM_Modulator1_bypass_reg_next_re[25] = RT2_out1_re[25];
  assign OFDM_Modulator1_bypass_reg_next_im[25] = RT2_out1_im[25];
  assign OFDM_Modulator1_bypass_reg_next_re[26] = RT2_out1_re[26];
  assign OFDM_Modulator1_bypass_reg_next_im[26] = RT2_out1_im[26];
  assign OFDM_Modulator1_bypass_reg_next_re[27] = RT2_out1_re[27];
  assign OFDM_Modulator1_bypass_reg_next_im[27] = RT2_out1_im[27];
  assign OFDM_Modulator1_bypass_reg_next_re[28] = RT2_out1_re[28];
  assign OFDM_Modulator1_bypass_reg_next_im[28] = RT2_out1_im[28];
  assign OFDM_Modulator1_bypass_reg_next_re[29] = RT2_out1_re[29];
  assign OFDM_Modulator1_bypass_reg_next_im[29] = RT2_out1_im[29];
  assign OFDM_Modulator1_bypass_reg_next_re[30] = RT2_out1_re[30];
  assign OFDM_Modulator1_bypass_reg_next_im[30] = RT2_out1_im[30];
  assign OFDM_Modulator1_bypass_reg_next_re[31] = RT2_out1_re[31];
  assign OFDM_Modulator1_bypass_reg_next_im[31] = RT2_out1_im[31];
  assign OFDM_Modulator1_bypass_reg_next_re[32] = RT2_out1_re[32];
  assign OFDM_Modulator1_bypass_reg_next_im[32] = RT2_out1_im[32];
  assign OFDM_Modulator1_bypass_reg_next_re[33] = RT2_out1_re[33];
  assign OFDM_Modulator1_bypass_reg_next_im[33] = RT2_out1_im[33];
  assign OFDM_Modulator1_bypass_reg_next_re[34] = RT2_out1_re[34];
  assign OFDM_Modulator1_bypass_reg_next_im[34] = RT2_out1_im[34];
  assign OFDM_Modulator1_bypass_reg_next_re[35] = RT2_out1_re[35];
  assign OFDM_Modulator1_bypass_reg_next_im[35] = RT2_out1_im[35];
  assign OFDM_Modulator1_bypass_reg_next_re[36] = RT2_out1_re[36];
  assign OFDM_Modulator1_bypass_reg_next_im[36] = RT2_out1_im[36];
  assign OFDM_Modulator1_bypass_reg_next_re[37] = RT2_out1_re[37];
  assign OFDM_Modulator1_bypass_reg_next_im[37] = RT2_out1_im[37];
  assign OFDM_Modulator1_bypass_reg_next_re[38] = RT2_out1_re[38];
  assign OFDM_Modulator1_bypass_reg_next_im[38] = RT2_out1_im[38];
  assign OFDM_Modulator1_bypass_reg_next_re[39] = RT2_out1_re[39];
  assign OFDM_Modulator1_bypass_reg_next_im[39] = RT2_out1_im[39];
  assign OFDM_Modulator1_bypass_reg_next_re[40] = RT2_out1_re[40];
  assign OFDM_Modulator1_bypass_reg_next_im[40] = RT2_out1_im[40];
  assign OFDM_Modulator1_bypass_reg_next_re[41] = RT2_out1_re[41];
  assign OFDM_Modulator1_bypass_reg_next_im[41] = RT2_out1_im[41];
  assign OFDM_Modulator1_bypass_reg_next_re[42] = RT2_out1_re[42];
  assign OFDM_Modulator1_bypass_reg_next_im[42] = RT2_out1_im[42];
  assign OFDM_Modulator1_bypass_reg_next_re[43] = RT2_out1_re[43];
  assign OFDM_Modulator1_bypass_reg_next_im[43] = RT2_out1_im[43];
  assign OFDM_Modulator1_bypass_reg_next_re[44] = RT2_out1_re[44];
  assign OFDM_Modulator1_bypass_reg_next_im[44] = RT2_out1_im[44];
  assign OFDM_Modulator1_bypass_reg_next_re[45] = RT2_out1_re[45];
  assign OFDM_Modulator1_bypass_reg_next_im[45] = RT2_out1_im[45];
  assign OFDM_Modulator1_bypass_reg_next_re[46] = RT2_out1_re[46];
  assign OFDM_Modulator1_bypass_reg_next_im[46] = RT2_out1_im[46];
  assign OFDM_Modulator1_bypass_reg_next_re[47] = RT2_out1_re[47];
  assign OFDM_Modulator1_bypass_reg_next_im[47] = RT2_out1_im[47];
  assign OFDM_Modulator1_bypass_reg_next_re[48] = RT2_out1_re[48];
  assign OFDM_Modulator1_bypass_reg_next_im[48] = RT2_out1_im[48];
  assign OFDM_Modulator1_bypass_reg_next_re[49] = RT2_out1_re[49];
  assign OFDM_Modulator1_bypass_reg_next_im[49] = RT2_out1_im[49];
  assign OFDM_Modulator1_bypass_reg_next_re[50] = RT2_out1_re[50];
  assign OFDM_Modulator1_bypass_reg_next_im[50] = RT2_out1_im[50];
  assign OFDM_Modulator1_bypass_reg_next_re[51] = RT2_out1_re[51];
  assign OFDM_Modulator1_bypass_reg_next_im[51] = RT2_out1_im[51];
  assign OFDM_Modulator1_bypass_reg_next_re[52] = RT2_out1_re[52];
  assign OFDM_Modulator1_bypass_reg_next_im[52] = RT2_out1_im[52];
  assign OFDM_Modulator1_bypass_reg_next_re[53] = RT2_out1_re[53];
  assign OFDM_Modulator1_bypass_reg_next_im[53] = RT2_out1_im[53];
  assign OFDM_Modulator1_bypass_reg_next_re[54] = RT2_out1_re[54];
  assign OFDM_Modulator1_bypass_reg_next_im[54] = RT2_out1_im[54];
  assign OFDM_Modulator1_bypass_reg_next_re[55] = RT2_out1_re[55];
  assign OFDM_Modulator1_bypass_reg_next_im[55] = RT2_out1_im[55];
  assign OFDM_Modulator1_bypass_reg_next_re[56] = RT2_out1_re[56];
  assign OFDM_Modulator1_bypass_reg_next_im[56] = RT2_out1_im[56];
  assign OFDM_Modulator1_bypass_reg_next_re[57] = RT2_out1_re[57];
  assign OFDM_Modulator1_bypass_reg_next_im[57] = RT2_out1_im[57];
  assign OFDM_Modulator1_bypass_reg_next_re[58] = RT2_out1_re[58];
  assign OFDM_Modulator1_bypass_reg_next_im[58] = RT2_out1_im[58];
  assign OFDM_Modulator1_bypass_reg_next_re[59] = RT2_out1_re[59];
  assign OFDM_Modulator1_bypass_reg_next_im[59] = RT2_out1_im[59];
  assign OFDM_Modulator1_bypass_reg_next_re[60] = RT2_out1_re[60];
  assign OFDM_Modulator1_bypass_reg_next_im[60] = RT2_out1_im[60];
  assign OFDM_Modulator1_bypass_reg_next_re[61] = RT2_out1_re[61];
  assign OFDM_Modulator1_bypass_reg_next_im[61] = RT2_out1_im[61];
  assign OFDM_Modulator1_bypass_reg_next_re[62] = RT2_out1_re[62];
  assign OFDM_Modulator1_bypass_reg_next_im[62] = RT2_out1_im[62];
  assign OFDM_Modulator1_bypass_reg_next_re[63] = RT2_out1_re[63];
  assign OFDM_Modulator1_bypass_reg_next_im[63] = RT2_out1_im[63];



  OFDM_Modulator_block u_OFDM_Modulator (.clk(clk),
                                         .reset(reset),
                                         .enb_1_4096_0(enb_1_4096_0),
                                         .vector_re_0(RT2_out1_re_1[0]),  // sfix16_En14
                                         .vector_re_1(RT2_out1_re_1[1]),  // sfix16_En14
                                         .vector_re_2(RT2_out1_re_1[2]),  // sfix16_En14
                                         .vector_re_3(RT2_out1_re_1[3]),  // sfix16_En14
                                         .vector_re_4(RT2_out1_re_1[4]),  // sfix16_En14
                                         .vector_re_5(RT2_out1_re_1[5]),  // sfix16_En14
                                         .vector_re_6(RT2_out1_re_1[6]),  // sfix16_En14
                                         .vector_re_7(RT2_out1_re_1[7]),  // sfix16_En14
                                         .vector_re_8(RT2_out1_re_1[8]),  // sfix16_En14
                                         .vector_re_9(RT2_out1_re_1[9]),  // sfix16_En14
                                         .vector_re_10(RT2_out1_re_1[10]),  // sfix16_En14
                                         .vector_re_11(RT2_out1_re_1[11]),  // sfix16_En14
                                         .vector_re_12(RT2_out1_re_1[12]),  // sfix16_En14
                                         .vector_re_13(RT2_out1_re_1[13]),  // sfix16_En14
                                         .vector_re_14(RT2_out1_re_1[14]),  // sfix16_En14
                                         .vector_re_15(RT2_out1_re_1[15]),  // sfix16_En14
                                         .vector_re_16(RT2_out1_re_1[16]),  // sfix16_En14
                                         .vector_re_17(RT2_out1_re_1[17]),  // sfix16_En14
                                         .vector_re_18(RT2_out1_re_1[18]),  // sfix16_En14
                                         .vector_re_19(RT2_out1_re_1[19]),  // sfix16_En14
                                         .vector_re_20(RT2_out1_re_1[20]),  // sfix16_En14
                                         .vector_re_21(RT2_out1_re_1[21]),  // sfix16_En14
                                         .vector_re_22(RT2_out1_re_1[22]),  // sfix16_En14
                                         .vector_re_23(RT2_out1_re_1[23]),  // sfix16_En14
                                         .vector_re_24(RT2_out1_re_1[24]),  // sfix16_En14
                                         .vector_re_25(RT2_out1_re_1[25]),  // sfix16_En14
                                         .vector_re_26(RT2_out1_re_1[26]),  // sfix16_En14
                                         .vector_re_27(RT2_out1_re_1[27]),  // sfix16_En14
                                         .vector_re_28(RT2_out1_re_1[28]),  // sfix16_En14
                                         .vector_re_29(RT2_out1_re_1[29]),  // sfix16_En14
                                         .vector_re_30(RT2_out1_re_1[30]),  // sfix16_En14
                                         .vector_re_31(RT2_out1_re_1[31]),  // sfix16_En14
                                         .vector_re_32(RT2_out1_re_1[32]),  // sfix16_En14
                                         .vector_re_33(RT2_out1_re_1[33]),  // sfix16_En14
                                         .vector_re_34(RT2_out1_re_1[34]),  // sfix16_En14
                                         .vector_re_35(RT2_out1_re_1[35]),  // sfix16_En14
                                         .vector_re_36(RT2_out1_re_1[36]),  // sfix16_En14
                                         .vector_re_37(RT2_out1_re_1[37]),  // sfix16_En14
                                         .vector_re_38(RT2_out1_re_1[38]),  // sfix16_En14
                                         .vector_re_39(RT2_out1_re_1[39]),  // sfix16_En14
                                         .vector_re_40(RT2_out1_re_1[40]),  // sfix16_En14
                                         .vector_re_41(RT2_out1_re_1[41]),  // sfix16_En14
                                         .vector_re_42(RT2_out1_re_1[42]),  // sfix16_En14
                                         .vector_re_43(RT2_out1_re_1[43]),  // sfix16_En14
                                         .vector_re_44(RT2_out1_re_1[44]),  // sfix16_En14
                                         .vector_re_45(RT2_out1_re_1[45]),  // sfix16_En14
                                         .vector_re_46(RT2_out1_re_1[46]),  // sfix16_En14
                                         .vector_re_47(RT2_out1_re_1[47]),  // sfix16_En14
                                         .vector_re_48(RT2_out1_re_1[48]),  // sfix16_En14
                                         .vector_re_49(RT2_out1_re_1[49]),  // sfix16_En14
                                         .vector_re_50(RT2_out1_re_1[50]),  // sfix16_En14
                                         .vector_re_51(RT2_out1_re_1[51]),  // sfix16_En14
                                         .vector_re_52(RT2_out1_re_1[52]),  // sfix16_En14
                                         .vector_re_53(RT2_out1_re_1[53]),  // sfix16_En14
                                         .vector_re_54(RT2_out1_re_1[54]),  // sfix16_En14
                                         .vector_re_55(RT2_out1_re_1[55]),  // sfix16_En14
                                         .vector_re_56(RT2_out1_re_1[56]),  // sfix16_En14
                                         .vector_re_57(RT2_out1_re_1[57]),  // sfix16_En14
                                         .vector_re_58(RT2_out1_re_1[58]),  // sfix16_En14
                                         .vector_re_59(RT2_out1_re_1[59]),  // sfix16_En14
                                         .vector_re_60(RT2_out1_re_1[60]),  // sfix16_En14
                                         .vector_re_61(RT2_out1_re_1[61]),  // sfix16_En14
                                         .vector_re_62(RT2_out1_re_1[62]),  // sfix16_En14
                                         .vector_re_63(RT2_out1_re_1[63]),  // sfix16_En14
                                         .vector_im_0(RT2_out1_im_1[0]),  // sfix16_En14
                                         .vector_im_1(RT2_out1_im_1[1]),  // sfix16_En14
                                         .vector_im_2(RT2_out1_im_1[2]),  // sfix16_En14
                                         .vector_im_3(RT2_out1_im_1[3]),  // sfix16_En14
                                         .vector_im_4(RT2_out1_im_1[4]),  // sfix16_En14
                                         .vector_im_5(RT2_out1_im_1[5]),  // sfix16_En14
                                         .vector_im_6(RT2_out1_im_1[6]),  // sfix16_En14
                                         .vector_im_7(RT2_out1_im_1[7]),  // sfix16_En14
                                         .vector_im_8(RT2_out1_im_1[8]),  // sfix16_En14
                                         .vector_im_9(RT2_out1_im_1[9]),  // sfix16_En14
                                         .vector_im_10(RT2_out1_im_1[10]),  // sfix16_En14
                                         .vector_im_11(RT2_out1_im_1[11]),  // sfix16_En14
                                         .vector_im_12(RT2_out1_im_1[12]),  // sfix16_En14
                                         .vector_im_13(RT2_out1_im_1[13]),  // sfix16_En14
                                         .vector_im_14(RT2_out1_im_1[14]),  // sfix16_En14
                                         .vector_im_15(RT2_out1_im_1[15]),  // sfix16_En14
                                         .vector_im_16(RT2_out1_im_1[16]),  // sfix16_En14
                                         .vector_im_17(RT2_out1_im_1[17]),  // sfix16_En14
                                         .vector_im_18(RT2_out1_im_1[18]),  // sfix16_En14
                                         .vector_im_19(RT2_out1_im_1[19]),  // sfix16_En14
                                         .vector_im_20(RT2_out1_im_1[20]),  // sfix16_En14
                                         .vector_im_21(RT2_out1_im_1[21]),  // sfix16_En14
                                         .vector_im_22(RT2_out1_im_1[22]),  // sfix16_En14
                                         .vector_im_23(RT2_out1_im_1[23]),  // sfix16_En14
                                         .vector_im_24(RT2_out1_im_1[24]),  // sfix16_En14
                                         .vector_im_25(RT2_out1_im_1[25]),  // sfix16_En14
                                         .vector_im_26(RT2_out1_im_1[26]),  // sfix16_En14
                                         .vector_im_27(RT2_out1_im_1[27]),  // sfix16_En14
                                         .vector_im_28(RT2_out1_im_1[28]),  // sfix16_En14
                                         .vector_im_29(RT2_out1_im_1[29]),  // sfix16_En14
                                         .vector_im_30(RT2_out1_im_1[30]),  // sfix16_En14
                                         .vector_im_31(RT2_out1_im_1[31]),  // sfix16_En14
                                         .vector_im_32(RT2_out1_im_1[32]),  // sfix16_En14
                                         .vector_im_33(RT2_out1_im_1[33]),  // sfix16_En14
                                         .vector_im_34(RT2_out1_im_1[34]),  // sfix16_En14
                                         .vector_im_35(RT2_out1_im_1[35]),  // sfix16_En14
                                         .vector_im_36(RT2_out1_im_1[36]),  // sfix16_En14
                                         .vector_im_37(RT2_out1_im_1[37]),  // sfix16_En14
                                         .vector_im_38(RT2_out1_im_1[38]),  // sfix16_En14
                                         .vector_im_39(RT2_out1_im_1[39]),  // sfix16_En14
                                         .vector_im_40(RT2_out1_im_1[40]),  // sfix16_En14
                                         .vector_im_41(RT2_out1_im_1[41]),  // sfix16_En14
                                         .vector_im_42(RT2_out1_im_1[42]),  // sfix16_En14
                                         .vector_im_43(RT2_out1_im_1[43]),  // sfix16_En14
                                         .vector_im_44(RT2_out1_im_1[44]),  // sfix16_En14
                                         .vector_im_45(RT2_out1_im_1[45]),  // sfix16_En14
                                         .vector_im_46(RT2_out1_im_1[46]),  // sfix16_En14
                                         .vector_im_47(RT2_out1_im_1[47]),  // sfix16_En14
                                         .vector_im_48(RT2_out1_im_1[48]),  // sfix16_En14
                                         .vector_im_49(RT2_out1_im_1[49]),  // sfix16_En14
                                         .vector_im_50(RT2_out1_im_1[50]),  // sfix16_En14
                                         .vector_im_51(RT2_out1_im_1[51]),  // sfix16_En14
                                         .vector_im_52(RT2_out1_im_1[52]),  // sfix16_En14
                                         .vector_im_53(RT2_out1_im_1[53]),  // sfix16_En14
                                         .vector_im_54(RT2_out1_im_1[54]),  // sfix16_En14
                                         .vector_im_55(RT2_out1_im_1[55]),  // sfix16_En14
                                         .vector_im_56(RT2_out1_im_1[56]),  // sfix16_En14
                                         .vector_im_57(RT2_out1_im_1[57]),  // sfix16_En14
                                         .vector_im_58(RT2_out1_im_1[58]),  // sfix16_En14
                                         .vector_im_59(RT2_out1_im_1[59]),  // sfix16_En14
                                         .vector_im_60(RT2_out1_im_1[60]),  // sfix16_En14
                                         .vector_im_61(RT2_out1_im_1[61]),  // sfix16_En14
                                         .vector_im_62(RT2_out1_im_1[62]),  // sfix16_En14
                                         .vector_im_63(RT2_out1_im_1[63]),  // sfix16_En14
                                         .complex_vector_re_0(OFDM_Modulator_out1_re_0),  // sfix16_En14
                                         .complex_vector_re_1(OFDM_Modulator_out1_re_1),  // sfix16_En14
                                         .complex_vector_re_2(OFDM_Modulator_out1_re_2),  // sfix16_En14
                                         .complex_vector_re_3(OFDM_Modulator_out1_re_3),  // sfix16_En14
                                         .complex_vector_re_4(OFDM_Modulator_out1_re_4),  // sfix16_En14
                                         .complex_vector_re_5(OFDM_Modulator_out1_re_5),  // sfix16_En14
                                         .complex_vector_re_6(OFDM_Modulator_out1_re_6),  // sfix16_En14
                                         .complex_vector_re_7(OFDM_Modulator_out1_re_7),  // sfix16_En14
                                         .complex_vector_re_8(OFDM_Modulator_out1_re_8),  // sfix16_En14
                                         .complex_vector_re_9(OFDM_Modulator_out1_re_9),  // sfix16_En14
                                         .complex_vector_re_10(OFDM_Modulator_out1_re_10),  // sfix16_En14
                                         .complex_vector_re_11(OFDM_Modulator_out1_re_11),  // sfix16_En14
                                         .complex_vector_re_12(OFDM_Modulator_out1_re_12),  // sfix16_En14
                                         .complex_vector_re_13(OFDM_Modulator_out1_re_13),  // sfix16_En14
                                         .complex_vector_re_14(OFDM_Modulator_out1_re_14),  // sfix16_En14
                                         .complex_vector_re_15(OFDM_Modulator_out1_re_15),  // sfix16_En14
                                         .complex_vector_re_16(OFDM_Modulator_out1_re_16),  // sfix16_En14
                                         .complex_vector_re_17(OFDM_Modulator_out1_re_17),  // sfix16_En14
                                         .complex_vector_re_18(OFDM_Modulator_out1_re_18),  // sfix16_En14
                                         .complex_vector_re_19(OFDM_Modulator_out1_re_19),  // sfix16_En14
                                         .complex_vector_re_20(OFDM_Modulator_out1_re_20),  // sfix16_En14
                                         .complex_vector_re_21(OFDM_Modulator_out1_re_21),  // sfix16_En14
                                         .complex_vector_re_22(OFDM_Modulator_out1_re_22),  // sfix16_En14
                                         .complex_vector_re_23(OFDM_Modulator_out1_re_23),  // sfix16_En14
                                         .complex_vector_re_24(OFDM_Modulator_out1_re_24),  // sfix16_En14
                                         .complex_vector_re_25(OFDM_Modulator_out1_re_25),  // sfix16_En14
                                         .complex_vector_re_26(OFDM_Modulator_out1_re_26),  // sfix16_En14
                                         .complex_vector_re_27(OFDM_Modulator_out1_re_27),  // sfix16_En14
                                         .complex_vector_re_28(OFDM_Modulator_out1_re_28),  // sfix16_En14
                                         .complex_vector_re_29(OFDM_Modulator_out1_re_29),  // sfix16_En14
                                         .complex_vector_re_30(OFDM_Modulator_out1_re_30),  // sfix16_En14
                                         .complex_vector_re_31(OFDM_Modulator_out1_re_31),  // sfix16_En14
                                         .complex_vector_re_32(OFDM_Modulator_out1_re_32),  // sfix16_En14
                                         .complex_vector_re_33(OFDM_Modulator_out1_re_33),  // sfix16_En14
                                         .complex_vector_re_34(OFDM_Modulator_out1_re_34),  // sfix16_En14
                                         .complex_vector_re_35(OFDM_Modulator_out1_re_35),  // sfix16_En14
                                         .complex_vector_re_36(OFDM_Modulator_out1_re_36),  // sfix16_En14
                                         .complex_vector_re_37(OFDM_Modulator_out1_re_37),  // sfix16_En14
                                         .complex_vector_re_38(OFDM_Modulator_out1_re_38),  // sfix16_En14
                                         .complex_vector_re_39(OFDM_Modulator_out1_re_39),  // sfix16_En14
                                         .complex_vector_re_40(OFDM_Modulator_out1_re_40),  // sfix16_En14
                                         .complex_vector_re_41(OFDM_Modulator_out1_re_41),  // sfix16_En14
                                         .complex_vector_re_42(OFDM_Modulator_out1_re_42),  // sfix16_En14
                                         .complex_vector_re_43(OFDM_Modulator_out1_re_43),  // sfix16_En14
                                         .complex_vector_re_44(OFDM_Modulator_out1_re_44),  // sfix16_En14
                                         .complex_vector_re_45(OFDM_Modulator_out1_re_45),  // sfix16_En14
                                         .complex_vector_re_46(OFDM_Modulator_out1_re_46),  // sfix16_En14
                                         .complex_vector_re_47(OFDM_Modulator_out1_re_47),  // sfix16_En14
                                         .complex_vector_re_48(OFDM_Modulator_out1_re_48),  // sfix16_En14
                                         .complex_vector_re_49(OFDM_Modulator_out1_re_49),  // sfix16_En14
                                         .complex_vector_re_50(OFDM_Modulator_out1_re_50),  // sfix16_En14
                                         .complex_vector_re_51(OFDM_Modulator_out1_re_51),  // sfix16_En14
                                         .complex_vector_re_52(OFDM_Modulator_out1_re_52),  // sfix16_En14
                                         .complex_vector_re_53(OFDM_Modulator_out1_re_53),  // sfix16_En14
                                         .complex_vector_re_54(OFDM_Modulator_out1_re_54),  // sfix16_En14
                                         .complex_vector_re_55(OFDM_Modulator_out1_re_55),  // sfix16_En14
                                         .complex_vector_re_56(OFDM_Modulator_out1_re_56),  // sfix16_En14
                                         .complex_vector_re_57(OFDM_Modulator_out1_re_57),  // sfix16_En14
                                         .complex_vector_re_58(OFDM_Modulator_out1_re_58),  // sfix16_En14
                                         .complex_vector_re_59(OFDM_Modulator_out1_re_59),  // sfix16_En14
                                         .complex_vector_re_60(OFDM_Modulator_out1_re_60),  // sfix16_En14
                                         .complex_vector_re_61(OFDM_Modulator_out1_re_61),  // sfix16_En14
                                         .complex_vector_re_62(OFDM_Modulator_out1_re_62),  // sfix16_En14
                                         .complex_vector_re_63(OFDM_Modulator_out1_re_63),  // sfix16_En14
                                         .complex_vector_im_0(OFDM_Modulator_out1_im_0),  // sfix16_En14
                                         .complex_vector_im_1(OFDM_Modulator_out1_im_1),  // sfix16_En14
                                         .complex_vector_im_2(OFDM_Modulator_out1_im_2),  // sfix16_En14
                                         .complex_vector_im_3(OFDM_Modulator_out1_im_3),  // sfix16_En14
                                         .complex_vector_im_4(OFDM_Modulator_out1_im_4),  // sfix16_En14
                                         .complex_vector_im_5(OFDM_Modulator_out1_im_5),  // sfix16_En14
                                         .complex_vector_im_6(OFDM_Modulator_out1_im_6),  // sfix16_En14
                                         .complex_vector_im_7(OFDM_Modulator_out1_im_7),  // sfix16_En14
                                         .complex_vector_im_8(OFDM_Modulator_out1_im_8),  // sfix16_En14
                                         .complex_vector_im_9(OFDM_Modulator_out1_im_9),  // sfix16_En14
                                         .complex_vector_im_10(OFDM_Modulator_out1_im_10),  // sfix16_En14
                                         .complex_vector_im_11(OFDM_Modulator_out1_im_11),  // sfix16_En14
                                         .complex_vector_im_12(OFDM_Modulator_out1_im_12),  // sfix16_En14
                                         .complex_vector_im_13(OFDM_Modulator_out1_im_13),  // sfix16_En14
                                         .complex_vector_im_14(OFDM_Modulator_out1_im_14),  // sfix16_En14
                                         .complex_vector_im_15(OFDM_Modulator_out1_im_15),  // sfix16_En14
                                         .complex_vector_im_16(OFDM_Modulator_out1_im_16),  // sfix16_En14
                                         .complex_vector_im_17(OFDM_Modulator_out1_im_17),  // sfix16_En14
                                         .complex_vector_im_18(OFDM_Modulator_out1_im_18),  // sfix16_En14
                                         .complex_vector_im_19(OFDM_Modulator_out1_im_19),  // sfix16_En14
                                         .complex_vector_im_20(OFDM_Modulator_out1_im_20),  // sfix16_En14
                                         .complex_vector_im_21(OFDM_Modulator_out1_im_21),  // sfix16_En14
                                         .complex_vector_im_22(OFDM_Modulator_out1_im_22),  // sfix16_En14
                                         .complex_vector_im_23(OFDM_Modulator_out1_im_23),  // sfix16_En14
                                         .complex_vector_im_24(OFDM_Modulator_out1_im_24),  // sfix16_En14
                                         .complex_vector_im_25(OFDM_Modulator_out1_im_25),  // sfix16_En14
                                         .complex_vector_im_26(OFDM_Modulator_out1_im_26),  // sfix16_En14
                                         .complex_vector_im_27(OFDM_Modulator_out1_im_27),  // sfix16_En14
                                         .complex_vector_im_28(OFDM_Modulator_out1_im_28),  // sfix16_En14
                                         .complex_vector_im_29(OFDM_Modulator_out1_im_29),  // sfix16_En14
                                         .complex_vector_im_30(OFDM_Modulator_out1_im_30),  // sfix16_En14
                                         .complex_vector_im_31(OFDM_Modulator_out1_im_31),  // sfix16_En14
                                         .complex_vector_im_32(OFDM_Modulator_out1_im_32),  // sfix16_En14
                                         .complex_vector_im_33(OFDM_Modulator_out1_im_33),  // sfix16_En14
                                         .complex_vector_im_34(OFDM_Modulator_out1_im_34),  // sfix16_En14
                                         .complex_vector_im_35(OFDM_Modulator_out1_im_35),  // sfix16_En14
                                         .complex_vector_im_36(OFDM_Modulator_out1_im_36),  // sfix16_En14
                                         .complex_vector_im_37(OFDM_Modulator_out1_im_37),  // sfix16_En14
                                         .complex_vector_im_38(OFDM_Modulator_out1_im_38),  // sfix16_En14
                                         .complex_vector_im_39(OFDM_Modulator_out1_im_39),  // sfix16_En14
                                         .complex_vector_im_40(OFDM_Modulator_out1_im_40),  // sfix16_En14
                                         .complex_vector_im_41(OFDM_Modulator_out1_im_41),  // sfix16_En14
                                         .complex_vector_im_42(OFDM_Modulator_out1_im_42),  // sfix16_En14
                                         .complex_vector_im_43(OFDM_Modulator_out1_im_43),  // sfix16_En14
                                         .complex_vector_im_44(OFDM_Modulator_out1_im_44),  // sfix16_En14
                                         .complex_vector_im_45(OFDM_Modulator_out1_im_45),  // sfix16_En14
                                         .complex_vector_im_46(OFDM_Modulator_out1_im_46),  // sfix16_En14
                                         .complex_vector_im_47(OFDM_Modulator_out1_im_47),  // sfix16_En14
                                         .complex_vector_im_48(OFDM_Modulator_out1_im_48),  // sfix16_En14
                                         .complex_vector_im_49(OFDM_Modulator_out1_im_49),  // sfix16_En14
                                         .complex_vector_im_50(OFDM_Modulator_out1_im_50),  // sfix16_En14
                                         .complex_vector_im_51(OFDM_Modulator_out1_im_51),  // sfix16_En14
                                         .complex_vector_im_52(OFDM_Modulator_out1_im_52),  // sfix16_En14
                                         .complex_vector_im_53(OFDM_Modulator_out1_im_53),  // sfix16_En14
                                         .complex_vector_im_54(OFDM_Modulator_out1_im_54),  // sfix16_En14
                                         .complex_vector_im_55(OFDM_Modulator_out1_im_55),  // sfix16_En14
                                         .complex_vector_im_56(OFDM_Modulator_out1_im_56),  // sfix16_En14
                                         .complex_vector_im_57(OFDM_Modulator_out1_im_57),  // sfix16_En14
                                         .complex_vector_im_58(OFDM_Modulator_out1_im_58),  // sfix16_En14
                                         .complex_vector_im_59(OFDM_Modulator_out1_im_59),  // sfix16_En14
                                         .complex_vector_im_60(OFDM_Modulator_out1_im_60),  // sfix16_En14
                                         .complex_vector_im_61(OFDM_Modulator_out1_im_61),  // sfix16_En14
                                         .complex_vector_im_62(OFDM_Modulator_out1_im_62),  // sfix16_En14
                                         .complex_vector_im_63(OFDM_Modulator_out1_im_63)  // sfix16_En14
                                         );

  IQ_Modulator u_IQ_Modulator (.clk(clk),
                               .reset(reset),
                               .enb_1_4096_0(enb_1_4096_0),
                               .enb(enb),
                               .complex_vector_re_0(OFDM_Modulator_out1_re_0),  // sfix16_En14
                               .complex_vector_re_1(OFDM_Modulator_out1_re_1),  // sfix16_En14
                               .complex_vector_re_2(OFDM_Modulator_out1_re_2),  // sfix16_En14
                               .complex_vector_re_3(OFDM_Modulator_out1_re_3),  // sfix16_En14
                               .complex_vector_re_4(OFDM_Modulator_out1_re_4),  // sfix16_En14
                               .complex_vector_re_5(OFDM_Modulator_out1_re_5),  // sfix16_En14
                               .complex_vector_re_6(OFDM_Modulator_out1_re_6),  // sfix16_En14
                               .complex_vector_re_7(OFDM_Modulator_out1_re_7),  // sfix16_En14
                               .complex_vector_re_8(OFDM_Modulator_out1_re_8),  // sfix16_En14
                               .complex_vector_re_9(OFDM_Modulator_out1_re_9),  // sfix16_En14
                               .complex_vector_re_10(OFDM_Modulator_out1_re_10),  // sfix16_En14
                               .complex_vector_re_11(OFDM_Modulator_out1_re_11),  // sfix16_En14
                               .complex_vector_re_12(OFDM_Modulator_out1_re_12),  // sfix16_En14
                               .complex_vector_re_13(OFDM_Modulator_out1_re_13),  // sfix16_En14
                               .complex_vector_re_14(OFDM_Modulator_out1_re_14),  // sfix16_En14
                               .complex_vector_re_15(OFDM_Modulator_out1_re_15),  // sfix16_En14
                               .complex_vector_re_16(OFDM_Modulator_out1_re_16),  // sfix16_En14
                               .complex_vector_re_17(OFDM_Modulator_out1_re_17),  // sfix16_En14
                               .complex_vector_re_18(OFDM_Modulator_out1_re_18),  // sfix16_En14
                               .complex_vector_re_19(OFDM_Modulator_out1_re_19),  // sfix16_En14
                               .complex_vector_re_20(OFDM_Modulator_out1_re_20),  // sfix16_En14
                               .complex_vector_re_21(OFDM_Modulator_out1_re_21),  // sfix16_En14
                               .complex_vector_re_22(OFDM_Modulator_out1_re_22),  // sfix16_En14
                               .complex_vector_re_23(OFDM_Modulator_out1_re_23),  // sfix16_En14
                               .complex_vector_re_24(OFDM_Modulator_out1_re_24),  // sfix16_En14
                               .complex_vector_re_25(OFDM_Modulator_out1_re_25),  // sfix16_En14
                               .complex_vector_re_26(OFDM_Modulator_out1_re_26),  // sfix16_En14
                               .complex_vector_re_27(OFDM_Modulator_out1_re_27),  // sfix16_En14
                               .complex_vector_re_28(OFDM_Modulator_out1_re_28),  // sfix16_En14
                               .complex_vector_re_29(OFDM_Modulator_out1_re_29),  // sfix16_En14
                               .complex_vector_re_30(OFDM_Modulator_out1_re_30),  // sfix16_En14
                               .complex_vector_re_31(OFDM_Modulator_out1_re_31),  // sfix16_En14
                               .complex_vector_re_32(OFDM_Modulator_out1_re_32),  // sfix16_En14
                               .complex_vector_re_33(OFDM_Modulator_out1_re_33),  // sfix16_En14
                               .complex_vector_re_34(OFDM_Modulator_out1_re_34),  // sfix16_En14
                               .complex_vector_re_35(OFDM_Modulator_out1_re_35),  // sfix16_En14
                               .complex_vector_re_36(OFDM_Modulator_out1_re_36),  // sfix16_En14
                               .complex_vector_re_37(OFDM_Modulator_out1_re_37),  // sfix16_En14
                               .complex_vector_re_38(OFDM_Modulator_out1_re_38),  // sfix16_En14
                               .complex_vector_re_39(OFDM_Modulator_out1_re_39),  // sfix16_En14
                               .complex_vector_re_40(OFDM_Modulator_out1_re_40),  // sfix16_En14
                               .complex_vector_re_41(OFDM_Modulator_out1_re_41),  // sfix16_En14
                               .complex_vector_re_42(OFDM_Modulator_out1_re_42),  // sfix16_En14
                               .complex_vector_re_43(OFDM_Modulator_out1_re_43),  // sfix16_En14
                               .complex_vector_re_44(OFDM_Modulator_out1_re_44),  // sfix16_En14
                               .complex_vector_re_45(OFDM_Modulator_out1_re_45),  // sfix16_En14
                               .complex_vector_re_46(OFDM_Modulator_out1_re_46),  // sfix16_En14
                               .complex_vector_re_47(OFDM_Modulator_out1_re_47),  // sfix16_En14
                               .complex_vector_re_48(OFDM_Modulator_out1_re_48),  // sfix16_En14
                               .complex_vector_re_49(OFDM_Modulator_out1_re_49),  // sfix16_En14
                               .complex_vector_re_50(OFDM_Modulator_out1_re_50),  // sfix16_En14
                               .complex_vector_re_51(OFDM_Modulator_out1_re_51),  // sfix16_En14
                               .complex_vector_re_52(OFDM_Modulator_out1_re_52),  // sfix16_En14
                               .complex_vector_re_53(OFDM_Modulator_out1_re_53),  // sfix16_En14
                               .complex_vector_re_54(OFDM_Modulator_out1_re_54),  // sfix16_En14
                               .complex_vector_re_55(OFDM_Modulator_out1_re_55),  // sfix16_En14
                               .complex_vector_re_56(OFDM_Modulator_out1_re_56),  // sfix16_En14
                               .complex_vector_re_57(OFDM_Modulator_out1_re_57),  // sfix16_En14
                               .complex_vector_re_58(OFDM_Modulator_out1_re_58),  // sfix16_En14
                               .complex_vector_re_59(OFDM_Modulator_out1_re_59),  // sfix16_En14
                               .complex_vector_re_60(OFDM_Modulator_out1_re_60),  // sfix16_En14
                               .complex_vector_re_61(OFDM_Modulator_out1_re_61),  // sfix16_En14
                               .complex_vector_re_62(OFDM_Modulator_out1_re_62),  // sfix16_En14
                               .complex_vector_re_63(OFDM_Modulator_out1_re_63),  // sfix16_En14
                               .complex_vector_im_0(OFDM_Modulator_out1_im_0),  // sfix16_En14
                               .complex_vector_im_1(OFDM_Modulator_out1_im_1),  // sfix16_En14
                               .complex_vector_im_2(OFDM_Modulator_out1_im_2),  // sfix16_En14
                               .complex_vector_im_3(OFDM_Modulator_out1_im_3),  // sfix16_En14
                               .complex_vector_im_4(OFDM_Modulator_out1_im_4),  // sfix16_En14
                               .complex_vector_im_5(OFDM_Modulator_out1_im_5),  // sfix16_En14
                               .complex_vector_im_6(OFDM_Modulator_out1_im_6),  // sfix16_En14
                               .complex_vector_im_7(OFDM_Modulator_out1_im_7),  // sfix16_En14
                               .complex_vector_im_8(OFDM_Modulator_out1_im_8),  // sfix16_En14
                               .complex_vector_im_9(OFDM_Modulator_out1_im_9),  // sfix16_En14
                               .complex_vector_im_10(OFDM_Modulator_out1_im_10),  // sfix16_En14
                               .complex_vector_im_11(OFDM_Modulator_out1_im_11),  // sfix16_En14
                               .complex_vector_im_12(OFDM_Modulator_out1_im_12),  // sfix16_En14
                               .complex_vector_im_13(OFDM_Modulator_out1_im_13),  // sfix16_En14
                               .complex_vector_im_14(OFDM_Modulator_out1_im_14),  // sfix16_En14
                               .complex_vector_im_15(OFDM_Modulator_out1_im_15),  // sfix16_En14
                               .complex_vector_im_16(OFDM_Modulator_out1_im_16),  // sfix16_En14
                               .complex_vector_im_17(OFDM_Modulator_out1_im_17),  // sfix16_En14
                               .complex_vector_im_18(OFDM_Modulator_out1_im_18),  // sfix16_En14
                               .complex_vector_im_19(OFDM_Modulator_out1_im_19),  // sfix16_En14
                               .complex_vector_im_20(OFDM_Modulator_out1_im_20),  // sfix16_En14
                               .complex_vector_im_21(OFDM_Modulator_out1_im_21),  // sfix16_En14
                               .complex_vector_im_22(OFDM_Modulator_out1_im_22),  // sfix16_En14
                               .complex_vector_im_23(OFDM_Modulator_out1_im_23),  // sfix16_En14
                               .complex_vector_im_24(OFDM_Modulator_out1_im_24),  // sfix16_En14
                               .complex_vector_im_25(OFDM_Modulator_out1_im_25),  // sfix16_En14
                               .complex_vector_im_26(OFDM_Modulator_out1_im_26),  // sfix16_En14
                               .complex_vector_im_27(OFDM_Modulator_out1_im_27),  // sfix16_En14
                               .complex_vector_im_28(OFDM_Modulator_out1_im_28),  // sfix16_En14
                               .complex_vector_im_29(OFDM_Modulator_out1_im_29),  // sfix16_En14
                               .complex_vector_im_30(OFDM_Modulator_out1_im_30),  // sfix16_En14
                               .complex_vector_im_31(OFDM_Modulator_out1_im_31),  // sfix16_En14
                               .complex_vector_im_32(OFDM_Modulator_out1_im_32),  // sfix16_En14
                               .complex_vector_im_33(OFDM_Modulator_out1_im_33),  // sfix16_En14
                               .complex_vector_im_34(OFDM_Modulator_out1_im_34),  // sfix16_En14
                               .complex_vector_im_35(OFDM_Modulator_out1_im_35),  // sfix16_En14
                               .complex_vector_im_36(OFDM_Modulator_out1_im_36),  // sfix16_En14
                               .complex_vector_im_37(OFDM_Modulator_out1_im_37),  // sfix16_En14
                               .complex_vector_im_38(OFDM_Modulator_out1_im_38),  // sfix16_En14
                               .complex_vector_im_39(OFDM_Modulator_out1_im_39),  // sfix16_En14
                               .complex_vector_im_40(OFDM_Modulator_out1_im_40),  // sfix16_En14
                               .complex_vector_im_41(OFDM_Modulator_out1_im_41),  // sfix16_En14
                               .complex_vector_im_42(OFDM_Modulator_out1_im_42),  // sfix16_En14
                               .complex_vector_im_43(OFDM_Modulator_out1_im_43),  // sfix16_En14
                               .complex_vector_im_44(OFDM_Modulator_out1_im_44),  // sfix16_En14
                               .complex_vector_im_45(OFDM_Modulator_out1_im_45),  // sfix16_En14
                               .complex_vector_im_46(OFDM_Modulator_out1_im_46),  // sfix16_En14
                               .complex_vector_im_47(OFDM_Modulator_out1_im_47),  // sfix16_En14
                               .complex_vector_im_48(OFDM_Modulator_out1_im_48),  // sfix16_En14
                               .complex_vector_im_49(OFDM_Modulator_out1_im_49),  // sfix16_En14
                               .complex_vector_im_50(OFDM_Modulator_out1_im_50),  // sfix16_En14
                               .complex_vector_im_51(OFDM_Modulator_out1_im_51),  // sfix16_En14
                               .complex_vector_im_52(OFDM_Modulator_out1_im_52),  // sfix16_En14
                               .complex_vector_im_53(OFDM_Modulator_out1_im_53),  // sfix16_En14
                               .complex_vector_im_54(OFDM_Modulator_out1_im_54),  // sfix16_En14
                               .complex_vector_im_55(OFDM_Modulator_out1_im_55),  // sfix16_En14
                               .complex_vector_im_56(OFDM_Modulator_out1_im_56),  // sfix16_En14
                               .complex_vector_im_57(OFDM_Modulator_out1_im_57),  // sfix16_En14
                               .complex_vector_im_58(OFDM_Modulator_out1_im_58),  // sfix16_En14
                               .complex_vector_im_59(OFDM_Modulator_out1_im_59),  // sfix16_En14
                               .complex_vector_im_60(OFDM_Modulator_out1_im_60),  // sfix16_En14
                               .complex_vector_im_61(OFDM_Modulator_out1_im_61),  // sfix16_En14
                               .complex_vector_im_62(OFDM_Modulator_out1_im_62),  // sfix16_En14
                               .complex_vector_im_63(OFDM_Modulator_out1_im_63),  // sfix16_En14
                               .real_serial(IQ_Modulator_out1)  // sfix64_En29
                               );

  assign OFDM_Signal = IQ_Modulator_out1;

  assign ce_out = enb_1_1_1;

endmodule  // Transmitter

