-- -------------------------------------------------------------
-- 
-- File Name: C:\Users\acer\OneDrive\Documents\ITS CAK V2\Magang\BRIN\Progress\Matlab Simulink\HDL Coder\proyek\OFDM\Tx_OFDM\Cosine_HDL_Optimized.vhd
-- Created: 2023-04-09 19:16:07
-- 
-- Generated by MATLAB 9.14 and HDL Coder 4.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Cosine_HDL_Optimized
-- Source Path: Tx_OFDM/Transmitter/Cosine HDL Optimized
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.Transmitter_pkg.ALL;

ENTITY Cosine_HDL_Optimized IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        u                                 :   IN    std_logic_vector(63 DOWNTO 0);  -- sfix64_En34
        x                                 :   OUT   std_logic_vector(16 DOWNTO 0)  -- sfix17_En15
        );
END Cosine_HDL_Optimized;


ARCHITECTURE rtl OF Cosine_HDL_Optimized IS

  -- Constants
  CONSTANT Look_Up_Table_data             : vector_of_signed17(0 TO 63) := 
    (to_signed(16#00000#, 17), to_signed(16#00324#, 17), to_signed(16#00648#, 17), to_signed(16#0096B#, 17),
     to_signed(16#00C8C#, 17), to_signed(16#00FAB#, 17), to_signed(16#012C8#, 17), to_signed(16#015E2#, 17),
     to_signed(16#018F9#, 17), to_signed(16#01C0C#, 17), to_signed(16#01F1A#, 17), to_signed(16#02224#, 17),
     to_signed(16#02528#, 17), to_signed(16#02827#, 17), to_signed(16#02B1F#, 17), to_signed(16#02E11#, 17),
     to_signed(16#030FC#, 17), to_signed(16#033DF#, 17), to_signed(16#036BA#, 17), to_signed(16#0398D#, 17),
     to_signed(16#03C57#, 17), to_signed(16#03F17#, 17), to_signed(16#041CE#, 17), to_signed(16#0447B#, 17),
     to_signed(16#0471D#, 17), to_signed(16#049B4#, 17), to_signed(16#04C40#, 17), to_signed(16#04EC0#, 17),
     to_signed(16#05134#, 17), to_signed(16#0539B#, 17), to_signed(16#055F6#, 17), to_signed(16#05843#, 17),
     to_signed(16#05A82#, 17), to_signed(16#05CB4#, 17), to_signed(16#05ED7#, 17), to_signed(16#060EC#, 17),
     to_signed(16#062F2#, 17), to_signed(16#064E9#, 17), to_signed(16#066D0#, 17), to_signed(16#068A7#, 17),
     to_signed(16#06A6E#, 17), to_signed(16#06C24#, 17), to_signed(16#06DCA#, 17), to_signed(16#06F5F#, 17),
     to_signed(16#070E3#, 17), to_signed(16#07255#, 17), to_signed(16#073B6#, 17), to_signed(16#07505#, 17),
     to_signed(16#07642#, 17), to_signed(16#0776C#, 17), to_signed(16#07885#, 17), to_signed(16#0798A#, 17),
     to_signed(16#07A7D#, 17), to_signed(16#07B5D#, 17), to_signed(16#07C2A#, 17), to_signed(16#07CE4#, 17),
     to_signed(16#07D8A#, 17), to_signed(16#07E1E#, 17), to_signed(16#07E9D#, 17), to_signed(16#07F0A#, 17),
     to_signed(16#07F62#, 17), to_signed(16#07FA7#, 17), to_signed(16#07FD9#, 17), to_signed(16#07FF6#, 17));  -- sfix17 [64]

  -- Signals
  SIGNAL u_signed                         : signed(63 DOWNTO 0);  -- sfix64_En34
  SIGNAL insig_out1                       : unsigned(7 DOWNTO 0);  -- ufix8_En8
  SIGNAL Point25_out1                     : unsigned(16 DOWNTO 0);  -- ufix17_En17
  SIGNAL LTEp25_1_cast                    : unsigned(16 DOWNTO 0);  -- ufix17_En17
  SIGNAL LTEp25_relop1                    : std_logic;
  SIGNAL Point75_out1                     : unsigned(16 DOWNTO 0);  -- ufix17_En17
  SIGNAL GTEp75_1_cast                    : unsigned(16 DOWNTO 0);  -- ufix17_En17
  SIGNAL GTEp75_relop1                    : std_logic;
  SIGNAL alpha1st_or_4th_Quad_bool        : std_logic;
  SIGNAL alpha1st_or_4th_Quad_out1        : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL RAMDelayBalance_out1             : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL pow2switch_out1                  : std_logic;
  SIGNAL Point50_out1                     : unsigned(16 DOWNTO 0);  -- ufix17_En17
  SIGNAL p75mA_sub_cast                   : signed(31 DOWNTO 0);  -- sfix32_En17
  SIGNAL p75mA_sub_cast_1                 : signed(31 DOWNTO 0);  -- sfix32_En17
  SIGNAL p75mA_sub_temp                   : signed(31 DOWNTO 0);  -- sfix32_En17
  SIGNAL p75mA_out1                       : unsigned(31 DOWNTO 0);  -- ufix32_En17
  SIGNAL Amp75_sub_cast                   : signed(31 DOWNTO 0);  -- sfix32_En17
  SIGNAL Amp75_sub_cast_1                 : signed(31 DOWNTO 0);  -- sfix32_En17
  SIGNAL Amp75_sub_temp                   : signed(31 DOWNTO 0);  -- sfix32_En17
  SIGNAL Amp75_out1                       : unsigned(31 DOWNTO 0);  -- ufix32_En17
  SIGNAL Amp25_sub_cast                   : signed(31 DOWNTO 0);  -- sfix32_En17
  SIGNAL Amp25_sub_cast_1                 : signed(31 DOWNTO 0);  -- sfix32_En17
  SIGNAL Amp25_sub_temp                   : signed(31 DOWNTO 0);  -- sfix32_En17
  SIGNAL Amp25_out1                       : unsigned(31 DOWNTO 0);  -- ufix32_En17
  SIGNAL p25mA_sub_cast                   : signed(31 DOWNTO 0);  -- sfix32_En17
  SIGNAL p25mA_sub_cast_1                 : signed(31 DOWNTO 0);  -- sfix32_En17
  SIGNAL p25mA_sub_temp                   : signed(31 DOWNTO 0);  -- sfix32_En17
  SIGNAL p25mA_out1                       : unsigned(31 DOWNTO 0);  -- ufix32_En17
  SIGNAL LTEp50_1_cast                    : unsigned(16 DOWNTO 0);  -- ufix17_En17
  SIGNAL LTEp50_relop1                    : std_logic;
  SIGNAL QuadHandle1b_out1                : unsigned(31 DOWNTO 0);  -- ufix32_En17
  SIGNAL QuadHandle1b_out1_dtc            : unsigned(7 DOWNTO 0);  -- ufix8_En8
  SIGNAL QuadHandle1a_out1                : unsigned(31 DOWNTO 0);  -- ufix32_En17
  SIGNAL QuadHandle1a_out1_dtc            : unsigned(7 DOWNTO 0);  -- ufix8_En8
  SIGNAL QuadHandle2_out1                 : unsigned(7 DOWNTO 0);  -- ufix8_En8
  SIGNAL CastU16En1_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL CastU16En3_out1                  : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL CastU16En2_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Saturation_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch_out1                      : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Look_Up_Table_k                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Look_Up_Table_out1               : signed(16 DOWNTO 0);  -- sfix17_En15
  SIGNAL Look_Up_Table_out1_1             : signed(16 DOWNTO 0) := to_signed(16#00000#, 17);  -- sfix17_En15
  SIGNAL Negate_cast                      : signed(17 DOWNTO 0);  -- sfix18_En15
  SIGNAL Negate_cast_1                    : signed(17 DOWNTO 0);  -- sfix18_En15
  SIGNAL Negate_out1                      : signed(16 DOWNTO 0);  -- sfix17_En15
  SIGNAL Cosine                           : signed(16 DOWNTO 0);  -- sfix17_En15
  SIGNAL Cosine_1                         : signed(16 DOWNTO 0);  -- sfix17_En15

BEGIN
  -- (C) 2016 Mathworks, Inc

  u_signed <= signed(u);

  insig_out1 <= unsigned(u_signed(33 DOWNTO 26));

  Point25_out1 <= to_unsigned(16#08000#, 17);

  LTEp25_1_cast <= insig_out1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
  
  LTEp25_relop1 <= '1' WHEN LTEp25_1_cast <= Point25_out1 ELSE
      '0';

  Point75_out1 <= to_unsigned(16#18000#, 17);

  GTEp75_1_cast <= insig_out1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
  
  GTEp75_relop1 <= '1' WHEN GTEp75_1_cast >= Point75_out1 ELSE
      '0';

  alpha1st_or_4th_Quad_bool <= LTEp25_relop1 OR GTEp75_relop1;

  alpha1st_or_4th_Quad_out1 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & alpha1st_or_4th_Quad_bool;

  delayMatch_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      RAMDelayBalance_out1 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        RAMDelayBalance_out1 <= alpha1st_or_4th_Quad_out1;
      END IF;
    END IF;
  END PROCESS delayMatch_process;


  pow2switch_out1 <= '1';

  Point50_out1 <= to_unsigned(16#10000#, 17);

  p75mA_sub_cast <= signed(resize(Point75_out1, 32));
  p75mA_sub_cast_1 <= signed(resize(insig_out1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32));
  p75mA_sub_temp <= p75mA_sub_cast - p75mA_sub_cast_1;
  p75mA_out1 <= unsigned(p75mA_sub_temp);

  Amp75_sub_cast <= signed(resize(insig_out1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32));
  Amp75_sub_cast_1 <= signed(resize(Point75_out1, 32));
  Amp75_sub_temp <= Amp75_sub_cast - Amp75_sub_cast_1;
  Amp75_out1 <= unsigned(Amp75_sub_temp);

  Amp25_sub_cast <= signed(resize(insig_out1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32));
  Amp25_sub_cast_1 <= signed(resize(Point25_out1, 32));
  Amp25_sub_temp <= Amp25_sub_cast - Amp25_sub_cast_1;
  Amp25_out1 <= unsigned(Amp25_sub_temp);

  p25mA_sub_cast <= signed(resize(Point25_out1, 32));
  p25mA_sub_cast_1 <= signed(resize(insig_out1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32));
  p25mA_sub_temp <= p25mA_sub_cast - p25mA_sub_cast_1;
  p25mA_out1 <= unsigned(p25mA_sub_temp);

  LTEp50_1_cast <= insig_out1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
  
  LTEp50_relop1 <= '1' WHEN LTEp50_1_cast <= Point50_out1 ELSE
      '0';

  
  QuadHandle1b_out1 <= p75mA_out1 WHEN GTEp75_relop1 = '0' ELSE
      Amp75_out1;

  
  QuadHandle1b_out1_dtc <= "11111111" WHEN QuadHandle1b_out1(31 DOWNTO 17) /= "000000000000000" ELSE
      QuadHandle1b_out1(16 DOWNTO 9);

  
  QuadHandle1a_out1 <= Amp25_out1 WHEN LTEp25_relop1 = '0' ELSE
      p25mA_out1;

  
  QuadHandle1a_out1_dtc <= "11111111" WHEN QuadHandle1a_out1(31 DOWNTO 17) /= "000000000000000" ELSE
      QuadHandle1a_out1(16 DOWNTO 9);

  
  QuadHandle2_out1 <= QuadHandle1b_out1_dtc WHEN LTEp50_relop1 = '0' ELSE
      QuadHandle1a_out1_dtc;

  CastU16En1_out1 <= QuadHandle2_out1;

  CastU16En3_out1 <= resize(CastU16En1_out1, 9);

  
  CastU16En2_out1 <= "11111111" WHEN CastU16En3_out1(8) /= '0' ELSE
      CastU16En3_out1(7 DOWNTO 0);

  -- saturation block maybe optimized away
  -- if the NumDataPoints is a power of 2
  
  Saturation_out1 <= to_unsigned(16#3F#, 8) WHEN CastU16En2_out1 > to_unsigned(16#3F#, 8) ELSE
      CastU16En2_out1;

  
  Switch_out1 <= CastU16En2_out1 WHEN pow2switch_out1 = '0' ELSE
      Saturation_out1;

  
  Look_Up_Table_k <= to_unsigned(16#00#, 6) WHEN Switch_out1 = to_unsigned(16#00#, 8) ELSE
      to_unsigned(16#3F#, 6) WHEN Switch_out1 >= to_unsigned(16#3F#, 8) ELSE
      Switch_out1(5 DOWNTO 0);
  Look_Up_Table_out1 <= Look_Up_Table_data(to_integer(Look_Up_Table_k));

  PipelineRegister_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Look_Up_Table_out1_1 <= Look_Up_Table_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister_process;


  Negate_cast <= resize(Look_Up_Table_out1_1, 18);
  Negate_cast_1 <=  - (Negate_cast);
  Negate_out1 <= Negate_cast_1(16 DOWNTO 0);

  
  Cosine <= Negate_out1 WHEN RAMDelayBalance_out1 = to_unsigned(16#00#, 8) ELSE
      Look_Up_Table_out1_1;

  Cosine_1 <= Cosine;

  x <= std_logic_vector(Cosine_1);

END rtl;

