-- -------------------------------------------------------------
-- 
-- File Name: C:\Users\acer\OneDrive\Documents\ITS CAK V2\Magang\BRIN\Progress\Matlab Simulink\HDL Coder\proyek\OFDM\Tx_OFDM\RADIX22FFT_bitNaturalMux_9.vhd
-- Created: 2023-04-09 19:16:05
-- 
-- Generated by MATLAB 9.14 and HDL Coder 4.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: RADIX22FFT_bitNaturalMux_9
-- Source Path: dsphdl.IFFT/RADIX22FFT_bitNaturalMux_9
-- Hierarchy Level: 3
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.Transmitter_pkg.ALL;

ENTITY RADIX22FFT_bitNaturalMux_9 IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb_1_960_0                       :   IN    std_logic;
        dMem_re_v                         :   IN    vector_of_std_logic_vector16(0 TO 63);  -- sfix16_En14 [64]
        dMem_im_v                         :   IN    vector_of_std_logic_vector16(0 TO 63);  -- sfix16_En14 [64]
        dMem_vld1                         :   IN    std_logic;
        dMux_re9                          :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        dMux_im9                          :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En14
        );
END RADIX22FFT_bitNaturalMux_9;


ARCHITECTURE rtl OF RADIX22FFT_bitNaturalMux_9 IS

  -- Signals
  SIGNAL dMem_re_v_signed                 : vector_of_std_logic_vector16(0 TO 63);  -- ufix16 [64]
  SIGNAL dMem_im_v_signed                 : vector_of_std_logic_vector16(0 TO 63);  -- ufix16 [64]
  SIGNAL outMuxSel_idx                    : unsigned(6 DOWNTO 0);  -- ufix7
  SIGNAL outMuxSel_MUXSelReg1             : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL outMuxSel_MUXSelVldReg1          : std_logic;
  SIGNAL outMuxSel_xorCnt                 : std_logic;  -- ufix1
  SIGNAL outMuxSel_idx_next               : unsigned(6 DOWNTO 0);  -- ufix7
  SIGNAL outMuxSel_MUXSelReg1_next        : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL outMuxSel_MUXSelVldReg1_next     : std_logic;
  SIGNAL outMuxSel_xorCnt_next            : std_logic;  -- ufix1
  SIGNAL MUXSel                           : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL MUXSel_vld                       : std_logic;
  SIGNAL intdelay_reg                     : std_logic_vector(0 TO 4);  -- ufix1 [5]
  SIGNAL intdelay_reg_next                : std_logic_vector(0 TO 4);  -- ufix1 [5]
  SIGNAL dMuxSelDly_vld                   : std_logic;
  SIGNAL dMem_re_v_0                      : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg1                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_1                      : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg2                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_2                      : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg3                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_3                      : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg4                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_4                      : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg5                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_5                      : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg6                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_6                      : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg7                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_7                      : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg8                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_8                      : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg9                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_9                      : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg10                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_10                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg11                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_11                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg12                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_12                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg13                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_13                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg14                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_14                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg15                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_15                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg16                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_16                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg17                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_17                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg18                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_18                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg19                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_19                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg20                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_20                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg21                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_21                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg22                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_22                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg23                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_23                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg24                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_24                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg25                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_25                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg26                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_26                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg27                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_27                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg28                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_28                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg29                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_29                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg30                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_30                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg31                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_31                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg32                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_32                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg33                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_33                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg34                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_34                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg35                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_35                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg36                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_36                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg37                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_37                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg38                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_38                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg39                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_39                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg40                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_40                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg41                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_41                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg42                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_42                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg43                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_43                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg44                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_44                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg45                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_45                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg46                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_46                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg47                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_47                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg48                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_48                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg49                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_49                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg50                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_50                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg51                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_51                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg52                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_52                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg53                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_53                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg54                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_54                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg55                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_55                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg56                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_56                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg57                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_57                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg58                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_58                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg59                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_59                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg60                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_60                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg61                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_61                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg62                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_62                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg63                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_v_63                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_re_reg64                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMux_re                          : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL intdelay_reg_1                   : vector_of_signed16(0 TO 4);  -- sfix16 [5]
  SIGNAL intdelay_reg_next_1              : vector_of_signed16(0 TO 4);  -- sfix16_En14 [5]
  SIGNAL dMuxDly_re                       : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMux_re9_tmp                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_0                      : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg1                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_1                      : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg2                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_2                      : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg3                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_3                      : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg4                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_4                      : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg5                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_5                      : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg6                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_6                      : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg7                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_7                      : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg8                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_8                      : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg9                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_9                      : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg10                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_10                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg11                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_11                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg12                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_12                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg13                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_13                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg14                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_14                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg15                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_15                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg16                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_16                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg17                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_17                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg18                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_18                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg19                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_19                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg20                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_20                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg21                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_21                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg22                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_22                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg23                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_23                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg24                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_24                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg25                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_25                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg26                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_26                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg27                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_27                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg28                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_28                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg29                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_29                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg30                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_30                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg31                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_31                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg32                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_32                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg33                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_33                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg34                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_34                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg35                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_35                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg36                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_36                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg37                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_37                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg38                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_38                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg39                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_39                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg40                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_40                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg41                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_41                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg42                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_42                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg43                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_43                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg44                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_44                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg45                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_45                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg46                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_46                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg47                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_47                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg48                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_48                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg49                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_49                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg50                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_50                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg51                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_51                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg52                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_52                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg53                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_53                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg54                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_54                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg55                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_55                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg56                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_56                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg57                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_57                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg58                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_58                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg59                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_59                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg60                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_60                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg61                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_61                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg62                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_62                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg63                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_v_63                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMem_im_reg64                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMux_im                          : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL intdelay_reg_2                   : vector_of_signed16(0 TO 4);  -- sfix16 [5]
  SIGNAL intdelay_reg_next_2              : vector_of_signed16(0 TO 4);  -- sfix16_En14 [5]
  SIGNAL dMuxDly_im                       : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL dMux_im9_tmp                     : signed(15 DOWNTO 0);  -- sfix16_En14

BEGIN
  dMem_re_v_signed <= dMem_re_v;

  dMem_im_v_signed <= dMem_im_v;

  -- outMuxSel
  outMuxSel_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      outMuxSel_MUXSelReg1 <= to_unsigned(16#00#, 6);
      outMuxSel_MUXSelVldReg1 <= '0';
      outMuxSel_idx <= to_unsigned(16#08#, 7);
      outMuxSel_xorCnt <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        outMuxSel_idx <= outMuxSel_idx_next;
        outMuxSel_MUXSelReg1 <= outMuxSel_MUXSelReg1_next;
        outMuxSel_MUXSelVldReg1 <= outMuxSel_MUXSelVldReg1_next;
        outMuxSel_xorCnt <= outMuxSel_xorCnt_next;
      END IF;
    END IF;
  END PROCESS outMuxSel_process;

  outMuxSel_output : PROCESS (dMem_vld1, outMuxSel_MUXSelReg1, outMuxSel_MUXSelVldReg1, outMuxSel_idx,
       outMuxSel_xorCnt)
    VARIABLE cast : unsigned(5 DOWNTO 0);
    VARIABLE add_cast : unsigned(1 DOWNTO 0);
    VARIABLE add_temp : unsigned(1 DOWNTO 0);
  BEGIN
    add_temp := to_unsigned(16#0#, 2);
    add_cast := to_unsigned(16#0#, 2);
    outMuxSel_idx_next <= outMuxSel_idx;
    outMuxSel_xorCnt_next <= outMuxSel_xorCnt;
    cast := '0' & '0' & '0' & '0' & '0' & outMuxSel_xorCnt;
    outMuxSel_MUXSelReg1_next <= outMuxSel_idx(5 DOWNTO 0) XOR cast;
    outMuxSel_MUXSelVldReg1_next <= dMem_vld1;
    IF dMem_vld1 = '1' THEN 
      outMuxSel_idx_next <= outMuxSel_idx + to_unsigned(16#40#, 7);
      add_cast := '0' & outMuxSel_xorCnt;
      add_temp := add_cast + to_unsigned(16#1#, 2);
      outMuxSel_xorCnt_next <= add_temp(0);
    END IF;
    MUXSel <= outMuxSel_MUXSelReg1;
    MUXSel_vld <= outMuxSel_MUXSelVldReg1;
  END PROCESS outMuxSel_output;


  intdelay_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      intdelay_reg(0) <= '0';
      intdelay_reg(1) <= '0';
      intdelay_reg(2) <= '0';
      intdelay_reg(3) <= '0';
      intdelay_reg(4) <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        intdelay_reg(0) <= intdelay_reg_next(0);
        intdelay_reg(1) <= intdelay_reg_next(1);
        intdelay_reg(2) <= intdelay_reg_next(2);
        intdelay_reg(3) <= intdelay_reg_next(3);
        intdelay_reg(4) <= intdelay_reg_next(4);
      END IF;
    END IF;
  END PROCESS intdelay_process;

  dMuxSelDly_vld <= intdelay_reg(4);
  intdelay_reg_next(0) <= MUXSel_vld;
  intdelay_reg_next(1) <= intdelay_reg(0);
  intdelay_reg_next(2) <= intdelay_reg(1);
  intdelay_reg_next(3) <= intdelay_reg(2);
  intdelay_reg_next(4) <= intdelay_reg(3);

  dMem_re_v_0 <= signed(dMem_re_v_signed(0));

  intdelay_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg1 <= dMem_re_v_0;
      END IF;
    END IF;
  END PROCESS intdelay_1_process;


  dMem_re_v_1 <= signed(dMem_re_v_signed(1));

  intdelay_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg2 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg2 <= dMem_re_v_1;
      END IF;
    END IF;
  END PROCESS intdelay_2_process;


  dMem_re_v_2 <= signed(dMem_re_v_signed(2));

  intdelay_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg3 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg3 <= dMem_re_v_2;
      END IF;
    END IF;
  END PROCESS intdelay_3_process;


  dMem_re_v_3 <= signed(dMem_re_v_signed(3));

  intdelay_4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg4 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg4 <= dMem_re_v_3;
      END IF;
    END IF;
  END PROCESS intdelay_4_process;


  dMem_re_v_4 <= signed(dMem_re_v_signed(4));

  intdelay_5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg5 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg5 <= dMem_re_v_4;
      END IF;
    END IF;
  END PROCESS intdelay_5_process;


  dMem_re_v_5 <= signed(dMem_re_v_signed(5));

  intdelay_6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg6 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg6 <= dMem_re_v_5;
      END IF;
    END IF;
  END PROCESS intdelay_6_process;


  dMem_re_v_6 <= signed(dMem_re_v_signed(6));

  intdelay_7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg7 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg7 <= dMem_re_v_6;
      END IF;
    END IF;
  END PROCESS intdelay_7_process;


  dMem_re_v_7 <= signed(dMem_re_v_signed(7));

  intdelay_8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg8 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg8 <= dMem_re_v_7;
      END IF;
    END IF;
  END PROCESS intdelay_8_process;


  dMem_re_v_8 <= signed(dMem_re_v_signed(8));

  intdelay_9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg9 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg9 <= dMem_re_v_8;
      END IF;
    END IF;
  END PROCESS intdelay_9_process;


  dMem_re_v_9 <= signed(dMem_re_v_signed(9));

  intdelay_10_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg10 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg10 <= dMem_re_v_9;
      END IF;
    END IF;
  END PROCESS intdelay_10_process;


  dMem_re_v_10 <= signed(dMem_re_v_signed(10));

  intdelay_11_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg11 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg11 <= dMem_re_v_10;
      END IF;
    END IF;
  END PROCESS intdelay_11_process;


  dMem_re_v_11 <= signed(dMem_re_v_signed(11));

  intdelay_12_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg12 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg12 <= dMem_re_v_11;
      END IF;
    END IF;
  END PROCESS intdelay_12_process;


  dMem_re_v_12 <= signed(dMem_re_v_signed(12));

  intdelay_13_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg13 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg13 <= dMem_re_v_12;
      END IF;
    END IF;
  END PROCESS intdelay_13_process;


  dMem_re_v_13 <= signed(dMem_re_v_signed(13));

  intdelay_14_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg14 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg14 <= dMem_re_v_13;
      END IF;
    END IF;
  END PROCESS intdelay_14_process;


  dMem_re_v_14 <= signed(dMem_re_v_signed(14));

  intdelay_15_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg15 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg15 <= dMem_re_v_14;
      END IF;
    END IF;
  END PROCESS intdelay_15_process;


  dMem_re_v_15 <= signed(dMem_re_v_signed(15));

  intdelay_16_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg16 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg16 <= dMem_re_v_15;
      END IF;
    END IF;
  END PROCESS intdelay_16_process;


  dMem_re_v_16 <= signed(dMem_re_v_signed(16));

  intdelay_17_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg17 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg17 <= dMem_re_v_16;
      END IF;
    END IF;
  END PROCESS intdelay_17_process;


  dMem_re_v_17 <= signed(dMem_re_v_signed(17));

  intdelay_18_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg18 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg18 <= dMem_re_v_17;
      END IF;
    END IF;
  END PROCESS intdelay_18_process;


  dMem_re_v_18 <= signed(dMem_re_v_signed(18));

  intdelay_19_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg19 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg19 <= dMem_re_v_18;
      END IF;
    END IF;
  END PROCESS intdelay_19_process;


  dMem_re_v_19 <= signed(dMem_re_v_signed(19));

  intdelay_20_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg20 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg20 <= dMem_re_v_19;
      END IF;
    END IF;
  END PROCESS intdelay_20_process;


  dMem_re_v_20 <= signed(dMem_re_v_signed(20));

  intdelay_21_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg21 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg21 <= dMem_re_v_20;
      END IF;
    END IF;
  END PROCESS intdelay_21_process;


  dMem_re_v_21 <= signed(dMem_re_v_signed(21));

  intdelay_22_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg22 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg22 <= dMem_re_v_21;
      END IF;
    END IF;
  END PROCESS intdelay_22_process;


  dMem_re_v_22 <= signed(dMem_re_v_signed(22));

  intdelay_23_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg23 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg23 <= dMem_re_v_22;
      END IF;
    END IF;
  END PROCESS intdelay_23_process;


  dMem_re_v_23 <= signed(dMem_re_v_signed(23));

  intdelay_24_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg24 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg24 <= dMem_re_v_23;
      END IF;
    END IF;
  END PROCESS intdelay_24_process;


  dMem_re_v_24 <= signed(dMem_re_v_signed(24));

  intdelay_25_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg25 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg25 <= dMem_re_v_24;
      END IF;
    END IF;
  END PROCESS intdelay_25_process;


  dMem_re_v_25 <= signed(dMem_re_v_signed(25));

  intdelay_26_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg26 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg26 <= dMem_re_v_25;
      END IF;
    END IF;
  END PROCESS intdelay_26_process;


  dMem_re_v_26 <= signed(dMem_re_v_signed(26));

  intdelay_27_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg27 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg27 <= dMem_re_v_26;
      END IF;
    END IF;
  END PROCESS intdelay_27_process;


  dMem_re_v_27 <= signed(dMem_re_v_signed(27));

  intdelay_28_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg28 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg28 <= dMem_re_v_27;
      END IF;
    END IF;
  END PROCESS intdelay_28_process;


  dMem_re_v_28 <= signed(dMem_re_v_signed(28));

  intdelay_29_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg29 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg29 <= dMem_re_v_28;
      END IF;
    END IF;
  END PROCESS intdelay_29_process;


  dMem_re_v_29 <= signed(dMem_re_v_signed(29));

  intdelay_30_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg30 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg30 <= dMem_re_v_29;
      END IF;
    END IF;
  END PROCESS intdelay_30_process;


  dMem_re_v_30 <= signed(dMem_re_v_signed(30));

  intdelay_31_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg31 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg31 <= dMem_re_v_30;
      END IF;
    END IF;
  END PROCESS intdelay_31_process;


  dMem_re_v_31 <= signed(dMem_re_v_signed(31));

  intdelay_32_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg32 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg32 <= dMem_re_v_31;
      END IF;
    END IF;
  END PROCESS intdelay_32_process;


  dMem_re_v_32 <= signed(dMem_re_v_signed(32));

  intdelay_33_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg33 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg33 <= dMem_re_v_32;
      END IF;
    END IF;
  END PROCESS intdelay_33_process;


  dMem_re_v_33 <= signed(dMem_re_v_signed(33));

  intdelay_34_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg34 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg34 <= dMem_re_v_33;
      END IF;
    END IF;
  END PROCESS intdelay_34_process;


  dMem_re_v_34 <= signed(dMem_re_v_signed(34));

  intdelay_35_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg35 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg35 <= dMem_re_v_34;
      END IF;
    END IF;
  END PROCESS intdelay_35_process;


  dMem_re_v_35 <= signed(dMem_re_v_signed(35));

  intdelay_36_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg36 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg36 <= dMem_re_v_35;
      END IF;
    END IF;
  END PROCESS intdelay_36_process;


  dMem_re_v_36 <= signed(dMem_re_v_signed(36));

  intdelay_37_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg37 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg37 <= dMem_re_v_36;
      END IF;
    END IF;
  END PROCESS intdelay_37_process;


  dMem_re_v_37 <= signed(dMem_re_v_signed(37));

  intdelay_38_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg38 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg38 <= dMem_re_v_37;
      END IF;
    END IF;
  END PROCESS intdelay_38_process;


  dMem_re_v_38 <= signed(dMem_re_v_signed(38));

  intdelay_39_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg39 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg39 <= dMem_re_v_38;
      END IF;
    END IF;
  END PROCESS intdelay_39_process;


  dMem_re_v_39 <= signed(dMem_re_v_signed(39));

  intdelay_40_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg40 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg40 <= dMem_re_v_39;
      END IF;
    END IF;
  END PROCESS intdelay_40_process;


  dMem_re_v_40 <= signed(dMem_re_v_signed(40));

  intdelay_41_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg41 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg41 <= dMem_re_v_40;
      END IF;
    END IF;
  END PROCESS intdelay_41_process;


  dMem_re_v_41 <= signed(dMem_re_v_signed(41));

  intdelay_42_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg42 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg42 <= dMem_re_v_41;
      END IF;
    END IF;
  END PROCESS intdelay_42_process;


  dMem_re_v_42 <= signed(dMem_re_v_signed(42));

  intdelay_43_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg43 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg43 <= dMem_re_v_42;
      END IF;
    END IF;
  END PROCESS intdelay_43_process;


  dMem_re_v_43 <= signed(dMem_re_v_signed(43));

  intdelay_44_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg44 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg44 <= dMem_re_v_43;
      END IF;
    END IF;
  END PROCESS intdelay_44_process;


  dMem_re_v_44 <= signed(dMem_re_v_signed(44));

  intdelay_45_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg45 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg45 <= dMem_re_v_44;
      END IF;
    END IF;
  END PROCESS intdelay_45_process;


  dMem_re_v_45 <= signed(dMem_re_v_signed(45));

  intdelay_46_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg46 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg46 <= dMem_re_v_45;
      END IF;
    END IF;
  END PROCESS intdelay_46_process;


  dMem_re_v_46 <= signed(dMem_re_v_signed(46));

  intdelay_47_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg47 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg47 <= dMem_re_v_46;
      END IF;
    END IF;
  END PROCESS intdelay_47_process;


  dMem_re_v_47 <= signed(dMem_re_v_signed(47));

  intdelay_48_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg48 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg48 <= dMem_re_v_47;
      END IF;
    END IF;
  END PROCESS intdelay_48_process;


  dMem_re_v_48 <= signed(dMem_re_v_signed(48));

  intdelay_49_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg49 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg49 <= dMem_re_v_48;
      END IF;
    END IF;
  END PROCESS intdelay_49_process;


  dMem_re_v_49 <= signed(dMem_re_v_signed(49));

  intdelay_50_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg50 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg50 <= dMem_re_v_49;
      END IF;
    END IF;
  END PROCESS intdelay_50_process;


  dMem_re_v_50 <= signed(dMem_re_v_signed(50));

  intdelay_51_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg51 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg51 <= dMem_re_v_50;
      END IF;
    END IF;
  END PROCESS intdelay_51_process;


  dMem_re_v_51 <= signed(dMem_re_v_signed(51));

  intdelay_52_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg52 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg52 <= dMem_re_v_51;
      END IF;
    END IF;
  END PROCESS intdelay_52_process;


  dMem_re_v_52 <= signed(dMem_re_v_signed(52));

  intdelay_53_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg53 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg53 <= dMem_re_v_52;
      END IF;
    END IF;
  END PROCESS intdelay_53_process;


  dMem_re_v_53 <= signed(dMem_re_v_signed(53));

  intdelay_54_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg54 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg54 <= dMem_re_v_53;
      END IF;
    END IF;
  END PROCESS intdelay_54_process;


  dMem_re_v_54 <= signed(dMem_re_v_signed(54));

  intdelay_55_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg55 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg55 <= dMem_re_v_54;
      END IF;
    END IF;
  END PROCESS intdelay_55_process;


  dMem_re_v_55 <= signed(dMem_re_v_signed(55));

  intdelay_56_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg56 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg56 <= dMem_re_v_55;
      END IF;
    END IF;
  END PROCESS intdelay_56_process;


  dMem_re_v_56 <= signed(dMem_re_v_signed(56));

  intdelay_57_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg57 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg57 <= dMem_re_v_56;
      END IF;
    END IF;
  END PROCESS intdelay_57_process;


  dMem_re_v_57 <= signed(dMem_re_v_signed(57));

  intdelay_58_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg58 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg58 <= dMem_re_v_57;
      END IF;
    END IF;
  END PROCESS intdelay_58_process;


  dMem_re_v_58 <= signed(dMem_re_v_signed(58));

  intdelay_59_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg59 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg59 <= dMem_re_v_58;
      END IF;
    END IF;
  END PROCESS intdelay_59_process;


  dMem_re_v_59 <= signed(dMem_re_v_signed(59));

  intdelay_60_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg60 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg60 <= dMem_re_v_59;
      END IF;
    END IF;
  END PROCESS intdelay_60_process;


  dMem_re_v_60 <= signed(dMem_re_v_signed(60));

  intdelay_61_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg61 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg61 <= dMem_re_v_60;
      END IF;
    END IF;
  END PROCESS intdelay_61_process;


  dMem_re_v_61 <= signed(dMem_re_v_signed(61));

  intdelay_62_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg62 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg62 <= dMem_re_v_61;
      END IF;
    END IF;
  END PROCESS intdelay_62_process;


  dMem_re_v_62 <= signed(dMem_re_v_signed(62));

  intdelay_63_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg63 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg63 <= dMem_re_v_62;
      END IF;
    END IF;
  END PROCESS intdelay_63_process;


  dMem_re_v_63 <= signed(dMem_re_v_signed(63));

  intdelay_64_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_re_reg64 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_re_reg64 <= dMem_re_v_63;
      END IF;
    END IF;
  END PROCESS intdelay_64_process;


  
  dMux_re <= dMem_re_reg1 WHEN MUXSel = to_unsigned(16#00#, 6) ELSE
      dMem_re_reg2 WHEN MUXSel = to_unsigned(16#01#, 6) ELSE
      dMem_re_reg3 WHEN MUXSel = to_unsigned(16#02#, 6) ELSE
      dMem_re_reg4 WHEN MUXSel = to_unsigned(16#03#, 6) ELSE
      dMem_re_reg5 WHEN MUXSel = to_unsigned(16#04#, 6) ELSE
      dMem_re_reg6 WHEN MUXSel = to_unsigned(16#05#, 6) ELSE
      dMem_re_reg7 WHEN MUXSel = to_unsigned(16#06#, 6) ELSE
      dMem_re_reg8 WHEN MUXSel = to_unsigned(16#07#, 6) ELSE
      dMem_re_reg9 WHEN MUXSel = to_unsigned(16#08#, 6) ELSE
      dMem_re_reg10 WHEN MUXSel = to_unsigned(16#09#, 6) ELSE
      dMem_re_reg11 WHEN MUXSel = to_unsigned(16#0A#, 6) ELSE
      dMem_re_reg12 WHEN MUXSel = to_unsigned(16#0B#, 6) ELSE
      dMem_re_reg13 WHEN MUXSel = to_unsigned(16#0C#, 6) ELSE
      dMem_re_reg14 WHEN MUXSel = to_unsigned(16#0D#, 6) ELSE
      dMem_re_reg15 WHEN MUXSel = to_unsigned(16#0E#, 6) ELSE
      dMem_re_reg16 WHEN MUXSel = to_unsigned(16#0F#, 6) ELSE
      dMem_re_reg17 WHEN MUXSel = to_unsigned(16#10#, 6) ELSE
      dMem_re_reg18 WHEN MUXSel = to_unsigned(16#11#, 6) ELSE
      dMem_re_reg19 WHEN MUXSel = to_unsigned(16#12#, 6) ELSE
      dMem_re_reg20 WHEN MUXSel = to_unsigned(16#13#, 6) ELSE
      dMem_re_reg21 WHEN MUXSel = to_unsigned(16#14#, 6) ELSE
      dMem_re_reg22 WHEN MUXSel = to_unsigned(16#15#, 6) ELSE
      dMem_re_reg23 WHEN MUXSel = to_unsigned(16#16#, 6) ELSE
      dMem_re_reg24 WHEN MUXSel = to_unsigned(16#17#, 6) ELSE
      dMem_re_reg25 WHEN MUXSel = to_unsigned(16#18#, 6) ELSE
      dMem_re_reg26 WHEN MUXSel = to_unsigned(16#19#, 6) ELSE
      dMem_re_reg27 WHEN MUXSel = to_unsigned(16#1A#, 6) ELSE
      dMem_re_reg28 WHEN MUXSel = to_unsigned(16#1B#, 6) ELSE
      dMem_re_reg29 WHEN MUXSel = to_unsigned(16#1C#, 6) ELSE
      dMem_re_reg30 WHEN MUXSel = to_unsigned(16#1D#, 6) ELSE
      dMem_re_reg31 WHEN MUXSel = to_unsigned(16#1E#, 6) ELSE
      dMem_re_reg32 WHEN MUXSel = to_unsigned(16#1F#, 6) ELSE
      dMem_re_reg33 WHEN MUXSel = to_unsigned(16#20#, 6) ELSE
      dMem_re_reg34 WHEN MUXSel = to_unsigned(16#21#, 6) ELSE
      dMem_re_reg35 WHEN MUXSel = to_unsigned(16#22#, 6) ELSE
      dMem_re_reg36 WHEN MUXSel = to_unsigned(16#23#, 6) ELSE
      dMem_re_reg37 WHEN MUXSel = to_unsigned(16#24#, 6) ELSE
      dMem_re_reg38 WHEN MUXSel = to_unsigned(16#25#, 6) ELSE
      dMem_re_reg39 WHEN MUXSel = to_unsigned(16#26#, 6) ELSE
      dMem_re_reg40 WHEN MUXSel = to_unsigned(16#27#, 6) ELSE
      dMem_re_reg41 WHEN MUXSel = to_unsigned(16#28#, 6) ELSE
      dMem_re_reg42 WHEN MUXSel = to_unsigned(16#29#, 6) ELSE
      dMem_re_reg43 WHEN MUXSel = to_unsigned(16#2A#, 6) ELSE
      dMem_re_reg44 WHEN MUXSel = to_unsigned(16#2B#, 6) ELSE
      dMem_re_reg45 WHEN MUXSel = to_unsigned(16#2C#, 6) ELSE
      dMem_re_reg46 WHEN MUXSel = to_unsigned(16#2D#, 6) ELSE
      dMem_re_reg47 WHEN MUXSel = to_unsigned(16#2E#, 6) ELSE
      dMem_re_reg48 WHEN MUXSel = to_unsigned(16#2F#, 6) ELSE
      dMem_re_reg49 WHEN MUXSel = to_unsigned(16#30#, 6) ELSE
      dMem_re_reg50 WHEN MUXSel = to_unsigned(16#31#, 6) ELSE
      dMem_re_reg51 WHEN MUXSel = to_unsigned(16#32#, 6) ELSE
      dMem_re_reg52 WHEN MUXSel = to_unsigned(16#33#, 6) ELSE
      dMem_re_reg53 WHEN MUXSel = to_unsigned(16#34#, 6) ELSE
      dMem_re_reg54 WHEN MUXSel = to_unsigned(16#35#, 6) ELSE
      dMem_re_reg55 WHEN MUXSel = to_unsigned(16#36#, 6) ELSE
      dMem_re_reg56 WHEN MUXSel = to_unsigned(16#37#, 6) ELSE
      dMem_re_reg57 WHEN MUXSel = to_unsigned(16#38#, 6) ELSE
      dMem_re_reg58 WHEN MUXSel = to_unsigned(16#39#, 6) ELSE
      dMem_re_reg59 WHEN MUXSel = to_unsigned(16#3A#, 6) ELSE
      dMem_re_reg60 WHEN MUXSel = to_unsigned(16#3B#, 6) ELSE
      dMem_re_reg61 WHEN MUXSel = to_unsigned(16#3C#, 6) ELSE
      dMem_re_reg62 WHEN MUXSel = to_unsigned(16#3D#, 6) ELSE
      dMem_re_reg63 WHEN MUXSel = to_unsigned(16#3E#, 6) ELSE
      dMem_re_reg64;

  intdelay_65_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      intdelay_reg_1(0) <= to_signed(16#0000#, 16);
      intdelay_reg_1(1) <= to_signed(16#0000#, 16);
      intdelay_reg_1(2) <= to_signed(16#0000#, 16);
      intdelay_reg_1(3) <= to_signed(16#0000#, 16);
      intdelay_reg_1(4) <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        intdelay_reg_1(0) <= intdelay_reg_next_1(0);
        intdelay_reg_1(1) <= intdelay_reg_next_1(1);
        intdelay_reg_1(2) <= intdelay_reg_next_1(2);
        intdelay_reg_1(3) <= intdelay_reg_next_1(3);
        intdelay_reg_1(4) <= intdelay_reg_next_1(4);
      END IF;
    END IF;
  END PROCESS intdelay_65_process;

  dMuxDly_re <= intdelay_reg_1(4);
  intdelay_reg_next_1(0) <= dMux_re;
  intdelay_reg_next_1(1) <= intdelay_reg_1(0);
  intdelay_reg_next_1(2) <= intdelay_reg_1(1);
  intdelay_reg_next_1(3) <= intdelay_reg_1(2);
  intdelay_reg_next_1(4) <= intdelay_reg_1(3);

  intdelay_66_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMux_re9_tmp <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' AND dMuxSelDly_vld = '1' THEN
        dMux_re9_tmp <= dMuxDly_re;
      END IF;
    END IF;
  END PROCESS intdelay_66_process;


  dMux_re9 <= std_logic_vector(dMux_re9_tmp);

  dMem_im_v_0 <= signed(dMem_im_v_signed(0));

  intdelay_67_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg1 <= dMem_im_v_0;
      END IF;
    END IF;
  END PROCESS intdelay_67_process;


  dMem_im_v_1 <= signed(dMem_im_v_signed(1));

  intdelay_68_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg2 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg2 <= dMem_im_v_1;
      END IF;
    END IF;
  END PROCESS intdelay_68_process;


  dMem_im_v_2 <= signed(dMem_im_v_signed(2));

  intdelay_69_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg3 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg3 <= dMem_im_v_2;
      END IF;
    END IF;
  END PROCESS intdelay_69_process;


  dMem_im_v_3 <= signed(dMem_im_v_signed(3));

  intdelay_70_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg4 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg4 <= dMem_im_v_3;
      END IF;
    END IF;
  END PROCESS intdelay_70_process;


  dMem_im_v_4 <= signed(dMem_im_v_signed(4));

  intdelay_71_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg5 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg5 <= dMem_im_v_4;
      END IF;
    END IF;
  END PROCESS intdelay_71_process;


  dMem_im_v_5 <= signed(dMem_im_v_signed(5));

  intdelay_72_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg6 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg6 <= dMem_im_v_5;
      END IF;
    END IF;
  END PROCESS intdelay_72_process;


  dMem_im_v_6 <= signed(dMem_im_v_signed(6));

  intdelay_73_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg7 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg7 <= dMem_im_v_6;
      END IF;
    END IF;
  END PROCESS intdelay_73_process;


  dMem_im_v_7 <= signed(dMem_im_v_signed(7));

  intdelay_74_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg8 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg8 <= dMem_im_v_7;
      END IF;
    END IF;
  END PROCESS intdelay_74_process;


  dMem_im_v_8 <= signed(dMem_im_v_signed(8));

  intdelay_75_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg9 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg9 <= dMem_im_v_8;
      END IF;
    END IF;
  END PROCESS intdelay_75_process;


  dMem_im_v_9 <= signed(dMem_im_v_signed(9));

  intdelay_76_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg10 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg10 <= dMem_im_v_9;
      END IF;
    END IF;
  END PROCESS intdelay_76_process;


  dMem_im_v_10 <= signed(dMem_im_v_signed(10));

  intdelay_77_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg11 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg11 <= dMem_im_v_10;
      END IF;
    END IF;
  END PROCESS intdelay_77_process;


  dMem_im_v_11 <= signed(dMem_im_v_signed(11));

  intdelay_78_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg12 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg12 <= dMem_im_v_11;
      END IF;
    END IF;
  END PROCESS intdelay_78_process;


  dMem_im_v_12 <= signed(dMem_im_v_signed(12));

  intdelay_79_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg13 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg13 <= dMem_im_v_12;
      END IF;
    END IF;
  END PROCESS intdelay_79_process;


  dMem_im_v_13 <= signed(dMem_im_v_signed(13));

  intdelay_80_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg14 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg14 <= dMem_im_v_13;
      END IF;
    END IF;
  END PROCESS intdelay_80_process;


  dMem_im_v_14 <= signed(dMem_im_v_signed(14));

  intdelay_81_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg15 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg15 <= dMem_im_v_14;
      END IF;
    END IF;
  END PROCESS intdelay_81_process;


  dMem_im_v_15 <= signed(dMem_im_v_signed(15));

  intdelay_82_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg16 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg16 <= dMem_im_v_15;
      END IF;
    END IF;
  END PROCESS intdelay_82_process;


  dMem_im_v_16 <= signed(dMem_im_v_signed(16));

  intdelay_83_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg17 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg17 <= dMem_im_v_16;
      END IF;
    END IF;
  END PROCESS intdelay_83_process;


  dMem_im_v_17 <= signed(dMem_im_v_signed(17));

  intdelay_84_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg18 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg18 <= dMem_im_v_17;
      END IF;
    END IF;
  END PROCESS intdelay_84_process;


  dMem_im_v_18 <= signed(dMem_im_v_signed(18));

  intdelay_85_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg19 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg19 <= dMem_im_v_18;
      END IF;
    END IF;
  END PROCESS intdelay_85_process;


  dMem_im_v_19 <= signed(dMem_im_v_signed(19));

  intdelay_86_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg20 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg20 <= dMem_im_v_19;
      END IF;
    END IF;
  END PROCESS intdelay_86_process;


  dMem_im_v_20 <= signed(dMem_im_v_signed(20));

  intdelay_87_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg21 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg21 <= dMem_im_v_20;
      END IF;
    END IF;
  END PROCESS intdelay_87_process;


  dMem_im_v_21 <= signed(dMem_im_v_signed(21));

  intdelay_88_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg22 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg22 <= dMem_im_v_21;
      END IF;
    END IF;
  END PROCESS intdelay_88_process;


  dMem_im_v_22 <= signed(dMem_im_v_signed(22));

  intdelay_89_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg23 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg23 <= dMem_im_v_22;
      END IF;
    END IF;
  END PROCESS intdelay_89_process;


  dMem_im_v_23 <= signed(dMem_im_v_signed(23));

  intdelay_90_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg24 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg24 <= dMem_im_v_23;
      END IF;
    END IF;
  END PROCESS intdelay_90_process;


  dMem_im_v_24 <= signed(dMem_im_v_signed(24));

  intdelay_91_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg25 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg25 <= dMem_im_v_24;
      END IF;
    END IF;
  END PROCESS intdelay_91_process;


  dMem_im_v_25 <= signed(dMem_im_v_signed(25));

  intdelay_92_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg26 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg26 <= dMem_im_v_25;
      END IF;
    END IF;
  END PROCESS intdelay_92_process;


  dMem_im_v_26 <= signed(dMem_im_v_signed(26));

  intdelay_93_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg27 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg27 <= dMem_im_v_26;
      END IF;
    END IF;
  END PROCESS intdelay_93_process;


  dMem_im_v_27 <= signed(dMem_im_v_signed(27));

  intdelay_94_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg28 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg28 <= dMem_im_v_27;
      END IF;
    END IF;
  END PROCESS intdelay_94_process;


  dMem_im_v_28 <= signed(dMem_im_v_signed(28));

  intdelay_95_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg29 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg29 <= dMem_im_v_28;
      END IF;
    END IF;
  END PROCESS intdelay_95_process;


  dMem_im_v_29 <= signed(dMem_im_v_signed(29));

  intdelay_96_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg30 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg30 <= dMem_im_v_29;
      END IF;
    END IF;
  END PROCESS intdelay_96_process;


  dMem_im_v_30 <= signed(dMem_im_v_signed(30));

  intdelay_97_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg31 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg31 <= dMem_im_v_30;
      END IF;
    END IF;
  END PROCESS intdelay_97_process;


  dMem_im_v_31 <= signed(dMem_im_v_signed(31));

  intdelay_98_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg32 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg32 <= dMem_im_v_31;
      END IF;
    END IF;
  END PROCESS intdelay_98_process;


  dMem_im_v_32 <= signed(dMem_im_v_signed(32));

  intdelay_99_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg33 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg33 <= dMem_im_v_32;
      END IF;
    END IF;
  END PROCESS intdelay_99_process;


  dMem_im_v_33 <= signed(dMem_im_v_signed(33));

  intdelay_100_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg34 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg34 <= dMem_im_v_33;
      END IF;
    END IF;
  END PROCESS intdelay_100_process;


  dMem_im_v_34 <= signed(dMem_im_v_signed(34));

  intdelay_101_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg35 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg35 <= dMem_im_v_34;
      END IF;
    END IF;
  END PROCESS intdelay_101_process;


  dMem_im_v_35 <= signed(dMem_im_v_signed(35));

  intdelay_102_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg36 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg36 <= dMem_im_v_35;
      END IF;
    END IF;
  END PROCESS intdelay_102_process;


  dMem_im_v_36 <= signed(dMem_im_v_signed(36));

  intdelay_103_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg37 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg37 <= dMem_im_v_36;
      END IF;
    END IF;
  END PROCESS intdelay_103_process;


  dMem_im_v_37 <= signed(dMem_im_v_signed(37));

  intdelay_104_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg38 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg38 <= dMem_im_v_37;
      END IF;
    END IF;
  END PROCESS intdelay_104_process;


  dMem_im_v_38 <= signed(dMem_im_v_signed(38));

  intdelay_105_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg39 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg39 <= dMem_im_v_38;
      END IF;
    END IF;
  END PROCESS intdelay_105_process;


  dMem_im_v_39 <= signed(dMem_im_v_signed(39));

  intdelay_106_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg40 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg40 <= dMem_im_v_39;
      END IF;
    END IF;
  END PROCESS intdelay_106_process;


  dMem_im_v_40 <= signed(dMem_im_v_signed(40));

  intdelay_107_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg41 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg41 <= dMem_im_v_40;
      END IF;
    END IF;
  END PROCESS intdelay_107_process;


  dMem_im_v_41 <= signed(dMem_im_v_signed(41));

  intdelay_108_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg42 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg42 <= dMem_im_v_41;
      END IF;
    END IF;
  END PROCESS intdelay_108_process;


  dMem_im_v_42 <= signed(dMem_im_v_signed(42));

  intdelay_109_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg43 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg43 <= dMem_im_v_42;
      END IF;
    END IF;
  END PROCESS intdelay_109_process;


  dMem_im_v_43 <= signed(dMem_im_v_signed(43));

  intdelay_110_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg44 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg44 <= dMem_im_v_43;
      END IF;
    END IF;
  END PROCESS intdelay_110_process;


  dMem_im_v_44 <= signed(dMem_im_v_signed(44));

  intdelay_111_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg45 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg45 <= dMem_im_v_44;
      END IF;
    END IF;
  END PROCESS intdelay_111_process;


  dMem_im_v_45 <= signed(dMem_im_v_signed(45));

  intdelay_112_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg46 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg46 <= dMem_im_v_45;
      END IF;
    END IF;
  END PROCESS intdelay_112_process;


  dMem_im_v_46 <= signed(dMem_im_v_signed(46));

  intdelay_113_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg47 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg47 <= dMem_im_v_46;
      END IF;
    END IF;
  END PROCESS intdelay_113_process;


  dMem_im_v_47 <= signed(dMem_im_v_signed(47));

  intdelay_114_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg48 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg48 <= dMem_im_v_47;
      END IF;
    END IF;
  END PROCESS intdelay_114_process;


  dMem_im_v_48 <= signed(dMem_im_v_signed(48));

  intdelay_115_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg49 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg49 <= dMem_im_v_48;
      END IF;
    END IF;
  END PROCESS intdelay_115_process;


  dMem_im_v_49 <= signed(dMem_im_v_signed(49));

  intdelay_116_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg50 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg50 <= dMem_im_v_49;
      END IF;
    END IF;
  END PROCESS intdelay_116_process;


  dMem_im_v_50 <= signed(dMem_im_v_signed(50));

  intdelay_117_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg51 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg51 <= dMem_im_v_50;
      END IF;
    END IF;
  END PROCESS intdelay_117_process;


  dMem_im_v_51 <= signed(dMem_im_v_signed(51));

  intdelay_118_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg52 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg52 <= dMem_im_v_51;
      END IF;
    END IF;
  END PROCESS intdelay_118_process;


  dMem_im_v_52 <= signed(dMem_im_v_signed(52));

  intdelay_119_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg53 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg53 <= dMem_im_v_52;
      END IF;
    END IF;
  END PROCESS intdelay_119_process;


  dMem_im_v_53 <= signed(dMem_im_v_signed(53));

  intdelay_120_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg54 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg54 <= dMem_im_v_53;
      END IF;
    END IF;
  END PROCESS intdelay_120_process;


  dMem_im_v_54 <= signed(dMem_im_v_signed(54));

  intdelay_121_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg55 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg55 <= dMem_im_v_54;
      END IF;
    END IF;
  END PROCESS intdelay_121_process;


  dMem_im_v_55 <= signed(dMem_im_v_signed(55));

  intdelay_122_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg56 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg56 <= dMem_im_v_55;
      END IF;
    END IF;
  END PROCESS intdelay_122_process;


  dMem_im_v_56 <= signed(dMem_im_v_signed(56));

  intdelay_123_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg57 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg57 <= dMem_im_v_56;
      END IF;
    END IF;
  END PROCESS intdelay_123_process;


  dMem_im_v_57 <= signed(dMem_im_v_signed(57));

  intdelay_124_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg58 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg58 <= dMem_im_v_57;
      END IF;
    END IF;
  END PROCESS intdelay_124_process;


  dMem_im_v_58 <= signed(dMem_im_v_signed(58));

  intdelay_125_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg59 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg59 <= dMem_im_v_58;
      END IF;
    END IF;
  END PROCESS intdelay_125_process;


  dMem_im_v_59 <= signed(dMem_im_v_signed(59));

  intdelay_126_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg60 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg60 <= dMem_im_v_59;
      END IF;
    END IF;
  END PROCESS intdelay_126_process;


  dMem_im_v_60 <= signed(dMem_im_v_signed(60));

  intdelay_127_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg61 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg61 <= dMem_im_v_60;
      END IF;
    END IF;
  END PROCESS intdelay_127_process;


  dMem_im_v_61 <= signed(dMem_im_v_signed(61));

  intdelay_128_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg62 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg62 <= dMem_im_v_61;
      END IF;
    END IF;
  END PROCESS intdelay_128_process;


  dMem_im_v_62 <= signed(dMem_im_v_signed(62));

  intdelay_129_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg63 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg63 <= dMem_im_v_62;
      END IF;
    END IF;
  END PROCESS intdelay_129_process;


  dMem_im_v_63 <= signed(dMem_im_v_signed(63));

  intdelay_130_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMem_im_reg64 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        dMem_im_reg64 <= dMem_im_v_63;
      END IF;
    END IF;
  END PROCESS intdelay_130_process;


  
  dMux_im <= dMem_im_reg1 WHEN MUXSel = to_unsigned(16#00#, 6) ELSE
      dMem_im_reg2 WHEN MUXSel = to_unsigned(16#01#, 6) ELSE
      dMem_im_reg3 WHEN MUXSel = to_unsigned(16#02#, 6) ELSE
      dMem_im_reg4 WHEN MUXSel = to_unsigned(16#03#, 6) ELSE
      dMem_im_reg5 WHEN MUXSel = to_unsigned(16#04#, 6) ELSE
      dMem_im_reg6 WHEN MUXSel = to_unsigned(16#05#, 6) ELSE
      dMem_im_reg7 WHEN MUXSel = to_unsigned(16#06#, 6) ELSE
      dMem_im_reg8 WHEN MUXSel = to_unsigned(16#07#, 6) ELSE
      dMem_im_reg9 WHEN MUXSel = to_unsigned(16#08#, 6) ELSE
      dMem_im_reg10 WHEN MUXSel = to_unsigned(16#09#, 6) ELSE
      dMem_im_reg11 WHEN MUXSel = to_unsigned(16#0A#, 6) ELSE
      dMem_im_reg12 WHEN MUXSel = to_unsigned(16#0B#, 6) ELSE
      dMem_im_reg13 WHEN MUXSel = to_unsigned(16#0C#, 6) ELSE
      dMem_im_reg14 WHEN MUXSel = to_unsigned(16#0D#, 6) ELSE
      dMem_im_reg15 WHEN MUXSel = to_unsigned(16#0E#, 6) ELSE
      dMem_im_reg16 WHEN MUXSel = to_unsigned(16#0F#, 6) ELSE
      dMem_im_reg17 WHEN MUXSel = to_unsigned(16#10#, 6) ELSE
      dMem_im_reg18 WHEN MUXSel = to_unsigned(16#11#, 6) ELSE
      dMem_im_reg19 WHEN MUXSel = to_unsigned(16#12#, 6) ELSE
      dMem_im_reg20 WHEN MUXSel = to_unsigned(16#13#, 6) ELSE
      dMem_im_reg21 WHEN MUXSel = to_unsigned(16#14#, 6) ELSE
      dMem_im_reg22 WHEN MUXSel = to_unsigned(16#15#, 6) ELSE
      dMem_im_reg23 WHEN MUXSel = to_unsigned(16#16#, 6) ELSE
      dMem_im_reg24 WHEN MUXSel = to_unsigned(16#17#, 6) ELSE
      dMem_im_reg25 WHEN MUXSel = to_unsigned(16#18#, 6) ELSE
      dMem_im_reg26 WHEN MUXSel = to_unsigned(16#19#, 6) ELSE
      dMem_im_reg27 WHEN MUXSel = to_unsigned(16#1A#, 6) ELSE
      dMem_im_reg28 WHEN MUXSel = to_unsigned(16#1B#, 6) ELSE
      dMem_im_reg29 WHEN MUXSel = to_unsigned(16#1C#, 6) ELSE
      dMem_im_reg30 WHEN MUXSel = to_unsigned(16#1D#, 6) ELSE
      dMem_im_reg31 WHEN MUXSel = to_unsigned(16#1E#, 6) ELSE
      dMem_im_reg32 WHEN MUXSel = to_unsigned(16#1F#, 6) ELSE
      dMem_im_reg33 WHEN MUXSel = to_unsigned(16#20#, 6) ELSE
      dMem_im_reg34 WHEN MUXSel = to_unsigned(16#21#, 6) ELSE
      dMem_im_reg35 WHEN MUXSel = to_unsigned(16#22#, 6) ELSE
      dMem_im_reg36 WHEN MUXSel = to_unsigned(16#23#, 6) ELSE
      dMem_im_reg37 WHEN MUXSel = to_unsigned(16#24#, 6) ELSE
      dMem_im_reg38 WHEN MUXSel = to_unsigned(16#25#, 6) ELSE
      dMem_im_reg39 WHEN MUXSel = to_unsigned(16#26#, 6) ELSE
      dMem_im_reg40 WHEN MUXSel = to_unsigned(16#27#, 6) ELSE
      dMem_im_reg41 WHEN MUXSel = to_unsigned(16#28#, 6) ELSE
      dMem_im_reg42 WHEN MUXSel = to_unsigned(16#29#, 6) ELSE
      dMem_im_reg43 WHEN MUXSel = to_unsigned(16#2A#, 6) ELSE
      dMem_im_reg44 WHEN MUXSel = to_unsigned(16#2B#, 6) ELSE
      dMem_im_reg45 WHEN MUXSel = to_unsigned(16#2C#, 6) ELSE
      dMem_im_reg46 WHEN MUXSel = to_unsigned(16#2D#, 6) ELSE
      dMem_im_reg47 WHEN MUXSel = to_unsigned(16#2E#, 6) ELSE
      dMem_im_reg48 WHEN MUXSel = to_unsigned(16#2F#, 6) ELSE
      dMem_im_reg49 WHEN MUXSel = to_unsigned(16#30#, 6) ELSE
      dMem_im_reg50 WHEN MUXSel = to_unsigned(16#31#, 6) ELSE
      dMem_im_reg51 WHEN MUXSel = to_unsigned(16#32#, 6) ELSE
      dMem_im_reg52 WHEN MUXSel = to_unsigned(16#33#, 6) ELSE
      dMem_im_reg53 WHEN MUXSel = to_unsigned(16#34#, 6) ELSE
      dMem_im_reg54 WHEN MUXSel = to_unsigned(16#35#, 6) ELSE
      dMem_im_reg55 WHEN MUXSel = to_unsigned(16#36#, 6) ELSE
      dMem_im_reg56 WHEN MUXSel = to_unsigned(16#37#, 6) ELSE
      dMem_im_reg57 WHEN MUXSel = to_unsigned(16#38#, 6) ELSE
      dMem_im_reg58 WHEN MUXSel = to_unsigned(16#39#, 6) ELSE
      dMem_im_reg59 WHEN MUXSel = to_unsigned(16#3A#, 6) ELSE
      dMem_im_reg60 WHEN MUXSel = to_unsigned(16#3B#, 6) ELSE
      dMem_im_reg61 WHEN MUXSel = to_unsigned(16#3C#, 6) ELSE
      dMem_im_reg62 WHEN MUXSel = to_unsigned(16#3D#, 6) ELSE
      dMem_im_reg63 WHEN MUXSel = to_unsigned(16#3E#, 6) ELSE
      dMem_im_reg64;

  intdelay_131_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      intdelay_reg_2(0) <= to_signed(16#0000#, 16);
      intdelay_reg_2(1) <= to_signed(16#0000#, 16);
      intdelay_reg_2(2) <= to_signed(16#0000#, 16);
      intdelay_reg_2(3) <= to_signed(16#0000#, 16);
      intdelay_reg_2(4) <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' THEN
        intdelay_reg_2(0) <= intdelay_reg_next_2(0);
        intdelay_reg_2(1) <= intdelay_reg_next_2(1);
        intdelay_reg_2(2) <= intdelay_reg_next_2(2);
        intdelay_reg_2(3) <= intdelay_reg_next_2(3);
        intdelay_reg_2(4) <= intdelay_reg_next_2(4);
      END IF;
    END IF;
  END PROCESS intdelay_131_process;

  dMuxDly_im <= intdelay_reg_2(4);
  intdelay_reg_next_2(0) <= dMux_im;
  intdelay_reg_next_2(1) <= intdelay_reg_2(0);
  intdelay_reg_next_2(2) <= intdelay_reg_2(1);
  intdelay_reg_next_2(3) <= intdelay_reg_2(2);
  intdelay_reg_next_2(4) <= intdelay_reg_2(3);

  intdelay_132_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dMux_im9_tmp <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_960_0 = '1' AND dMuxSelDly_vld = '1' THEN
        dMux_im9_tmp <= dMuxDly_im;
      END IF;
    END IF;
  END PROCESS intdelay_132_process;


  dMux_im9 <= std_logic_vector(dMux_im9_tmp);

END rtl;

